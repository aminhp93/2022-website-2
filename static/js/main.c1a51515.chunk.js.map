{"version":3,"sources":["pages/Nhi/IMG_2426.PNG","pages/Nhi/IMG_2432.JPG","reducers/index.ts","store/store.ts","pages/Nhi/Nhi.tsx","helpers/request.ts","helpers/urls.ts","services/account.ts","reducers/account.ts","pages/Stock/HistoryTrade/HistoryTrade.tsx","helpers/utils.ts","services/stock.ts","pages/Stock/StockTools/StockTools.tsx","pages/Stock/StockTestBreak/StockTestBreak_TestTab.tsx","pages/Stock/StockTestBreak/StockTestBreak_GraphsTab.tsx","pages/Stock/StockTestBreak/StockTestBreak_ScoreboardTab.tsx","pages/Stock/StockTestBreak/StockTestBreak.helpers.ts","pages/Stock/StockTestBreak/StockTestBreak_OverviewTab.tsx","pages/Stock/StockTestBreak/StockTestBreak.tsx","pages/Stock/StockMarketOverview/StockMarketOverview.tsx","pages/Stock/StockEvent/StockEvent.tsx","pages/Stock/StockNews.tsx","pages/Stock/Stock.tsx","pages/Note/Note.tsx","pages/RootLayout/RootLayout.tsx","index.tsx"],"names":["rootReducer","combineReducers","enhancer","composeEnhancers","compose","applyMiddleware","thunk","store","createStore","img1","require","img2","Nhi","useState","solved1","setSolved1","solved2","setSolved2","refAnimationInstance","useRef","intervalId","setIntervalId","getInstance","useCallback","instance","current","nextTickAnimation","getAnimationSettings","startAnimation","setInterval","setTimeout","stopAnimation","clearInterval","reset","useEffect","startDate","moment","diffCountDay","diff","percentCountDay","Number","toFixed","style","height","display","flexDirection","background","alignItems","justifyContent","fontSize","flex","padding","width","rows","columns","onSolved","imageSrc","default","marginTop","type","percent","color","HeartOutlined","GiftOutlined","refConfetti","position","pointerEvents","top","left","format","originXA","originXB","startVelocity","spread","ticks","zIndex","particleCount","origin","x","min","max","Math","random","y","headers","request","options","axios","create","client","then","res","catch","err","notification","error","message","description","String","placement","duration","AccountUrls","fromDate","toDate","index","AccountService","postAuthToken","data","method","url","fetchAccount","fetchAccountPortfolio","fetchAccountAssets","fetchAccountStocks","fetchOrdersHistory","fetchCashStatement","createSlice","name","initialState","reducers","mapDispatchToProps","a","password","username","token","connect","props","filterObj","endDate","orderStatus","listOrdersHistory","setListOrdersHistory","defaultColumns","title","dataIndex","key","align","render","transactionDate","execType","orderQuantity","toLocaleString","orderPrice","matchQuantity","matchAveragePrice","feeOrder","orderTime","mainColumns","finalChange","initialAmount","setColumns","getHistoryTrade","res2","filteredList","uniqBy","filter","i","ignoreSells","mappedList","map","j","orderID","length","listSell","stop","forEach","symbol","concat","push","listBuy","totalVolumeBuy","totalVolumeSell","sum","stop2","start","end","onClick","dataSource","pagination","scroll","DATE_FORMAT","StockService","getHistoricalQuotes","platform","add","toUpperCase","params","offset","limit","pageNumber","pageSize","getFundamental","getWatchlist","getStockNews","getStockNewsDetail","id","StockTools","listWatchlists","setListWatchlists","loading","setLoading","handleUpdateThanhKhoanVua","wlAll","symbols","wlBlacklist","finalList","includes","chunkedListSymbol","chunk","listPromises","Promise","all","partialRes","mappedRes","orderBy","minTotalValue","minBy","totalValue","minTotalVolume","totalVolume","BILLION","thanh_khoan_vua_wl","update","list","watchlistID","userName","success","Markdown","source","StockToolItem","dataAll","setData","join","value","setValue","getHistorialQuoteAll","getHistorialQuote","disabled","marginLeft","danger","onChange","e","target","onPressEnter","split","StockTestBreak_TestTab","StockTestBreak_GraphsTab","listDataKey","listColor","LineChart","margin","right","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","stroke","strokeWidth","StockTestBreak_ScoreboardTab","cb","setSymbol","tradingTime","priceChange","volume15dayChange","t3Change","sorter","b","highestChangePrice20day","highestPriceCloseDate","lowestChangePrice20day","lowestPriceCloseDate","singleColumns","sellDate","changeSellDate","totalNAV","baseNAV","combinedColumns","buyDate","percentChange","testVariableColumns","variableCombine","findSellDate","listData","result","buyItem","changePercent","buyItemIndex","var1","var2","var3","filteredListData","sortBy","sellIndex","next","adjClose","analyseData","fullData","sellDateObj","sortedData","dataObj","keyBy","d","isBefore","date","findBuyDate","isEmpty","RangePicker","DatePicker","Option","Select","StockTestBreak_OverviewTab","listSymbol","setListSymbol","setStartDate","setEndDate","setListData","selectedWatchlist","setSelectedWatchlist","testType","setTestType","combinedData","setCombinedData","testVariableData","setTestVariableData","setVolume15dayChange","getData","combined","testVariable","get","xxx","todayClose","yesterdayClose","diffInMonth","t3Price","t3PriceClose","arrVolume","totalDealVolume","mean","arr20day","highestPriceClose","maxBy","lowestPriceClose","previousDayChange","open","high","average","meanBy","analysedData","testList","console","log","failedSymbolList","failedSymbol","sortedRes","splice","maxLength","item","count","rootResult","range","var4","tempRes","cloneDeep","buyDateObj","objRes","clickTestCombine","dateFormat","listDropdown","children","objWatchlists","menu","Item","overflow","defaultValue","overlay","arrow","mode","allowClear","placeholder","TabPane","Tabs","StockTestBreak","tab","setTab","defaultActiveKey","StockMarketOverview","data1","setData1","data2","setData2","data3","setData3","data4","setData4","filtered","changePercentMin","changePercentMax","estimatedVolumeChange","fetch","watchlistName","xxx2","listItem","priceClose","todayItem","averageVolume15Days","dealVolume","todayVolume","sort","fetchList","className","StockEvent","modal","setModal","listEvents","setListEvents","tempEvent","setTempEvent","handleConfirmCreate","visible","onCancel","footer","time","content","cursor","StockEventItem","canEdit","setCanEdit","canDelete","setCanDelete","event","setEvent","handleConfirmUpdate","handleConfirmDelete","StockNews","setList","viewDetail","setViewDetail","newsDetail","setNewsDetail","listWatchlist","listWatching","mappedData","config","flatten","Date","getTime","fetchNewsDetail","parse","bordered","renderItem","postID","Stock","trigger","MoreOutlined","Note","note","setNote","tempNote","setTempNote","getStockNote","handleConfirm","RootLayout","keyMenu","setKeyMenu","handleChangeMenu","selectedKeys","App","path","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1a51515.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IMG_2426.6b1d8930.PNG\";","export default __webpack_public_path__ + \"static/media/IMG_2432.f494be7c.JPG\";","import { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk, { ThunkAction } from \"redux-thunk\"\nimport rootReducer from \"../reducers\"\nimport { Action } from '@reduxjs/toolkit';\n\nconst composeEnhancers =\n    typeof window === \"object\" &&\n        process.env.NODE_ENV === \"development\" &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\nconst store = createStore(rootReducer, enhancer)\n\nexport type DispatchType = typeof store.dispatch\n\nexport type RootStateType = ReturnType<typeof rootReducer>\n\nexport type ThunkActionType = ThunkAction<void, RootStateType, unknown, Action<string>>\n\nexport default store\n","\nimport { JigsawPuzzle } from 'react-jigsaw-puzzle/lib'\nimport 'react-jigsaw-puzzle/lib/jigsaw-puzzle.css'\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport ReactCanvasConfetti from \"react-canvas-confetti\";\nimport { Progress } from 'antd'\nimport { GiftOutlined, HeartOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst img1 = require('./IMG_2426.PNG')\nconst img2 = require('./IMG_2432.JPG')\n\nexport default function Nhi() {\n\n    const [solved1, setSolved1] = useState(false)\n    const [solved2, setSolved2] = useState(false)\n    const refAnimationInstance = useRef(null);\n    const [intervalId, setIntervalId] = useState(null);\n\n    const getInstance = useCallback((instance) => {\n        refAnimationInstance.current = instance;\n    }, []);\n\n    const nextTickAnimation = useCallback(() => {\n        if (refAnimationInstance.current) {\n            refAnimationInstance.current(getAnimationSettings(0.1, 0.3));\n            refAnimationInstance.current(getAnimationSettings(0.7, 0.9));\n        }\n    }, []);\n\n    const startAnimation = useCallback(() => {\n        if (!intervalId) {\n            setIntervalId(setInterval(nextTickAnimation, 400));\n        }\n        setTimeout(() => {\n            stopAnimation()\n        }, 5 * 1000)\n    }, [intervalId, nextTickAnimation]);\n\n    const pauseAnimation = useCallback(() => {\n        clearInterval(intervalId);\n        setIntervalId(null);\n    }, [intervalId]);\n\n    const stopAnimation = useCallback(() => {\n        clearInterval(intervalId);\n        setIntervalId(null);\n        refAnimationInstance.current && refAnimationInstance.current.reset();\n    }, [intervalId]);\n\n    useEffect(() => {\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [intervalId]);\n\n    let percent = 0;\n    if (solved1 || solved2) {\n        percent = 50\n    }\n    if (solved1 && solved2) {\n        percent = 100\n    }\n\n    const startDate = moment(\"2021-08-11\", \"YYYY-MM-DD\")\n    const now = moment();\n    const diffCountDay = now.diff(startDate, 'days')\n    const percentCountDay = Number((diffCountDay * 100 / (50 * 365)).toFixed(0))\n\n    return <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ height: \"100px\", background: 'lightpink', display: \"flex\", alignItems: 'center', justifyContent: \"center\", fontSize: \"30px\" }}>\n            {`Chuc Nhi sinh nhat vui ve`}\n        </div>\n        <div style={{ flex: 1, display: \"flex\", background: 'lightpink', justifyContent: \"space-between\", padding: \"0 200px\", alignItems: \"center\" }}>\n            <div style={{\n                width: \"300px\",\n                background: \"lightpink\",\n            }}>\n                <JigsawPuzzle\n                    rows={3}\n                    columns={3}\n                    onSolved={() => {\n                        setSolved1(true)\n                        if (solved2) startAnimation()\n                    }}\n                    imageSrc={img1.default} />\n                <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n                    {solved1 ?\n\n                        <Progress type=\"circle\" percent={100} width={50} />\n\n                        : <div style={{ fontSize: \"24px\" }}>Solve to unlock</div>\n                    }\n                </div>\n            </div>\n            <div>\n                {solved1 && solved2\n                    ? <div style={{ fontSize: \"30px\", color: \"red\", display: \"flex\", flexDirection: \"column\" }}><div>{`You are perfect couple`}</div> <HeartOutlined style={{ fontSize: '100px', color: 'red' }} /> </div>\n                    : <div style={{ fontSize: \"24px\" }}><GiftOutlined style={{ fontSize: '150px', color: 'red' }} /></div>}\n            </div>\n            <div style={{\n                width: \"300px\",\n                background: \"lightpink\",\n            }}>\n                <JigsawPuzzle\n                    rows={3}\n                    columns={3}\n                    onSolved={() => {\n                        setSolved2(true)\n                        if (solved1) startAnimation()\n                    }}\n                    imageSrc={img2.default} />\n                <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n                    {solved2\n                        ? <Progress type=\"circle\" percent={100} width={50} />\n                        : <div style={{ fontSize: \"24px\" }}>Solve to unlock</div>\n                    }\n                </div>\n            </div>\n            {/* <div>\n                <button onClick={startAnimation}>Start</button>\n                <button onClick={pauseAnimation}>Pause</button>\n                <button onClick={stopAnimation}>Stop</button>\n            </div> */}\n            <ReactCanvasConfetti refConfetti={getInstance} style={{\n                position: \"fixed\",\n                pointerEvents: \"none\",\n                width: \"100%\",\n                height: \"100%\",\n                top: 0,\n                left: 0\n            }} />\n\n        </div>\n\n        <div style={{ height: \"200px\", background: \"rgb(51 195 51)\", display: \"flex\", justifyContent: \"center\", padding: \"0 40px\" }}>\n            {solved1 && solved2 &&\n                <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"center\" }}>\n                    <Progress type=\"circle\" percent={percentCountDay} format={percent => `${diffCountDay} Days`} />\n                    <div style={{ marginTop: \"10px\" }}>{`Total: 50 Years`}</div>\n                </div>\n            }\n        </div>\n    </div>\n}\n\nfunction randomInRange(min: any, max: any) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction getAnimationSettings(originXA: any, originXB: any) {\n    return {\n        startVelocity: 30,\n        spread: 360,\n        ticks: 60,\n        zIndex: 0,\n        particleCount: 150,\n        origin: {\n            x: randomInRange(originXA, originXB),\n            y: Math.random() - 0.2\n        }\n    };\n}\n","\nimport axios from 'axios';\nimport { notification } from 'antd';\n\nlet headers = {\n    'Content-Type': 'application/json',\n};\n\n\nconst request = (options: any) => {\n    const onSuccess = (res: any) => res;\n    const onError = (err: any) => {\n        notification.error({\n            message: 'Error',\n            description: String(err),\n            placement: 'bottomLeft',\n            duration: 5,\n        });\n    }\n\n    if (options.headers) {\n        headers = options.headers\n    }\n\n    const client = axios.create({\n        headers\n    });\n\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n}\n\n\nexport default request\n","export const AccountUrls = {\n    postAuthToken: 'https://auth-api.vndirect.com.vn/v3/auth',\n    fetchAccount: 'https://trade-api.vndirect.com.vn/accounts/0001069456',\n    fetchAccountPortfolio: 'https://trade-api.vndirect.com.vn/accounts/v3/0001069456/portfolio',\n    fetchAccountAssets: 'https://trade-api.vndirect.com.vn/accounts/v2/0001069456/assets',\n    fetchAccountStocks: 'https://trade-api.vndirect.com.vn/accounts/v3/0001069456/stocks',\n    fetchOrdersHistory: (fromDate: string, toDate: string) => `https://trade-report-api.vndirect.com.vn/accounts/0001069456/orders_history/?fromDate=${fromDate}&toDate=${toDate}&pageSize=1000`,\n    fetchCashStatement: (index: number) => `https://trade-report-api.vndirect.com.vn/accounts/0001069456/cashStatement?fromDate=2017-01-01&index=${index}&offset=50&types=`\n}","import request from '../helpers/request';\nimport { AccountUrls } from '../helpers/urls';\n\nconst AccountService = {\n    postAuthToken(data: any) {\n        return request({\n            method: 'POST',\n            url: AccountUrls.postAuthToken,\n            data\n        });\n    },\n    fetchAccount(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccount,\n        });\n    },\n    fetchAccountPortfolio(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccountPortfolio,\n        });\n    },\n    fetchAccountAssets(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccountAssets,\n        });\n    },\n    fetchAccountStocks(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccountStocks,\n        });\n    },\n    fetchOrdersHistory(headers: any, fromDate: string, toDate: string) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchOrdersHistory(fromDate, toDate),\n        });\n    },\n    fetchCashStatement(headers: any, index: number) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchCashStatement(index),\n        });\n    },\n\n};\n\nexport default AccountService;","\n\nimport { createSlice } from '@reduxjs/toolkit';\n\nimport { ThunkActionType } from '../store/store';\nimport AccountService from '../services/account';\n\nconst accountSlice = createSlice({\n    name: 'account',\n    initialState: {},\n    reducers: {},\n});\n\nexport default accountSlice.reducer;\n\nexport const postAuthToken = (): ThunkActionType => async () => {\n    const data = {\n        password: \"Miamikki521\",\n        username: \"aminhp93\"\n    }\n    const res = await AccountService.postAuthToken(data)\n    return res\n}\n\nexport const fetchAccount = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccount(headers)\n    return res\n}\n\nexport const fetchAccountPortfolio = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccountPortfolio(headers)\n    return res\n}\n\nexport const fetchAccountAssets = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccountAssets(headers)\n    return res\n}\n\nexport const fetchAccountStocks = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccountStocks(headers)\n    return res\n}\n\nexport const fetchOrdersHistory = (token: string, fromDate: string, toDate: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchOrdersHistory(headers, fromDate, toDate)\n    return res\n}\n\nexport const fetchCashStatement = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    let res: any;\n    let next = true\n\n    let index = 0;\n    let result: any = []\n    while (next) {\n        res = await AccountService.fetchCashStatement(headers, index)\n        if (res && res.data) {\n            index += 1\n            if (res.data.transactions && res.data.transactions.length < 50) {\n                next = false\n            }\n            result = [...result, ...res.data.transactions]\n        }\n    }\n\n    return result\n}","import { Table, Button } from \"antd\";\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from \"moment\";\nimport { sum, uniqBy } from \"lodash\";\n\nimport {\n    postAuthToken,\n    fetchOrdersHistory\n} from \"../../../reducers/account\"\nimport './HistoryTrade.css';\nimport React from \"react\";\n\ninterface TProps {\n    onClose?: any;\n    postAuthToken?: any;\n    fetchOrdersHistory?: any;\n}\n\nfunction HistoryTrade(props: TProps) {\n    const filterObj = {\n        startDate: \"2020-07-01\",\n        endDate: moment().format(\"YYYY-MM-DD\"),\n        orderStatus: \"4\",\n    }\n\n    const [listOrdersHistory, setListOrdersHistory] = useState([])\n    const defaultColumns: any = [\n        {\n            title: 'So hieu lenh',\n            dataIndex: 'orderID',\n            key: 'orderID',\n            width: 200\n        },\n        {\n            title: 'Ngay',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return moment(data.transactionDate).format(\"YYYY-MM-DD\")\n            }\n        },\n        {\n            title: 'Ma CK',\n            align: 'center' as 'center',\n            dataIndex: 'symbol',\n            key: 'symbol',\n        },\n        {\n            title: 'Lenh',\n            align: 'center' as 'center',\n            render: (data: any) => {\n                if (data.execType === \"NB\") {\n                    return <div style={{ color: \"green\" }}>Mua</div>\n                } else if (data.execType === \"NS\") {\n                    return <div style={{ color: \"red\" }}>Ban</div>\n                } else {\n                    return \"\"\n                }\n            }\n        },\n        {\n            title: 'KL dat',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.orderQuantity && (Number(data.orderQuantity)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Gia dat',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.orderPrice && (Number(data.orderPrice)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'KL khop',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchQuantity && (Number(data.matchQuantity)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Gia khop TB',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchAveragePrice && (Number(data.matchAveragePrice)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Trang thai',\n            render: (data: any) => {\n                if (data.orderStatus === \"4\") {\n                    return \"Khop\"\n                } else if (data.orderStatus === \"5\") {\n                    return \"Lenh het han\"\n                } else {\n                    return \"\"\n                }\n            }\n        },\n        {\n            title: 'Phi',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.feeOrder && (data.feeOrder).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Thoi gian',\n            render: (data: any) => {\n                return data.orderTime\n            }\n        },\n    ];\n\n    const mainColumns: any = [\n        {\n            title: 'Ngay',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return moment(data.transactionDate).format(\"YYYY-MM-DD\")\n            }\n        },\n        {\n            title: 'Ma CK',\n            align: 'center' as 'center',\n            dataIndex: 'symbol',\n            key: 'symbol',\n        },\n        {\n            title: 'Lenh',\n            align: 'center' as 'center',\n            render: (data: any) => {\n                if (data.execType === \"NB\") {\n                    return <div style={{ color: \"green\" }}>Mua</div>\n                } else if (data.execType === \"NS\") {\n                    return <div style={{ color: \"red\" }}>Ban</div>\n                } else {\n                    return \"\"\n                }\n            }\n        },\n        {\n            title: 'KL khop',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchQuantity && (Number(data.matchQuantity)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Gia khop TB',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchAveragePrice && (Number(data.matchAveragePrice)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: '+/-',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.finalChange\n            }\n        },\n        {\n            title: 'Total Amount',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.initialAmount && (Number(data.initialAmount)).toLocaleString(\"en-US\")\n            }\n        }\n    ]\n\n    const [columns, setColumns] = useState(mainColumns)\n\n    const getHistoryTrade = async () => {\n        const res = await props.postAuthToken()\n        const res2 = await props.fetchOrdersHistory(res.data.token, filterObj.startDate, filterObj.endDate);\n        if (res2.data) {\n            const filteredList = uniqBy(res2.data.filter((i: any) => i.orderStatus === filterObj.orderStatus), 'orderID')\n            let ignoreSells: any = [];\n            const mappedList = filteredList.map((i: any) => {\n                if (ignoreSells.filter((j: any) => j.orderID === i.orderID).length > 0) return i\n                if (i.execType === \"NS\") {\n                    const listSell: any = [i];\n                    let stop = false;\n                    filteredList.forEach((j: any) => {\n                        if (!stop) {\n                            if (j.symbol === i.symbol && j.transactionDate < i.transactionDate && j.execType === \"NB\") {\n                                ignoreSells = ignoreSells.concat(listSell)\n                                stop = true\n                            }\n\n                            if (j.symbol === i.symbol && (j.transactionDate < i.transactionDate || j.transactionDate === i.transactionDate) && i.orderID !== j.orderID && j.execType === \"NS\") {\n                                listSell.push(j)\n                            }\n                        }\n                    })\n\n                    const listBuy: any = [];\n                    let totalVolumeBuy = 0;\n                    const totalVolumeSell = sum(listSell.map((i: any) => Number(i.matchQuantity)))\n\n                    let stop2 = false;\n                    filteredList.forEach((j: any) => {\n                        if (!stop2) {\n                            if (totalVolumeBuy === totalVolumeSell) stop2 = true\n\n                            if (j.symbol === i.symbol && j.execType === \"NB\" && j.transactionDate < i.transactionDate) {\n                                totalVolumeBuy += Number(j.matchQuantity)\n                                listBuy.push(j)\n                            }\n                        }\n                    })\n\n                    const start = sum(listBuy.map((i: any) => Number(i.matchQuantity) * Number(i.matchAveragePrice)))\n                    const end = sum(listSell.map((i: any) => Number(i.matchQuantity) * Number(i.matchAveragePrice)))\n                    i.finalChange = ((end - start) / start * 100).toFixed(2)\n                    i.initialAmount = start\n                    // if (i.symbol === \"BSR\") {\n                    //     console.log(i.transactionDate, i, listBuy, listSell, i.finalChange, start, end, stop)\n                    // }\n\n                }\n                return i\n            })\n            setListOrdersHistory(mappedList)\n        }\n    }\n\n    useEffect(() => {\n        getHistoryTrade();\n    }, [])\n\n    return (\n        <div>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                    Start Date: {filterObj.startDate}\n                </div>\n                <div>\n                    End Date: {filterObj.endDate}\n                </div>\n                <div>\n                    OrderStatus: {filterObj.orderStatus === \"4\" ? \"Khop\" : \"\"}\n                </div>\n            </div>\n\n            <Button onClick={() => setColumns(defaultColumns)}>Default Columns</Button>\n            <Button onClick={() => setColumns(mainColumns)}>Main Columns</Button>\n            <Table\n                dataSource={listOrdersHistory}\n                columns={columns}\n                pagination={false}\n                scroll={{ y: 1200 }} />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    postAuthToken,\n    fetchOrdersHistory,\n}\n\nexport default connect(null, mapDispatchToProps)(HistoryTrade)\n","export const DATE_FORMAT = \"YYYY-MM-DD\"\nexport const BILLION = 1000000000\nexport const MIN_TOTAL_VOLUME = 100000\nexport const MIN_TOTAL_VALUE = BILLION * 5\nexport const MIN_MEDIUM_TOTOL_VALUE = BILLION * 20\nexport const MAX_MEDIUM_TOTOL_VALUE = BILLION * 500\n\n","import axios from 'axios';\nimport moment from \"moment\";\n\nconst StockService = {\n    getHistoricalQuotes(symbol: string, startDate?: string, endDate?: string, platform?: string) {\n        // symbol = \"FPT\"\n        // startDate = \"2021-01-01\"\n        // endDate = \"2021-12-31\"\n        if (!symbol) return\n        if (!endDate) {\n            endDate = moment().format(\"YYYY-MM-DD\")\n        }\n\n        if (!startDate) {\n            startDate = moment().add(-3, \"years\").format(\"YYYY-MM-DD\")\n        }\n\n        if (platform === \"fireant\") {\n            return axios({\n                url: `https://restv2.fireant.vn/symbols/${symbol.toUpperCase()}/historical-quotes`,\n                method: \"GET\",\n                headers: {\n                    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n                },\n                params: {\n                    startDate: `${startDate}`,\n                    endDate: `${endDate}`,\n                    offset: 0,\n                    limit: 15\n                }\n            })\n        }\n        return axios({\n            url: \"https://fwtapi1.fialda.com/api/services/app/StockInfo/GetHistoricalData\",\n            method: \"GET\",\n            params: {\n                symbol: symbol.toUpperCase(),\n                fromDate: `${startDate}T00:00:00.094`,\n                toDate: `${endDate}T15:09:14.095`,\n                pageNumber: 1,\n                pageSize: 1000\n            }\n        })\n\n    },\n    getFundamental(symbol: string) {\n        // symbol = \"FPT\"\n        if (!symbol) return\n        return axios({\n            url: `https://restv2.fireant.vn/symbols/${symbol}/fundamental`,\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            }\n        })\n    },\n    getWatchlist() {\n        return axios({\n            method: \"GET\",\n            url: \"https://restv2.fireant.vn/me/watchlists\",\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            }\n        })\n    },\n    getStockNews(symbol: string) {\n        if (!symbol) return\n        return axios({\n            method: \"GET\",\n            url: `https://restv2.fireant.vn/posts?symbol=${symbol}&type=1&offset=0&limit=20`,\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            },\n            data: symbol\n        })\n    },\n    getStockNewsDetail(id: number) {\n        if (!id) return\n        return axios({\n            method: \"GET\",\n            url: `https://restv2.fireant.vn/posts/${id}`,\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            }\n        })\n    }\n\n}\n\nexport default StockService;\n","import { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Button, Input, notification, Spin } from \"antd\";\nimport { chunk, minBy, orderBy } from \"lodash\";\nimport moment from \"moment\";\nimport {\n    DATE_FORMAT,\n    MIN_TOTAL_VOLUME,\n    MIN_TOTAL_VALUE,\n    MIN_MEDIUM_TOTOL_VALUE,\n} from \"../../../helpers/utils\";\nimport StockService from '../../../services/stock'\nimport React from 'react';\nimport MDEditor from '@uiw/react-md-editor';\n\ninterface IProps {\n\n}\n\nexport default function StockTools(props: IProps) {\n    const [listWatchlists, setListWatchlists] = useState([])\n    const [loading, setLoading] = useState(false);\n\n    const getWatchlist = async () => {\n        const res = await StockService.getWatchlist()\n        if (res && res.data) {\n            setListWatchlists(res.data)\n        }\n    }\n\n    const handleUpdateThanhKhoanVua = async () => {\n        let finalList = [];\n        // Get list symbol from all\n        const wlAll = listWatchlists.filter((i: any) => i.name === \"all\")[0].symbols\n\n        // Remove list symbol in blacklist and temp_blacklist\n        const wlBlacklist = listWatchlists.filter((i: any) => i.name === \"blacklist\")[0].symbols\n        finalList = wlAll.filter((i: any) => !wlBlacklist.includes(i))\n\n        const chunkedListSymbol: any = chunk(finalList, 30)\n        setLoading(true)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(StockService.getHistoricalQuotes(chunkedListSymbol[i][j], \"\", \"\", \"fireant\"))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n        const mappedRes = orderBy(res.map((i: any) => {\n            const result: any = {\n                symbol: i.data[0].symbol,\n                minTotalValue: (minBy(i.data, \"totalValue\") as any).totalValue,\n                minTotalVolume: (minBy(i.data, \"totalVolume\") as any).totalVolume,\n            }\n            return result\n        }).filter((i: any) => i.minTotalValue > MIN_MEDIUM_TOTOL_VALUE), \"minTotalValue\")\n        const thanh_khoan_vua_wl = listWatchlists.filter((i: any) => i.name === \"thanh_khoan_vua\")[0]\n        update(thanh_khoan_vua_wl, mappedRes.map((i: any) => i.symbol))\n    }\n\n    const update = async (data: any, list: any) => {\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/${data.watchlistID}`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: data.name,\n                symbols: list,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: data.watchlistID,\n            }\n        })\n        if (res && res.data) {\n            notification.success({ message: \"Success\" })\n            getWatchlist()\n        }\n    }\n\n    useEffect(() => {\n        getWatchlist()\n    }, [])\n\n    if (loading) {\n        return <div><Spin /></div>\n    }\n\n    return <div >\n        <MDEditor.Markdown source={`\n                    \\n - Update thanh_khoan_vua: \n                    \\n   - Filter list with last 15 mins Total value > 5000000000\n                    \\n   - Filter blacklist\n                    \\n - Update aim_to_buy === thanh_khoan_vua\n                    \\n - Update all\n                `} />\n\n        <Button onClick={handleUpdateThanhKhoanVua}>\n            Update\n        </Button>\n        <hr />\n        {\n            listWatchlists.map((i: any, index: number) => {\n                return <StockToolItem data={i} key={index} dataAll={listWatchlists} />\n            })\n        }\n    </div>\n}\n\ninterface IStockToolItemProps {\n    data: any;\n    dataAll: any;\n}\n\nfunction StockToolItem(props: IStockToolItemProps) {\n    const [data, setData] = useState(props.data);\n    const [value, setValue] = useState(props.data.symbols.join(\",\"));\n    const [loading, setLoading] = useState(false);\n\n    const handleChangeInput = (e: any) => {\n        setValue(e.target.value);\n    }\n\n    const handleReset = () => {\n        update([])\n    }\n\n    const update = async (list: any) => {\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/${data.watchlistID}`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: data.name,\n                symbols: list,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: data.watchlistID,\n            }\n        })\n        if (res && res.data) {\n            notification.success({ message: \"Success\" })\n            setData(res.data)\n            setValue(res.data.symbols.join(\",\"))\n        }\n    }\n\n    const handleFilter = () => {\n        setLoading(true)\n        getHistorialQuoteAll();\n    }\n\n    const getHistorialQuoteAll = () => {\n        const listPromises: any = [];\n        data.symbols.map((j: any) => listPromises.push(getHistorialQuote(j)))\n        Promise.all(listPromises).then(res => {\n            const list = res.filter((i: any) => i)\n            update(list)\n            setLoading(false)\n            notification.success({ message: \"success\" })\n        })\n    }\n\n    const getHistorialQuote = async (symbol: string) => {\n        if (!symbol) return;\n        const startDate = moment().add(-1000, 'days').format(DATE_FORMAT)\n        const endDate = moment().add(0, 'days').format(DATE_FORMAT)\n\n\n        const res = await axios({\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            },\n            url: `https://restv2.fireant.vn/symbols/${symbol}/historical-quotes?startDate=${startDate}&endDate=${endDate}&offset=0&limit=20`,\n        })\n        if (res.data) {\n            const list = res.data.filter((i: any) => {\n                return i.totalVolume < MIN_TOTAL_VOLUME || i.totalValue < MIN_TOTAL_VALUE\n            })\n            if (list.length > 0) {\n                return null\n            }\n            return symbol\n        }\n        return null\n    }\n\n    return <div>\n        {data.watchlistID} - {data.name} - {data.symbols.length}\n        <Button disabled={loading} style={{ marginLeft: \"20px\" }} danger onClick={handleReset}>Reset</Button>\n        <Button onClick={handleFilter} disabled={loading}>Loc Tong Gia Tri</Button>\n        {\n            data.name === \"all\" && <span>{`Von: >500, Gia: >5, Tong KL: >100000`}</span>\n        }\n\n        {\n            data.name === \"thanh_khoan_vua\" && <span>{`Total_value > 20`}</span>\n        }\n\n        <div style={{ display: \"flex\" }}>\n            <Input\n                value={value}\n                onChange={handleChangeInput}\n                onPressEnter={() => update(value.split(\",\"))}\n            />\n        </div>\n        <hr />\n    </div>\n}\n","import React from \"react\";\n\nexport default function StockTestBreak_TestTab() {\n    return <div>\n        TestTab\n    </div>\n}\n","import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport React from 'react';\n\nexport default function StockTestBreak_GraphsTab({ data, listDataKey }: any) {\n    const listColor = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']\n    return <div>\n        <LineChart\n            width={1000}\n            height={800}\n            data={data}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"count\" />\n            <YAxis domain={[100, 130]} />\n            <Tooltip />\n            <Legend />\n            {\n                listDataKey.map((i: any, index: number) => {\n                    return <Line type=\"monotone\" dataKey={i} stroke={listColor[index]} strokeWidth={2} />\n                })\n            }\n        </LineChart>\n    </div >\n}\n","import { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { Input, Table } from \"antd\";\nimport React from \"react\";\nimport MDEditor from '@uiw/react-md-editor';\n\n\nexport default function StockTestBreak_ScoreboardTab({ cb, data }: any) {\n    const [symbol, setSymbol] = useState('NKG');\n\n    const columns = [\n        {\n            title: 'Date',\n            render: (data: any) => {\n                return moment(data.tradingTime).format('YYYY-MM-DD')\n            }\n        },\n        {\n            title: 'priceChange',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.priceChange\n            }\n        },\n        // {\n        //     title: 'previousDayChange',\n        //     align: 'right' as 'right',\n        //     render: (data: any) => {\n        //         return data.previousDayChange\n        //     }\n        // },\n        // {\n        //     title: 'diffInMonth',\n        //     align: 'right' as 'right',\n        //     render: (data: any) => {\n        //         return <div style={{\n        //             background: data.diffInMonth > 10 ? \"red\" : \"white\",\n        //             color: data.diffInMonth > 10 ? \"white\" : \"black\"\n        //         }}>{data.diffInMonth}</div>\n        //     }\n        // },\n        {\n            title: 'volume15dayChange',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div style={{\n                    // background: data.volume15dayChange < 50 ? \"red\" : \"white\",\n                    color: data.volume15dayChange < 50 ? \"red\" : \"black\"\n                }}>{data.volume15dayChange}\n                    {/* | {data.arrVolume.join(\", \")} */}\n                </div>\n            }\n        },\n        {\n            title: 't3Change',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div style={{\n                    // background: data.t3Change < -3 ? \"red\" : \"white\",\n                    color: data.t3Change < -3 ? \"red\" : \"black\"\n                }}>{data.t3Change}</div>\n            }\n        },\n        {\n            title: 'highestChangePrice20day',\n            sorter: (a: any, b: any) => {\n                return a.highestChangePrice20day - b.highestChangePrice20day\n            },\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div>{data.highestChangePrice20day} | {moment(data.highestPriceCloseDate).format(\"MM-DD\")} </div>\n            }\n        },\n        {\n            title: 'lowestChangePrice20day',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div style={{\n                    // background: data.lowestChangePrice20day < -5 ? \"red\" : \"white\",\n                    color: data.lowestChangePrice20day < -5 ? \"red\" : \"black\"\n                }}>{data.lowestChangePrice20day} | {moment(data.lowestPriceCloseDate).format(\"MM-DD\")}</div>\n            }\n        }\n    ]\n\n    const handleChangeInput = (e: any) => {\n        setSymbol(e.target.value)\n    }\n\n    const handlePressEnter = () => {\n        cb()\n    }\n\n\n    useEffect(() => {\n        cb(symbol)\n    }, [])\n\n    return <>\n        <div style={{ display: \"flex\" }}>\n            <div style={{ width: \"50%\" }}>\n                <MDEditor.Markdown source={`\n                        \\n - Test break\n                        \\n - Symbol: NKG\n                        \\n - Time: 1/1/2020 - 31/12/2020\n                        \\n - Condition test: \n                        \\n   - priceChange > 4%\n                        \\n   - diffInMonth > 10%\n                        \\n   - t3Change > -3%\n                        \\n   - volume15dayChange > 50%\n                        \\n   - previousDayChange < 4%\n                        \\n   - open !== high\n                    `} />\n\n            </div>\n            <div style={{ width: \"50%\" }}>\n                <MDEditor.Markdown source={`\n                        \\n - Note:\n                        \\n   - HDG: 06-01\n                        \\n   - NKG: 01-25\n                        \\n   - SCR: 02-18, 03-04, 04-27\n                        \\n   - DBC: 12-18, 12-29, 11-20, 09-11, 07-16, 03-30, \n                    `} />\n\n\n            </div>\n        </div>\n        <div>\n            <Input onChange={handleChangeInput} onPressEnter={handlePressEnter} />Count: {data.length}\n        </div>\n        <div>\n            <Table\n                dataSource={data}\n                columns={columns}\n                pagination={false}\n                scroll={{ y: 800 }} />\n\n        </div>\n    </>\n}\n\n","import moment from \"moment\";\nimport { keyBy, sortBy, isEmpty, orderBy } from \"lodash\";\n\nexport const singleColumns = [\n    {\n        title: 'Buy Date',\n        render: (data: any) => {\n            return data.tradingTime\n        }\n    },\n    {\n        title: 'Sell Date',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.sellDate\n        }\n    },\n    {\n        title: 'changeSellDate',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.changeSellDate.toFixed(2)\n        }\n    },\n    {\n        title: 'totalNAV',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.totalNAV\n        }\n    },\n    {\n        title: 'baseNAV',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.baseNAV\n        }\n    },\n]\n\nexport const combinedColumns = [\n    {\n        title: \"Symbol\",\n        render: (data: any) => {\n            return data.symbol\n        }\n    },\n    {\n        title: 'Buy Date',\n        render: (data: any) => {\n            return data.buyDate\n        }\n    },\n    {\n        title: 'Sell Date',\n        render: (data: any) => {\n            return data.sellDate\n        }\n    },\n    {\n        title: 'Percent Change',\n        render: (data: any) => {\n            return data.percentChange\n        }\n    },\n    {\n        title: 'total NAV',\n        render: (data: any) => {\n            return data.totalNAV\n        }\n    },\n]\n\nexport const testVariableColumns = [\n    {\n        title: \"variableCombine\",\n        render: (data: any) => {\n            return data.variableCombine\n        }\n    },\n    {\n        title: \"totalNAV\",\n        render: (data: any) => {\n            return data.totalNAV\n        }\n    },\n]\n\nexport const findSellDate = (buyDate: string, listData: any, var1 = 10, var2 = -3, var3 = 10) => {\n    let result: any;\n    const filteredListData = sortBy(listData, \"tradingTime\")\n    let buyItem: any;\n    let changePercent: number;\n    let sellIndex = -1;\n    let next = true;\n    let buyItemIndex: number;\n    filteredListData.forEach((i: any, index: number) => {\n        if (next && index === sellIndex) {\n            result = i\n            next = false\n        }\n        if (next) {\n            if (i.tradingTime === buyDate) {\n                buyItem = i\n                sellIndex = index + var1\n                buyItemIndex = index\n            }\n\n            if (index > buyItemIndex + 2) {\n                if (buyItem && buyItem.adjClose) {\n                    changePercent = (i.adjClose - buyItem.adjClose) / buyItem.adjClose * 100\n                }\n\n                if (changePercent > var3) {\n                    result = i\n                    next = false\n                }\n\n                if (changePercent < var2) {\n                    result = i\n                    next = false\n                }\n\n            }\n        }\n    })\n    // console.log(result)\n    return result\n}\n\nexport const analyseData = (data: any, fullData: any, startDate: string, endDate: string) => {\n    const sortedData = sortBy(data, \"tradingTime\")\n    const dataObj = keyBy(sortedData, \"tradingTime\")\n    const result = [];\n    let buyDate: any;\n    let sellDateObj: any;\n\n    let totalNAV = 100;\n    let baseNAV = 100;\n    let monthlyAdd = 0;\n    for (let d = moment(startDate); d.isBefore(moment(endDate)); d.add(1, \"days\")) {\n        const date = moment(d).format('YYYY-MM-DD')\n        if (sellDateObj && date < sellDateObj.tradingTime) continue\n        buyDate = dataObj[date] && dataObj[date].tradingTime\n\n        if (buyDate) {\n            sellDateObj = findSellDate(buyDate, fullData)\n            if (sellDateObj) {\n                dataObj[date].sellDate = sellDateObj.tradingTime\n                dataObj[date].changeSellDate = (sellDateObj.adjClose - dataObj[date].adjClose) / dataObj[date].adjClose * 100\n                totalNAV = totalNAV * (dataObj[date].changeSellDate / 100 + 1) + monthlyAdd\n                baseNAV = baseNAV + monthlyAdd\n                dataObj[date].totalNAV = Number(totalNAV.toFixed(0))\n                dataObj[date].baseNAV = baseNAV\n                result.push(dataObj[date])\n            }\n        }\n    }\n    return result\n}\n\nexport const findBuyDate = (date: string, listData: any) => {\n    const result: any = {};\n    listData.map((i: any) => {\n        const filteredList = i.data && i.data.filter((j: any) => j.tradingTime === date)\n        if (filteredList && filteredList.length === 1) {\n            if (!result[date]) {\n                result[date] = []\n            }\n            filteredList[0].symbol = i.symbol\n            result[date].push(filteredList[0])\n        }\n    })\n    if (!isEmpty(result)) {\n        if (result[date].length > 1) {\n            result[date] = orderBy(result[date], \"volume15dayChange\", \"desc\")\n            // console.log(result[date])\n        }\n        // console.log(result[date])\n        return result[date][0]\n    }\n    return null\n}\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Input, Table, Button, DatePicker, Select, Dropdown, Menu, notification, Spin } from \"antd\";\nimport { mean, maxBy, minBy, meanBy, keyBy, orderBy, range, chunk, cloneDeep, get } from \"lodash\";\nimport StockTestBreak_GraphsTab from \"./StockTestBreak_GraphsTab\"\nimport { analyseData, findSellDate, singleColumns, combinedColumns, findBuyDate, testVariableColumns } from \"./StockTestBreak.helpers\"\nimport StockService from '../../../services/stock'\nimport React from \"react\";\nimport MDEditor from '@uiw/react-md-editor';\n\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nexport default function StockTestBreak_OverviewTab() {\n    const [loading, setLoading] = useState(false);\n    const [symbol, setSymbol] = useState(\"NKG\");\n    const [listSymbol, setListSymbol] = useState(['HPG', 'NKG', 'TLH', \"HSG\"]);\n    const [startDate, setStartDate] = useState(\"2020-01-01\");\n    const [endDate, setEndDate] = useState(\"2020-12-31\")\n    const [data, setData] = useState([]);\n    const [listData, setListData] = useState([]);\n    const [listWatchlists, setListWatchlists] = useState([]);\n    const [selectedWatchlist, setSelectedWatchlist] = useState(null)\n    const [testType, setTestType] = useState(null);\n    const [combinedData, setCombinedData] = useState([]);\n    const [testVariableData, setTestVariableData] = useState([]);\n    const [volume15dayChange, setVolume15dayChange] = useState(50);\n\n    const getData = async (symbol: string, combined?: boolean, testVariable?: boolean) => {\n        const res2 = await StockService.getHistoricalQuotes(symbol, startDate, endDate)\n        const res = get(res2, 'data.result.items')\n        if (!res) {\n            return { \"failedSymbol\": symbol }\n        }\n        let xxx = res\n            .map((i: any, index: number) => {\n                if (index < res.length - 1) {\n                    const todayClose = i.adjClose\n                    const yesterdayClose = res[index + 1].adjClose\n                    i.priceChange = Number(((todayClose - yesterdayClose) / yesterdayClose * 100).toFixed(2))\n                }\n\n                // Condition 1\n                let max = 0\n                for (let j = 0; j < 20; j++) {\n                    if (res[index + j] && res[index + j].adjClose > max) {\n                        max = res[index + j].adjClose\n                    }\n                }\n                i.diffInMonth = Number(((max - i.adjClose) / i.adjClose * 100).toFixed(2))\n                const t3Price = res[index - 3]\n                if (t3Price) {\n                    i.t3PriceClose = t3Price.adjClose\n                    i.t3Change = Number(((t3Price.adjClose - i.adjClose) / i.adjClose * 100).toFixed(2))\n                }\n\n                // Condition 2\n                let arrVolume = []\n                for (let j = 0; j < 15; j++) {\n                    if (res[index + j]) {\n                        arrVolume.push(res[index + j].totalDealVolume)\n                    }\n                }\n                i.volume15dayChange = Number(((i.totalDealVolume - mean(arrVolume)) / mean(arrVolume) * 100).toFixed(2))\n                i.arrVolume = arrVolume\n\n                // Condition 3\n                let arr20day = []\n                for (let j = 0; j < 20; j++) {\n                    if (res[index - j]) {\n                        arr20day.push(res[index - j])\n                    }\n                }\n\n                i.highestPriceClose = maxBy(arr20day, \"adjClose\").adjClose\n                i.highestPriceCloseDate = maxBy(arr20day, \"adjClose\").tradingTime\n                i.highestChangePrice20day = Number(((i.highestPriceClose - i.adjClose) / i.adjClose * 100).toFixed(2))\n\n                i.lowestPriceCloseDate = minBy(arr20day, \"adjClose\").tradingTime\n                i.lowestPriceClose = minBy(arr20day, \"adjClose\").adjClose\n                i.lowestChangePrice20day = Number(((i.lowestPriceClose - i.adjClose) / i.adjClose * 100).toFixed(2))\n\n                // Condition 4\n                if (res[index + 1]) {\n                    const previousDayChange = res[index + 1].changePercent\n                    i.previousDayChange = Number((previousDayChange * 100).toFixed(2))\n                }\n                i.tradingTime = moment(i.tradingTime).format(\"YYYY-MM-DD\")\n\n                return i\n            })\n\n        if (testVariable) {\n            return {\n                symbol,\n                data: xxx\n            }\n        } else {\n            xxx = xxx.filter((i: any, index: number) => {\n                return i.priceChange\n                    && i.priceChange > 4\n                    && i.volume15dayChange > volume15dayChange\n                    && i.previousDayChange < 4\n                    && i.open !== i.high\n                    && i.diffInMonth < 10\n            })\n        }\n\n        const average = {\n            date: \"averageDate\",\n            highestChangePrice20day: Number(meanBy(xxx, 'highestChangePrice20day').toFixed(2))\n        }\n        xxx.push(average)\n        if (combined) {\n            return {\n                data: xxx,\n                symbol,\n                fullData: res\n            }\n        }\n        const analysedData = analyseData(xxx, res, startDate, endDate)\n\n        const totalNAV = (maxBy(analysedData, 'totalNAV') || {}).totalNAV\n        setData(analysedData)\n\n        return { data: analysedData, symbol, totalNAV }\n    }\n\n    const testList = async () => {\n        setTestType(\"multiple\")\n        setLoading(true)\n\n        const chunkedListSymbol = chunk(listSymbol, 30)\n        console.log(chunkedListSymbol)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(getData(chunkedListSymbol[i][j]))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n        const failedSymbolList = res.filter((i: any) => i.failedSymbol)\n\n        if (failedSymbolList && failedSymbolList.length > 0) {\n            notification.error({ message: failedSymbolList.map((i: any) => i.failedSymbol).join(\", \") })\n            return\n        }\n\n        let sortedRes = orderBy(res, 'totalNAV', \"desc\")\n        sortedRes = sortedRes.splice(0, 20)\n        const maxLength: any = maxBy(sortedRes, \"data.length\")\n        let result = [];\n        for (let i = 0; i < maxLength.data.length; i++) {\n            let item: any = {};\n            sortedRes.map((j: any) => {\n                item.count = i\n                item[j.symbol] = (j.data[i] || {}).totalNAV\n                return null\n            })\n            result.push(item)\n        }\n        setListSymbol(sortedRes.map((i: any) => i.symbol))\n        setListData(result)\n        console.log(result)\n        update(sortedRes.map((i: any) => i.symbol))\n    }\n\n    const testVariable = async () => {\n        setLoading(true)\n        setTestType(\"testVariable\")\n\n        const chunkedListSymbol = chunk(listSymbol, 30)\n        console.log(chunkedListSymbol)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(getData(chunkedListSymbol[i][j], true, true))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n        const failedSymbolList = res.filter((i: any) => i.failedSymbol)\n\n        if (failedSymbolList && failedSymbolList.length > 0) {\n            notification.error({ message: failedSymbolList.map((i: any) => i.failedSymbol).join(\", \") })\n            return\n        }\n\n        let rootResult: any = [];\n        let tempRes: any;\n        range(50, 100).map((var4: any) => {\n            tempRes = cloneDeep(res).map((item: any) => {\n                item.fullData = item.data\n\n                item.data = item.data.filter((i: any, index: number) => {\n                    return i.priceChange\n                        && i.priceChange > 4\n                        && i.volume15dayChange > var4\n                        && i.previousDayChange < 4\n                        && i.open !== i.high\n                        && i.diffInMonth < 10\n                })\n                return item\n            })\n\n            const objRes = keyBy(tempRes, \"symbol\")\n            const result: any[] | PromiseLike<any[]> = [];\n            let buyDate: any;\n            let sellDate: any;\n            let buyDateObj: any;\n            let sellDateObj: any;\n            let percentChange: any;\n            let totalNAV = 100;\n\n            for (let d = moment(startDate); d.isBefore(moment(endDate)); d.add(1, \"days\")) {\n                const date = moment(d).format('YYYY-MM-DD')\n\n                if (!buyDate) {\n                    buyDateObj = findBuyDate(date, tempRes)\n                    if (buyDateObj && buyDateObj.tradingTime && (!sellDate || buyDateObj.tradingTime > sellDate)) {\n                        buyDate = buyDateObj.tradingTime\n                    }\n                }\n\n                if (buyDate) {\n                    sellDateObj = findSellDate(buyDate, objRes[buyDateObj.symbol].fullData)\n                    sellDate = sellDateObj && sellDateObj.tradingTime\n                    if (sellDate) {\n                        percentChange = Number(((sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose * 100).toFixed(2))\n                        totalNAV = Number((totalNAV * (1 + (sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose)).toFixed(0))\n                        result.push({\n                            buyDate,\n                            symbol: buyDateObj.symbol,\n                            sellDate,\n                            percentChange,\n                            totalNAV,\n                            volume15dayChange: buyDateObj.volume15dayChange\n                        })\n                        buyDate = null\n                    }\n                }\n            }\n            rootResult.push({\n                variableCombine: `${var4}`,\n                totalNAV: maxBy(result, \"totalNAV\").totalNAV,\n                result\n            })\n        })\n\n        rootResult = orderBy(rootResult, \"totalNAV\", \"desc\")\n        console.log(rootResult)\n        setTestVariableData(rootResult)\n    }\n\n    const clickTestCombine = async () => {\n        setTestType(\"combined\")\n        setLoading(true)\n\n        const chunkedListSymbol = chunk(listSymbol, 30)\n        console.log(chunkedListSymbol)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(getData(chunkedListSymbol[i][j], true))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n        const failedSymbolList = res.filter((i: any) => i.failedSymbol)\n\n        if (failedSymbolList && failedSymbolList.length > 0) {\n            notification.error({ message: failedSymbolList.map((i: any) => i.failedSymbol).join(\", \") })\n            return\n        }\n\n        const objRes = keyBy(res, \"symbol\")\n        const result: any[] | PromiseLike<any[]> = [];\n        let buyDate: any;\n        let sellDate: any;\n        let buyDateObj: any;\n        let sellDateObj: any;\n        let percentChange: any;\n        let totalNAV = 100;\n\n        for (let d = moment(startDate); d.isBefore(moment(endDate)); d.add(1, \"days\")) {\n            const date = moment(d).format('YYYY-MM-DD')\n\n            if (!buyDate) {\n                buyDateObj = findBuyDate(date, res)\n                if (buyDateObj && buyDateObj.tradingTime && (!sellDate || buyDateObj.tradingTime > sellDate)) {\n                    buyDate = buyDateObj.tradingTime\n                }\n            }\n\n            if (buyDate) {\n                sellDateObj = findSellDate(buyDate, objRes[buyDateObj.symbol].fullData)\n                sellDate = sellDateObj && sellDateObj.tradingTime\n                if (sellDate) {\n                    percentChange = Number(((sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose * 100).toFixed(2))\n                    totalNAV = Number((totalNAV * (1 + (sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose)).toFixed(0))\n                    result.push({\n                        buyDate,\n                        symbol: buyDateObj.symbol,\n                        sellDate,\n                        percentChange,\n                        totalNAV\n                    })\n                    buyDate = null\n                }\n            }\n        }\n        // console.log(result)\n        result && setCombinedData(result)\n    }\n\n    const update = async (list: any) => {\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/1006042`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: \"highest_ROI_test\",\n                symbols: list,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: 1006042,\n            }\n        })\n        if (res && res.data) {\n            notification.success({ message: \"Success\" })\n        }\n    }\n\n    const getWatchlist = async () => {\n        const res: any = await StockService.getWatchlist()\n        if (res && res.data) {\n            setListWatchlists(res.data)\n        }\n    }\n\n    useEffect(() => {\n        getWatchlist();\n    }, [])\n\n    const dateFormat = 'YYYY-MM-DD';\n    const listDropdown = (listWatchlists.filter((i: any) => i.name === \"thanh_khoan_vua\")[0] || {}).symbols || []\n    const children: any = [];\n    for (let i = 0; i < listDropdown.length; i++) {\n        children.push(<Option value={listDropdown[i]} key={i}>{listDropdown[i]}</Option>);\n    }\n\n    const objWatchlists = keyBy(listWatchlists, \"watchlistID\")\n\n    const menu = (\n        <Menu onClick={(item: any) => {\n            setSelectedWatchlist(objWatchlists[item.key])\n            setListSymbol(objWatchlists[item.key].symbols)\n        }}>\n            {\n                listWatchlists.map((i: any) => {\n                    return <Menu.Item key={i.watchlistID}>\n                        {i.name}\n                    </Menu.Item>\n                })\n            }\n        </Menu>\n    );\n\n    const leftHeader = () => {\n        return <div style={{ width: \"50%\", height: \"100%\", overflow: \"auto\" }}>\n            <RangePicker\n                onChange={(e: any) => {\n                    setStartDate(moment(e[0]).format(dateFormat))\n                    setEndDate(moment(e[1]).format(dateFormat))\n                }}\n                defaultValue={[moment(startDate, dateFormat), moment(endDate, dateFormat)]}\n                format={dateFormat}\n            />\n            <hr />\n            <Input onPressEnter={() => getData(symbol)} style={{ width: \"200px\" }} value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n            <Button onClick={() => {\n                setTestType(\"single\")\n                getData(symbol)\n            }}>Test</Button>\n            <hr />\n            <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\n                <div>{(selectedWatchlist && selectedWatchlist.name) || \"Select watchlist\"}</div>\n            </Dropdown>\n            <Select\n                mode=\"multiple\"\n                allowClear\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                value={listSymbol}\n                onChange={(e) => setListSymbol(e)}\n            >\n                {children}\n            </Select>\n            <Button disabled={loading} onClick={testList}>Test List</Button>\n            <hr />\n            <Button disabled={loading} onClick={clickTestCombine}>Test Combine Auto Find Symbol</Button>\n            <hr />\n            <Input onPressEnter={testVariable} style={{ width: \"200px\" }} value={volume15dayChange} onChange={(e) => setVolume15dayChange(Number(e.target.value))} />\n            <Button disabled={loading} onClick={testVariable}>Test variable</Button>\n            <div>\n                <div>Number days till sell: 19</div>\n                <div>Profit percent to sell: 10%</div>\n                <div>Stop loss percent to sell: -3%</div>\n                <div>{`Find buy date: if > 1 results found, order by volume15dayChange`}</div>\n            </div>\n        </div>\n    }\n\n    const rightHeader = () => {\n        return <div style={{ width: \"50%\", height: \"100%\", overflow: \"auto\" }}>\n            <MDEditor.Markdown source={`\n                    \\n - dau tu 1 ma theo chien thuat nay       \n                    \\n - So tien ban dau: 100\n                    \\n - So tien them hang thang: 30\n                    \\n - findSellDate\n                    \\n   - within 19 trading days\n                    \\n   - sell all if < -3\n                    \\n   - sell all if > 10\n                `} />\n\n\n        </div>\n    }\n\n    const content = () => {\n        return <div>\n            {!testType && \"No content\"}\n            {testType === \"single\" && <div>\n                <Table\n                    dataSource={data}\n                    columns={singleColumns}\n                    pagination={false}\n                    scroll={{ y: 800 }} />\n            </div>}\n\n            {testType === \"multiple\" && (\n                loading\n                    ? <Spin />\n                    : <div>\n                        <StockTestBreak_GraphsTab data={listData} listDataKey={listSymbol} />\n                    </div>\n            )}\n\n            {testType === \"combined\" && (\n                loading\n                    ? <Spin />\n                    : <div>\n                        <Table\n                            dataSource={combinedData}\n                            columns={combinedColumns}\n                            pagination={false}\n                            scroll={{ y: 800 }} />\n                    </div>\n            )}\n\n            {testType === \"testVariable\" && (\n\n                loading\n                    ? <Spin />\n                    : <div>\n                        <div style={{ display: \"flex\" }}>\n                            <div>{`<100: ${testVariableData.filter((i: any) => i.totalNAV < 100).length}`}</div>\n                            <div>{`>100: ${testVariableData.filter((i: any) => i.totalNAV > 100 && i.totalNAV < 200).length}`}</div>\n                            <div>{`>200: ${testVariableData.filter((i: any) => i.totalNAV > 200 && i.totalNAV < 300).length}`}</div>\n                            <div>{`>300: ${testVariableData.filter((i: any) => i.totalNAV > 300 && i.totalNAV < 400).length}`}</div>\n                            <div>{`>400: ${testVariableData.filter((i: any) => i.totalNAV > 400).length}`}</div>\n                        </div>\n                        <Table\n                            dataSource={testVariableData}\n                            columns={testVariableColumns}\n                            pagination={false}\n                            scroll={{ y: 800 }} />\n                    </div>\n\n            )}\n        </div>\n    }\n\n    return <div>\n        <div style={{ display: \"flex\", height: \"400px\" }}>\n            {leftHeader()}\n            {rightHeader()}\n        </div>\n        {content()}\n    </div>\n}\n\n","\nimport { useState } from \"react\";\nimport { Tabs } from \"antd\";\n\nimport StockTestBreak_TestTab from \"./StockTestBreak_TestTab\"\nimport StockTestBreak_GraphsTab from \"./StockTestBreak_GraphsTab\"\nimport StockTestBreak_ScoreboardTab from \"./StockTestBreak_ScoreboardTab\"\nimport StockTestBreak_OverviewTab from \"./StockTestBreak_OverviewTab\"\nimport React from \"react\";\n\nconst { TabPane } = Tabs;\n\nexport default function StockTestBreak() {\n    const [tab, setTab] = useState(\"overview\");\n\n    return <div>\n        <div>\n            <Tabs defaultActiveKey=\"overview\" onChange={(key) => setTab(key)}>\n                <TabPane tab=\"Overview\" key=\"overview\" />\n                <TabPane tab=\"Scoreboard\" key=\"scoreboard\" />\n                <TabPane tab=\"Graphs\" key=\"graphs\" />\n                <TabPane tab=\"Test\" key=\"test\" />\n            </Tabs>\n        </div>\n        {tab === \"overview\" && <StockTestBreak_OverviewTab />}\n        {tab === \"scoreboard\" && <StockTestBreak_ScoreboardTab />}\n        {tab === \"graphs\" && <StockTestBreak_GraphsTab />}\n        {tab === \"test\" && <StockTestBreak_TestTab />}\n    </div >\n}\n\n\n\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { keyBy, meanBy } from \"lodash\";\nimport { notification, Table, Button } from \"antd\";\nimport axios from \"axios\";\nimport { CloseOutlined } from '@ant-design/icons'\n\nimport StockService from '../../../services/stock'\nimport \"./StockMarketOverview.css\";\n\n\nexport default function StockMarketOverview() {\n    const [listWatchlists, setListWatchlists] = useState([])\n    const [data1, setData1] = useState([]);\n    const [data2, setData2] = useState([]);\n    const [data3, setData3] = useState([]);\n    const [data4, setData4] = useState([]);\n    const [filtered, setFiltered] = useState(false);\n    const [editable, setEditable] = useState(false);\n    const [confirmReset, setConfirmReset] = useState(false)\n    const [changePercentMin, setChangePercentMin] = useState(null)\n    const [changePercentMax, setChangePercentMax] = useState(null)\n    const [estimatedVolumeChange, setEstimatedVolumeChange] = useState(null)\n\n    const fetch = async (listWatchlists: any, watchlistName: string) => {\n        const xxx = keyBy(listWatchlists, \"name\")\n        const xxx2 = xxx[watchlistName];\n        const listPromises: any = [];\n        ((xxx2 || {}).symbols || []).forEach((i: any) => {\n            listPromises.push(StockService.getHistoricalQuotes(i, null, null, 'fireant'))\n        })\n        return Promise.all(listPromises).then(res => {\n            let mappedData = res\n                .map((i: any) => {\n                    const listItem = i.data\n                    const changePercent = (listItem[0].priceClose - listItem[1].priceClose) / listItem[1].priceClose * 100\n                    const todayItem = listItem[0]\n                    // listItem.splice(0, 1)\n                    const averageVolume15Days = meanBy(listItem, 'dealVolume')\n\n                    const estimatedVolumeChange = (todayItem.dealVolume / averageVolume15Days) * 100\n                    return {\n                        symbol: todayItem.symbol,\n                        changePercent: Number(changePercent.toFixed(1)),\n                        estimatedVolumeChange: Number(estimatedVolumeChange.toFixed(0)),\n                        todayVolume: (todayItem.dealVolume / 1000000).toFixed(2),\n                        averageVolume15Days: (averageVolume15Days / 1000000).toFixed(2)\n                    }\n                })\n                .sort((a: any, b: any) => {\n                    return b.changePercent - a.changePercent\n                })\n            return mappedData\n        })\n    }\n\n    const fetchList = async () => {\n        const res = await StockService.getWatchlist()\n        if (res && res.data) {\n            setListWatchlists(res.data)\n            fetch(res.data, \"8633_dau_co_va_BDS\").then(res => setData1(res))\n            fetch(res.data, \"8781_chung_khoan\").then(res => setData2(res))\n            fetch(res.data, \"watching\").then(res => setData3(res))\n            fetch(res.data, \"aim_to_buy\").then(res => setData4(res))\n        }\n    }\n\n    const handleReset = async () => {\n        const listThanhKhoanVua = keyBy(listWatchlists, \"watchlistID\")['737544']\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/1140364`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: 'aim_to_buy',\n                symbols: listThanhKhoanVua.symbols,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: 1140364,\n            }\n        })\n        if (res && res.data) {\n            fetchList()\n            notification.success({ message: \"Success\" })\n        }\n    }\n\n    const handleRemove = async (symbol: string) => {\n        const removedData = data4.filter((i: any) => i.symbol !== symbol)\n        setData4(removedData)\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/1140364`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: 'aim_to_buy',\n                symbols: removedData.map((i: any) => i.symbol),\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: 1140364,\n            }\n        })\n        if (res && res.data) {\n            fetchList()\n            notification.success({ message: \"Success\" })\n        }\n\n    }\n\n    const handleFilter = () => {\n        if (filtered) {\n            setFiltered(false)\n            setChangePercentMax(null);\n            setChangePercentMin(null);\n            setEstimatedVolumeChange(null);\n        } else {\n            setFiltered(true)\n            setChangePercentMax(5);\n            setChangePercentMin(1);\n            setEstimatedVolumeChange(50);\n        }\n    }\n\n    useEffect(() => {\n        fetchList()\n        // setInterval(() => {\n        //     fetchList()\n        // }, 60000)\n    }, [])\n\n    const columns = [\n        {\n            title: 'Symbol',\n            sorter: (a: any, b: any) => {\n                return (a.symbol).localeCompare(b.symbol)\n            },\n            render: (i: any) => {\n\n                return <div style={{ width: \"60px\" }}>{i.symbol} {editable && <CloseOutlined style={{ marginLeft: \"2px\" }} onClick={() => handleRemove(i.symbol)} />} </div>\n            }\n        },\n        {\n            title: '%change',\n            sorter: (a: any, b: any) => {\n                return a.changePercent - b.changePercent\n            },\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.changePercent\n            }\n        },\n        {\n            title: '%volume',\n            sorter: (a: any, b: any) => {\n                return a.estimatedVolumeChange - b.estimatedVolumeChange\n            },\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.estimatedVolumeChange\n            }\n        },\n    ]\n\n    const dataSource = filtered\n        ? data4.filter((i: any) =>\n            (changePercentMin && i.changePercent > changePercentMin)\n            && (changePercentMax && i.changePercent < changePercentMax)\n            && (estimatedVolumeChange && i.estimatedVolumeChange > estimatedVolumeChange))\n        : data4\n\n    const renderBds = () => {\n        return <div>\n            <div>bds</div>\n            {\n                data1.map((i: any) => {\n                    let color = \"rgb(204, 170, 0)\"\n                    if (i.changePercent > 0) {\n                        if (i.changePercent > 6.5) {\n                            color = \"rgb(255, 0, 255)\"\n                        } else {\n                            color = \"green\"\n                        }\n\n                    }\n                    if (i.changePercent < 0) {\n                        if (i.changePercent < -6.5) {\n                            color = \"rgb(0, 204, 204)\"\n                        } else {\n                            color = \"red\"\n                        }\n\n                    }\n                    return <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\", color }}>\n                        <div>{i.symbol} </div>\n                        <div>{i.changePercent}</div>\n                    </div>\n                })\n            }\n        </div>\n\n    }\n\n    const renderCk = () => {\n        return <div style={{ margin: \"0 20px\" }}>\n            <div>Ck</div>\n            {\n                data2.map((i: any) => {\n                    let color = \"rgb(204, 170, 0)\"\n                    if (i.changePercent > 0) {\n                        if (i.changePercent > 6.5) {\n                            color = \"rgb(255, 0, 255)\"\n                        } else {\n                            color = \"green\"\n                        }\n\n                    }\n                    if (i.changePercent < 0) {\n                        if (i.changePercent < -6.5) {\n                            color = \"rgb(0, 204, 204)\"\n                        } else {\n                            color = \"red\"\n                        }\n\n                    }\n                    return <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\", color }}>\n                        <div>{i.symbol} </div>\n                        <div>{i.changePercent}</div>\n                    </div>\n                })\n            }\n        </div>\n\n    }\n\n    const renderWatching = () => {\n        return <div>\n            <div>watching</div>\n            {\n                data3.map((i: any) => {\n                    let color = \"rgb(204, 170, 0)\"\n                    if (i.changePercent > 0) {\n                        if (i.changePercent > 6.5) {\n                            color = \"rgb(255, 0, 255)\"\n                        } else {\n                            color = \"green\"\n                        }\n\n                    }\n                    if (i.changePercent < 0) {\n                        if (i.changePercent < -6.5) {\n                            color = \"rgb(0, 204, 204)\"\n                        } else {\n                            color = \"red\"\n                        }\n\n                    }\n                    return <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\", color }}>\n                        <div>{i.symbol} </div>\n                        <div>{i.changePercent}</div>\n                    </div>\n                })\n            }\n        </div>\n\n    }\n\n    const renderPotentialBuyTable = () => {\n        return <div style={{ margin: \"0 20px\", display: \"flex\" }}>\n            <div style={{ width: \"300px\" }}>\n                <Table\n                    size=\"small\"\n                    dataSource={dataSource}\n                    columns={columns}\n                    pagination={false}\n                    scroll={{ y: 500 }} />\n            </div>\n            <div style={{ marginLeft: \"20px\" }}>\n                <div>\n                    {\n                        confirmReset\n                            ? <div style={{ display: \"flex\" }}>\n                                <Button onClick={handleReset}>Sure</Button>\n                                <Button onClick={() => setConfirmReset(false)}>Cancel</Button>\n                            </div>\n                            : <Button onClick={() => setConfirmReset(true)}> Reset</Button>\n                    }\n                    <Button onClick={() => setEditable(!editable)}>Edit</Button>\n\n                </div>\n                <div>\n                    <Button onClick={handleFilter}>Turn {filtered ? \"Off\" : \"On\"} Filtered</Button>\n                    <div>\n                        Change Percent Min: {changePercentMin}\n                    </div>\n                    <div>\n                        Change Percent Max: {changePercentMax}\n                    </div>\n                    <div>\n                        Volume Change: {estimatedVolumeChange}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    }\n\n    return <div style={{ background: \"white\", display: 'flex' }} className=\"StockMarketOverview\">\n        <div style={{ display: \"flex\" }}>\n            {renderBds()}\n            {renderCk()}\n            {renderWatching()}\n            {/* {renderPotentialBuyTable()} */}\n        </div>\n    </div>\n}\n","import { useEffect, useState } from \"react\";\nimport { Timeline, Modal, notification, Input, DatePicker } from 'antd';\nimport MDEditor from '@uiw/react-md-editor';\nimport axios from \"axios\";\nimport { Spin, Button } from \"antd\";\nimport moment from 'moment';\n\nexport default function StockEvent() {\n    const [modal, setModal] = useState(false);\n    const [listEvents, setListEvents] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [tempEvent, setTempEvent] = useState({} as any);\n\n    const fetch = async () => {\n        const res: any = await axios({\n            url: `https://testapi.io/api/aminhp93/resource/events/`,\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n            method: \"GET\"\n        })\n        setLoading(false)\n        if (res && res.data && res.data.data) {\n            setListEvents(res.data.data)\n        }\n    }\n\n    const handleConfirmCreate = async () => {\n        try {\n            setLoading(true)\n            await axios({\n                url: `https://testapi.io/api/aminhp93/resource/events/`,\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n                method: \"POST\",\n                data: tempEvent\n            })\n            fetch()\n            setModal(false)\n            setTempEvent({})\n            setLoading(false)\n            notification.success({ message: \"Success\" })\n        } catch (e) {\n            setLoading(false)\n            notification.error({ message: \"Error\" })\n        }\n    }\n\n    const handleUpdateTitle = (e: any) => {\n        setTempEvent({ ...tempEvent, title: e.target.value })\n    }\n\n    const handleUpdateDate = (e: any) => {\n        setTempEvent({ ...tempEvent, time: e.format('YYYY-MM-DD') })\n    }\n\n    const handleUpdateContentEvent = (e: any) => {\n        setTempEvent({ ...tempEvent, content: e })\n    }\n\n    useEffect(() => {\n        fetch()\n    }, [])\n\n    if (loading) return <Spin />\n    return <div>\n        {\n            modal\n                ? <Modal visible={true} onCancel={() => setModal(false)} footer={null} >\n                    <div>\n                        <div style={{ height: \"50px\" }}>\n                            <Button type=\"primary\" onClick={handleConfirmCreate}>\n                                Confirm\n                            </Button>\n                            <Button onClick={() => setModal(false)}>\n                                Cancel\n                            </Button>\n                        </div>\n                        <div>\n                            <Input onChange={handleUpdateTitle} />\n                            <DatePicker onChange={handleUpdateDate} defaultValue={moment()} />\n                            <MDEditor\n                                height={500}\n                                value={tempEvent.content}\n                                onChange={handleUpdateContentEvent}\n                            />\n                        </div>\n                    </div>\n                </Modal>\n                : <>\n                    <div style={{ height: \"50px\" }}>\n                        <Button onClick={() => setModal(true)}>Create</Button>\n                    </div>\n\n                    <Timeline mode={'left'}>\n                        {\n                            listEvents.map((i: any) => {\n                                return <Timeline.Item style={{ cursor: \"pointer\" }}>\n                                    <StockEventItem data={i} cb={fetch} />\n                                </Timeline.Item>\n                            })\n                        }\n\n                    </Timeline>\n                </>\n        }\n    </div>\n}\n\ninterface StockEventItemProps {\n    data: any;\n    cb: any;\n}\n\nfunction StockEventItem({ data, cb }: StockEventItemProps) {\n    const [modal, setModal] = useState(false);\n    const [canEdit, setCanEdit] = useState(false);\n    const [canDelete, setCanDelete] = useState(false);\n    const [tempEvent, setTempEvent] = useState(data);\n    const [event, setEvent] = useState(data);\n\n    const handleConfirmUpdate = async () => {\n        try {\n            await axios({\n                url: `https://testapi.io/api/aminhp93/resource/events/${event.id}/`,\n                data: tempEvent,\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n                method: \"PUT\"\n            })\n            setTempEvent({})\n            setEvent(tempEvent)\n            setCanEdit(false)\n            cb && cb()\n            notification.success({ message: \"Success\" })\n        } catch (e) {\n            notification.error({ message: \"Error\" })\n        }\n    }\n\n    const handleConfirmDelete = async () => {\n        try {\n            await axios({\n                url: `https://testapi.io/api/aminhp93/resource/events/${event.id}/`,\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n                method: \"DELETE\"\n            })\n            cb && cb()\n            setModal(false)\n            notification.success({ message: \"Success\" })\n        } catch (e) {\n            notification.error({ message: \"Error\" })\n        }\n    }\n\n    const handleUpdateContentEvent = (e: any) => {\n        setTempEvent({ ...tempEvent, content: e })\n    }\n\n    const handleCancel = () => {\n        setTempEvent({})\n        setCanEdit(false)\n    }\n\n    const handleUpdateTitle = (e: any) => {\n        setTempEvent({ ...tempEvent, title: e.target.value })\n    }\n\n    const handleUpdateDate = (e: any) => {\n        setTempEvent({ ...tempEvent, time: e.format('YYYY-MM-DD') })\n    }\n\n    return <>\n        <div onClick={() => setModal(true)} >\n            {event.time} - {event.title}\n        </div>\n        {modal && <Modal visible={true} onCancel={() => setModal(false)} footer={null} >\n            <div style={{ display: \"flex\" }}>\n                {\n                    canEdit\n                        ? <div>\n                            <div style={{ height: \"50px\" }}>\n                                <Button type=\"primary\" onClick={handleConfirmUpdate}>\n                                    Confirm\n                                </Button>\n                                <Button onClick={handleCancel}>\n                                    Cancel\n                                </Button>\n                            </div>\n                            <div>\n                                <Input defaultValue={tempEvent.title} onChange={handleUpdateTitle} />\n                                <DatePicker onChange={handleUpdateDate} defaultValue={moment(tempEvent.time)} />\n\n                                <MDEditor\n                                    height={500}\n                                    value={tempEvent.content}\n                                    onChange={handleUpdateContentEvent}\n                                />\n                            </div>\n                        </div>\n                        : (!canDelete && <div>\n                            <Button type=\"primary\" danger onClick={() => {\n                                setCanEdit(true)\n                            }}>Update</Button>\n                        </div>)\n                }\n\n                {\n                    canDelete\n                        ? <div>\n                            <div style={{ height: \"50px\" }}>\n                                <Button type=\"primary\" onClick={handleConfirmDelete}>\n                                    Confirm\n                                </Button>\n                                <Button onClick={() => setCanDelete(false)}>\n                                    Cancel\n                                </Button>\n                            </div>\n                        </div>\n                        : (!canEdit && <div>\n                            <Button style={{ marginLeft: \"20px\" }} type=\"primary\" danger onClick={() => {\n                                setCanDelete(true)\n                            }}>Delete</Button>\n                        </div>)\n                }\n\n            </div>\n\n            {\n                (canEdit || canDelete)\n                    ? null\n                    : <div>\n                        <div>{event.time} - {event.title}</div>\n                        <MDEditor.Markdown source={event.content} />\n                    </div>\n            }\n        </Modal>}\n    </>\n}","import React, { useEffect, useState } from \"react\";\nimport { keyBy, flatten } from \"lodash\";\nimport moment from \"moment\";\nimport { List, Button } from 'antd';\nimport parse from 'html-react-parser';\n\nimport StockService from '../../services/stock'\n\nexport default function StockNews() {\n    const [list, setList] = useState([]);\n    const [viewDetail, setViewDetail] = useState(false);\n    const [newsDetail, setNewsDetail] = useState(null);\n\n    const fetch = async () => {\n        const res = await StockService.getWatchlist()\n        if (res && res.data) {\n            const listWatchlist = keyBy(res.data, \"name\")\n\n            const listWatching = listWatchlist['watching']\n            const listPromises: any = [];\n            ((listWatching || {}).symbols || []).forEach((i: any) => {\n                listPromises.push(StockService.getStockNews(i))\n            })\n            return Promise.all(listPromises).then((res2: any) => {\n                let mappedData = res2\n                    .map((i: any) => {\n                        return i.data.map((j: any) => {\n                            j.symbol = i.config.data\n                            return j\n                        })\n                    })\n\n                mappedData = flatten(mappedData)\n                mappedData = mappedData.sort((a: any, b: any) => {\n                    return new Date(b.date).getTime() > new Date(a.date).getTime() ? 1 : -1\n                })\n                setList(mappedData)\n            })\n        }\n    }\n\n    const fetchNewsDetail = async (id: number) => {\n        const res = await StockService.getStockNewsDetail(id);\n        if (res && res.data) {\n            setNewsDetail(res.data.content)\n        }\n    }\n\n    const handleClickNews = (id: number) => {\n        setViewDetail(true)\n        fetchNewsDetail(id)\n\n    }\n\n    const handleBack = () => {\n        setViewDetail(false)\n        setNewsDetail(null)\n    }\n\n    useEffect(() => {\n        setInterval(() => {\n            fetch();\n        }, 1000 * 60)\n        fetch();\n\n    }, [])\n\n    return <div className=\"StockNews\">\n        {\n            viewDetail\n                ? <div style={{ display: \"flex\", flexDirection: \"column\", overflow: \"hidden\", height: \"100%\" }}>\n                    <div style={{ height: \"50px\" }}>\n                        <Button onClick={handleBack}>Back</Button>\n                    </div>\n\n                    <div style={{ flex: 1, overflow: \"auto\" }}>{newsDetail && parse(newsDetail)}</div>\n                </div>\n                : <List\n                    style={{ overflow: \"auto\", height: \"100%\" }}\n                    bordered\n                    dataSource={list}\n                    renderItem={item => (\n                        <List.Item\n                            onClick={() => handleClickNews(item.postID)}\n                            className={`StockNews-item flex ${moment(item.date).format(\"MM-DD\") === moment().format(\"MM-DD\") ? \"highlight\" : \"\"}`}>\n                            <div style={{ width: \"60px\" }}>\n                                {moment(item.date).format(\"MM-DD\")}\n                            </div>\n                            <div style={{ flex: 1 }}>\n                                {item.symbol} - {item.title}\n                            </div>\n\n                        </List.Item>\n                    )}\n                />\n        }\n\n    </div>\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { Modal, Menu, Dropdown } from \"antd\";\nimport { MoreOutlined } from '@ant-design/icons';\n\nimport HistoryTrade from \"./HistoryTrade/HistoryTrade\";\nimport StockTools from \"./StockTools/StockTools\";\nimport StockTestBreak from \"./StockTestBreak/StockTestBreak\";\nimport StockMarketOverview from \"./StockMarketOverview/StockMarketOverview\";\nimport Note from '../Note/Note'\nimport StockEvent from \"./StockEvent/StockEvent\";\nimport StockNews from \"./StockNews\";\n\n\nexport default function Stock() {\n    const [modal, setModal] = useState(null);\n\n    const handleChangeMenu = (e: any) => {\n        if (e.key === \"tools\") {\n            setModal(\"StockTools\")\n        } else if (e.key === \"historyTrade\") {\n            setModal(\"HistoryTrade\")\n        } else if (e.key === \"testBreak\") {\n            setModal(\"StockTestBreak\")\n        }\n    }\n\n    const menu = <Menu onClick={handleChangeMenu}>\n        <Menu.Item key=\"tools\">\n            Tools\n        </Menu.Item>\n        <Menu.Item key=\"historyTrade\">\n            History trade\n        </Menu.Item>\n        <Menu.Item key=\"testBreak\">\n            Test Break (Dev mode)\n        </Menu.Item>\n    </Menu>\n\n    return <div className=\"Stock\">\n        <div className=\"Stock-header\">\n            <div style={{ flex: 1 }}>Stock</div>\n            <div className=\"Stock-header-menu\" >\n                <Dropdown overlay={menu} trigger={['click']}>\n                    <MoreOutlined className=\"font-size-30 color-black\" />\n                </Dropdown>\n            </div>\n        </div>\n        <div className=\"flex\" style={{ flex: 1, overflow: \"hidden\" }}>\n            <div style={{ flex: 1 }}>\n                <StockMarketOverview />\n            </div>\n            <div style={{ flex: 1 }}>\n                <StockEvent />\n            </div>\n            <div style={{ flex: 1 }}>\n                <StockNews />\n            </div>\n        </div>\n        {\n            modal && <Modal className=\"custom-modal\" visible={true} onCancel={() => setModal(null)} footer={null}>\n                {modal === \"HistoryTrade\" && <HistoryTrade />}\n                {modal === \"StockTools\" && <StockTools />}\n                {modal === \"StockTestBreak\" && <StockTestBreak />}\n            </Modal>\n        }\n    </div>\n}\n","import { useState, useEffect } from 'react';\nimport { Button, notification, Spin } from 'antd';\nimport axios from 'axios';\nimport MDEditor from '@uiw/react-md-editor';\n\nfunction getId(key: string) {\n    if (key === \"todos\") {\n        return \"3\"\n    } else if (key === \"stock\") {\n        return \"1\"\n    } else {\n        return null\n    }\n}\n\nexport default function Note({ title }: any) {\n    const id = getId(title)\n    const [canEdit, setCanEdit] = useState(false)\n    const [note, setNote] = useState(`\\n # Write something here for note`);\n    const [tempNote, setTempNote] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const getStockNote = async () => {\n        setLoading(true)\n        const res: any = await axios({\n            url: `https://testapi.io/api/aminhp93/resource/note/${id}`,\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n            method: \"GET\"\n        })\n        setLoading(false)\n        if (res && res.data && res.data.content) {\n            setNote(res.data.content)\n        }\n    }\n\n    const handleConfirm = async () => {\n        let content\n        if (!tempNote) {\n            content = `\\n # Write something here for note`;\n        } else {\n            content = tempNote;\n        }\n        await axios({\n            url: `https://testapi.io/api/aminhp93/resource/note/${id}`,\n            data: {\n                title,\n                content\n            },\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n            method: \"PUT\"\n        }).then(res => {\n            // console.log(res)\n        }).catch(error => {\n            notification.error({ message: \"Error Update Note\" })\n        })\n        setTempNote(null)\n        setNote(content)\n        setCanEdit(false)\n    }\n\n    const handleCancel = () => {\n        setTempNote(null)\n        setCanEdit(false)\n    }\n\n    const handleUdpate = () => {\n        setTempNote(note)\n        setCanEdit(true)\n    }\n\n    useEffect(() => {\n        getStockNote();\n    }, [])\n\n    if (loading) return <Spin />\n\n    return <div className=\"Note\">\n        {\n            canEdit\n                ? <div style={{ height: \"100%\" }}>\n                    <div style={{ height: \"50px\" }}>\n                        <Button type=\"primary\" onClick={handleConfirm}>\n                            Confirm\n                        </Button>\n                        <Button onClick={handleCancel}>\n                            Cancel\n                        </Button>\n                    </div>\n                    <div style={{ flex: 1 }}>\n\n                        <MDEditor\n                            height={500}\n                            value={tempNote}\n                            onChange={setTempNote}\n                        />\n                    </div>\n\n                </div>\n                : <div style={{ height: \"100%\" }}>\n                    <div style={{ height: \"50px\" }}>\n                        <Button type=\"primary\" danger onClick={handleUdpate}>\n                            Update\n                        </Button>\n                    </div>\n                    <div style={{ flex: 1 }}>\n                        <MDEditor.Markdown source={note} />\n                    </div>\n                </div>\n        }\n    </div>\n}\n","import { useState } from \"react\";\nimport { Menu } from \"antd\";\n\nimport Stock from '../../pages/Stock/Stock'\nimport Note from '../Note/Note'\n\nexport default function RootLayout() {\n    const [keyMenu, setKeyMenu] = useState(\"stock\");\n\n    const handleChangeMenu = (e: any) => {\n        setKeyMenu(e.key)\n    }\n\n    // RENDER PART\n\n    const renderMainContent = () => {\n        if (keyMenu === \"stock\") {\n            return <Stock />\n        } else if (keyMenu === \"todos\") {\n            return <Note title=\"todos\" />\n        }\n        return <div>Select menu to render content</div>\n    }\n\n    const renderSearch = () => {\n        return <div className=\"RootLayout-search\">Search</div>\n    }\n\n    const renderListMenu = () => {\n        return <div className=\"RootLayout-list-menu\">\n            <Menu mode=\"inline\" onClick={handleChangeMenu} selectedKeys={[keyMenu]}>\n                <Menu.Item key=\"stock\">Stock</Menu.Item>\n                <Menu.Item key=\"todos\">Todos</Menu.Item>\n                <Menu.Item key=\"test\">Test</Menu.Item>\n            </Menu>\n        </div>\n    }\n\n    const renderSetting = () => {\n        return <div className=\"RootLayout-setting\">renderSetting</div>\n    }\n\n    const renderLeftContainer = () => {\n        return <div className=\"RootLayout-left-container\" >\n            {renderSearch()}\n            {renderListMenu()}\n            {renderSetting()}\n        </div>\n    }\n\n    const renderRightContainer = () => {\n        return <div className=\"RootLayout-right-container\" >\n            <div className=\"RootLayout-main-content\">\n                {renderMainContent()}\n            </div>\n\n        </div>\n    }\n\n    return <div className=\"RootLayout\">\n        {renderLeftContainer()}\n        {renderRightContainer()}\n    </div>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom'\n\nimport './styles/index.less';\n\nimport store from './store/store';\n\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Nhi from './pages/Nhi/Nhi'\n\nimport Stock from './pages/Stock/Stock'\nimport RootLayout from './pages/RootLayout/RootLayout'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{ height: \"100%\" }}>\n        <Switch>\n          <Route path=\"/nhi\">\n            <Nhi />\n          </Route>\n          <Route path=\"/stock\">\n            <Stock />\n          </Route>\n          <Route path=\"/\">\n            <RootLayout />\n          </Route>\n\n          <Route path=\"/\">\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n              </ul>\n            </nav>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}
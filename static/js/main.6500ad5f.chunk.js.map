{"version":3,"sources":["pages/Nhi/IMG_2426.PNG","pages/Nhi/IMG_2432.JPG","pages/Nhi/Nhi.tsx","pages/News/News.tsx","helpers/request.ts","helpers/urls.ts","services/account.ts","reducers/account.ts","pages/Stock/HistoryTrade/HistoryTrade.tsx","helpers/utils.ts","services/stock.ts","pages/Stock/StockTools/StockTools.tsx","pages/Stock/StockTestBreak/StockTestBreak_TestTab.tsx","pages/Stock/StockTestBreak/StockTestBreak_GraphsTab.tsx","pages/Stock/StockTestBreak/StockTestBreak_ScoreboardTab.tsx","pages/Stock/StockTestBreak/StockTestBreak.helpers.ts","pages/Stock/StockTestBreak/StockTestBreak_OverviewTab.tsx","pages/Stock/StockTestBreak/StockTestBreak.tsx","pages/Stock/StockEvent/StockEvent.tsx","pages/Stock/StockMarketOverview/StockMarketOverview.tsx","pages/Stock/Stock.tsx","pages/Todos/Todos.tsx","pages/Utility/Game/Game.tsx","pages/Utility/Music/Music.tsx","pages/Utility/Sport/Sport.tsx","pages/Utility/HistorialEvents/HistorialEvents.tsx","pages/Utility/MemorialSpeech/MemorialSpeech.tsx","pages/Utility/Funny/Funny.tsx","pages/Utility/Utility.tsx","pages/ReactGridRoot/ReactGridRoot.tsx","App.tsx","reducers/index.ts","store/store.ts","index.tsx"],"names":["img1","require","img2","Nhi","useState","solved1","setSolved1","solved2","setSolved2","refAnimationInstance","useRef","intervalId","setIntervalId","getInstance","useCallback","instance","current","nextTickAnimation","getAnimationSettings","startAnimation","setInterval","setTimeout","stopAnimation","clearInterval","reset","useEffect","startDate","moment","diffCountDay","diff","percentCountDay","Number","toFixed","style","height","display","flexDirection","background","alignItems","justifyContent","fontSize","flex","padding","width","rows","columns","onSolved","imageSrc","default","marginTop","type","percent","color","HeartOutlined","GiftOutlined","refConfetti","position","pointerEvents","top","left","format","originXA","originXB","startVelocity","spread","ticks","zIndex","particleCount","origin","x","min","max","Math","random","y","News","quote","setQuote","getCovid","a","axios","method","url","res","data","content","author","headers","request","options","create","client","then","catch","err","notification","error","message","description","String","placement","duration","AccountUrls","fromDate","toDate","index","AccountService","postAuthToken","fetchAccount","fetchAccountPortfolio","fetchAccountAssets","fetchAccountStocks","fetchOrdersHistory","fetchCashStatement","createSlice","name","initialState","reducers","mapDispatchToProps","password","username","token","connect","props","filterObj","endDate","orderStatus","listOrdersHistory","setListOrdersHistory","defaultColumns","title","dataIndex","key","align","render","transactionDate","execType","orderQuantity","toLocaleString","orderPrice","matchQuantity","matchAveragePrice","feeOrder","orderTime","mainColumns","finalChange","initialAmount","setColumns","getHistoryTrade","res2","filteredList","uniqBy","filter","i","ignoreSells","mappedList","map","j","orderID","length","listSell","stop","forEach","symbol","concat","push","listBuy","totalVolumeBuy","totalVolumeSell","sum","stop2","start","end","onClick","dataSource","pagination","scroll","DATE_FORMAT","StockService","getHistoricalQuotes","platform","add","toUpperCase","params","offset","limit","pageNumber","pageSize","getFundamental","getWatchlist","StockTools","listWatchlists","setListWatchlists","loading","setLoading","handleUpdateThanhKhoanVua","wlAll","symbols","wlBlacklist","finalList","includes","chunkedListSymbol","chunk","listPromises","Promise","all","partialRes","mappedRes","orderBy","minTotalValue","minBy","totalValue","minTotalVolume","totalVolume","thanh_khoan_vua_wl","update","list","watchlistID","userName","success","StockToolItem","dataAll","setData","join","value","setValue","getHistorialQuoteAll","getHistorialQuote","BILLION","disabled","marginLeft","danger","onChange","e","target","onPressEnter","split","StockTestBreak_TestTab","StockTestBreak_GraphsTab","listDataKey","listColor","LineChart","margin","right","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Legend","Line","stroke","strokeWidth","StockTestBreak_ScoreboardTab","cb","setSymbol","tradingTime","priceChange","volume15dayChange","t3Change","sorter","b","highestChangePrice20day","highestPriceCloseDate","lowestChangePrice20day","lowestPriceCloseDate","singleColumns","sellDate","changeSellDate","totalNAV","baseNAV","combinedColumns","buyDate","percentChange","testVariableColumns","variableCombine","findSellDate","listData","result","buyItem","changePercent","buyItemIndex","var1","var2","var3","filteredListData","sortBy","sellIndex","next","adjClose","analyseData","fullData","sellDateObj","sortedData","dataObj","keyBy","d","isBefore","date","findBuyDate","isEmpty","RangePicker","DatePicker","Option","Select","StockTestBreak_OverviewTab","listSymbol","setListSymbol","setStartDate","setEndDate","setListData","selectedWatchlist","setSelectedWatchlist","testType","setTestType","combinedData","setCombinedData","testVariableData","setTestVariableData","setVolume15dayChange","getData","combined","testVariable","get","xxx","todayClose","yesterdayClose","diffInMonth","t3Price","t3PriceClose","arrVolume","totalDealVolume","mean","arr20day","highestPriceClose","maxBy","lowestPriceClose","previousDayChange","open","high","average","meanBy","analysedData","testList","console","log","failedSymbolList","failedSymbol","sortedRes","splice","maxLength","item","count","rootResult","range","var4","tempRes","cloneDeep","buyDateObj","objRes","clickTestCombine","dateFormat","listDropdown","children","objWatchlists","menu","Item","overflow","defaultValue","overlay","arrow","mode","allowClear","placeholder","TabPane","Tabs","StockTestBreak","tab","setTab","defaultActiveKey","StockEvent","time","note","StockEventItem","modal","setModal","visible","onCancel","footer","StockMarketOverview","data1","setData1","data2","setData2","data3","setData3","data4","setData4","filtered","setFiltered","editable","setEditable","confirmReset","setConfirmReset","changePercentMin","setChangePercentMin","changePercentMax","setChangePercentMax","estimatedVolumeChange","setEstimatedVolumeChange","fetch","watchlistName","xxx2","listItem","priceClose","todayItem","averageVolume15Days","dealVolume","todayVolume","sort","fetchList","handleReset","listThanhKhoanVua","handleRemove","removedData","localeCompare","CloseOutlined","className","size","TextArea","Input","Stock","setNote","editNote","setEditNote","getStockNote","debounnceHandleChangeNote","debounce","onMouseDown","stopPropagation","textAlign","Todos","Game","href","rel","Music","test","action","authorization","info","file","status","fileList","icon","UploadOutlined","Sport","HistorialEvents","MemorialSpeech","Funny","Utility","ResponsiveReactGridLayout","ReactGridLayout","WidthProvider","Responsive","ReactGridRoot","text","remarkPlugins","remarkGfm","layouts","lg","w","h","measureBeforeMount","id","component","App","path","to","rootReducer","combineReducers","enhancer","composeEnhancers","compose","applyMiddleware","thunk","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"8IAAA,OAAe,cAA0B,sC,iCCAzC,OAAe,cAA0B,sC,2PCSnCA,EAAOC,EAAQ,KACfC,EAAOD,EAAQ,KAEN,SAASE,IAAO,IAAD,EAEIC,oBAAS,GAFb,mBAEnBC,EAFmB,KAEVC,EAFU,OAGIF,oBAAS,GAHb,mBAGnBG,EAHmB,KAGVC,EAHU,KAIpBC,EAAuBC,iBAAO,MAJV,EAKUN,mBAAS,MALnB,mBAKnBO,EALmB,KAKPC,EALO,KAOpBC,EAAcC,uBAAY,SAACC,GAC7BN,EAAqBO,QAAUD,IAChC,IAEGE,EAAoBH,uBAAY,WAC9BL,EAAqBO,UACrBP,EAAqBO,QAAQE,EAAqB,GAAK,KACvDT,EAAqBO,QAAQE,EAAqB,GAAK,QAE5D,IAEGC,EAAiBL,uBAAY,WAC1BH,GACDC,EAAcQ,YAAYH,EAAmB,MAEjDI,YAAW,WACPC,MACD,OACJ,CAACX,EAAYM,IAOVK,GALiBR,uBAAY,WAC/BS,cAAcZ,GACdC,EAAc,QACf,CAACD,IAEkBG,uBAAY,WAC9BS,cAAcZ,GACdC,EAAc,MACdH,EAAqBO,SAAWP,EAAqBO,QAAQQ,UAC9D,CAACb,KAEJc,qBAAU,WACN,OAAO,WACHF,cAAcZ,MAEnB,CAACA,IAUJ,IAAMe,EAAYC,IAAO,aAAc,cAEjCC,EADMD,MACaE,KAAKH,EAAW,QACnCI,EAAkBC,QAAuB,IAAfH,EAAA,OAAiCI,QAAQ,IAEzE,OAAO,sBAAKC,MAAO,CAAEC,OAAQ,OAAQC,QAAS,OAAQC,cAAe,UAA9D,UACH,qBAAKH,MAAO,CAAEC,OAAQ,QAASG,WAAY,YAAaF,QAAS,OAAQG,WAAY,SAAUC,eAAgB,SAAUC,SAAU,QAAnI,uCAGA,sBAAKP,MAAO,CAAEQ,KAAM,EAAGN,QAAS,OAAQE,WAAY,YAAaE,eAAgB,gBAAiBG,QAAS,UAAWJ,WAAY,UAAlI,UACI,sBAAKL,MAAO,CACRU,MAAO,QACPN,WAAY,aAFhB,UAII,cAAC,eAAD,CACIO,KAAM,EACNC,QAAS,EACTC,SAAU,WACNxC,GAAW,GACPC,GAASY,KAEjB4B,SAAU/C,EAAKgD,UACnB,qBAAKf,MAAO,CAAEU,MAAO,OAAQR,QAAS,OAAQI,eAAgB,SAAUU,UAAW,QAAnF,SACK5C,EAEG,cAAC,IAAD,CAAU6C,KAAK,SAASC,QAAS,IAAKR,MAAO,KAE3C,qBAAKV,MAAO,CAAEO,SAAU,QAAxB,kCAId,8BACKnC,GAAWE,EACN,sBAAK0B,MAAO,CAAEO,SAAU,OAAQY,MAAO,MAAOjB,QAAS,OAAQC,cAAe,UAA9E,UAA0F,yDAA1F,IAAgI,cAACiB,EAAA,EAAD,CAAepB,MAAO,CAAEO,SAAU,QAASY,MAAO,SAAlL,OACA,qBAAKnB,MAAO,CAAEO,SAAU,QAAxB,SAAkC,cAACc,EAAA,EAAD,CAAcrB,MAAO,CAAEO,SAAU,QAASY,MAAO,aAE7F,sBAAKnB,MAAO,CACRU,MAAO,QACPN,WAAY,aAFhB,UAII,cAAC,eAAD,CACIO,KAAM,EACNC,QAAS,EACTC,SAAU,WACNtC,GAAW,GACPH,GAASc,KAEjB4B,SAAU7C,EAAK8C,UACnB,qBAAKf,MAAO,CAAEU,MAAO,OAAQR,QAAS,OAAQI,eAAgB,SAAUU,UAAW,QAAnF,SACK1C,EACK,cAAC,IAAD,CAAU2C,KAAK,SAASC,QAAS,IAAKR,MAAO,KAC7C,qBAAKV,MAAO,CAAEO,SAAU,QAAxB,kCASd,cAAC,IAAD,CAAqBe,YAAa1C,EAAaoB,MAAO,CAClDuB,SAAU,QACVC,cAAe,OACfd,MAAO,OACPT,OAAQ,OACRwB,IAAK,EACLC,KAAM,QAKd,qBAAK1B,MAAO,CAAEC,OAAQ,QAASG,WAAY,iBAAkBF,QAAS,OAAQI,eAAgB,SAAUG,QAAS,UAAjH,SACKrC,GAAWE,GACR,sBAAK0B,MAAO,CAAEE,QAAS,OAAQG,WAAY,SAAUC,eAAgB,UAArE,UACI,cAAC,IAAD,CAAUW,KAAK,SAASC,QAASrB,EAAiB8B,OAAQ,SAAAT,GAAO,gBAAOvB,EAAP,YACjE,qBAAKK,MAAO,CAAEgB,UAAW,QAAzB,qCAWpB,SAAS/B,EAAqB2C,EAAeC,GACzC,MAAO,CACHC,cAAe,GACfC,OAAQ,IACRC,MAAO,GACPC,OAAQ,EACRC,cAAe,IACfC,OAAQ,CACJC,GAZWC,EAYMT,EAZIU,EAYMT,EAX5BU,KAAKC,UAAYF,EAAMD,GAAOA,GAY7BI,EAAGF,KAAKC,SAAW,KAb/B,IAAuBH,EAAUC,E,0GC/IlB,SAASI,IAAQ,IAAD,EACDvE,mBAAS,MADR,mBACpBwE,EADoB,KACbC,EADa,KAErBC,EAAQ,uCAAG,4BAAAC,EAAA,sEAEKC,IAAM,CACpBC,OAAQ,MACRC,IAAK,mCAJI,QAEPC,EAFO,SASFA,EAAIC,MACXP,EAASM,EAAIC,MAVJ,2CAAH,qDAkBd,OAJA3D,qBAAU,WACNqD,MACD,IAEI,uCAEH,8CAGCF,GACG,gCAAMA,EAAMS,QAAZ,MAAwBT,EAAMU,OAA9B,OAEJ,qM,gEC3BJC,EAAU,CACV,eAAgB,oBA8BLC,EA1BC,SAACC,GAoBb,OATIA,EAAQF,UACRA,EAAUE,EAAQF,SAGPP,IAAMU,OAAO,CACxBH,WAIGI,CAAOF,GACTG,MApBa,SAACT,GAAD,OAAcA,KAqB3BU,OApBW,SAACC,GACbC,IAAaC,MAAM,CACfC,QAAS,QACTC,YAAaC,OAAOL,GACpBM,UAAW,aACXC,SAAU,QChBTC,EACM,2CADNA,EAEK,wDAFLA,EAGc,qEAHdA,EAIW,kEAJXA,EAKW,kEALXA,EAMW,SAACC,EAAkBC,GAAnB,sGAA+HD,EAA/H,mBAAkJC,EAAlJ,mBANXF,EAOW,SAACG,GAAD,qHAA2HA,EAA3H,sBCiDTC,EArDQ,CACnBC,cADmB,SACLvB,GACV,OAAOI,EAAQ,CACXP,OAAQ,OACRC,IAAKoB,EACLlB,UAGRwB,aARmB,SAQNrB,GACT,OAAOC,EAAQ,CACXD,UACAN,OAAQ,MACRC,IAAKoB,KAGbO,sBAfmB,SAeGtB,GAClB,OAAOC,EAAQ,CACXD,UACAN,OAAQ,MACRC,IAAKoB,KAGbQ,mBAtBmB,SAsBAvB,GACf,OAAOC,EAAQ,CACXD,UACAN,OAAQ,MACRC,IAAKoB,KAGbS,mBA7BmB,SA6BAxB,GACf,OAAOC,EAAQ,CACXD,UACAN,OAAQ,MACRC,IAAKoB,KAGbU,mBApCmB,SAoCAzB,EAAcgB,EAAkBC,GAC/C,OAAOhB,EAAQ,CACXD,UACAN,OAAQ,MACRC,IAAKoB,EAA+BC,EAAUC,MAGtDS,mBA3CmB,SA2CA1B,EAAckB,GAC7B,OAAOjB,EAAQ,CACXD,UACAN,OAAQ,MACRC,IAAKoB,EAA+BG,OC3C3BS,YAAY,CAC7BC,KAAM,UACNC,aAAc,GACdC,SAAU,KAKd,Q,OCkPA,IAAMC,EAAqB,CACvBX,cDjPyB,wCAAuB,8BAAA5B,EAAA,6DAC1CK,EAAO,CACTmC,SAAU,cACVC,SAAU,YAHkC,SAK9Bd,EAAeC,cAAcvB,GALC,cAK1CD,EAL0C,yBAMzCA,GANyC,4CCkPhD6B,mBDzM8B,SAACS,EAAelB,EAAkBC,GAAlC,6BAAsE,8BAAAzB,EAAA,6DAC9FQ,EAAU,CACZ,eAAgBkC,GAFgF,SAIlFf,EAAeM,mBAAmBzB,EAASgB,EAAUC,GAJ6B,cAI9FrB,EAJ8F,yBAK7FA,GAL6F,6CC4MzFuC,cAAQ,KAAMJ,EAAdI,EApPf,SAAsBC,GAClB,IAAMC,EAAY,CACdlG,UAAW,aACXmG,QAASlG,MAASiC,OAAO,cACzBkE,YAAa,KAJgB,EAOiB1H,mBAAS,IAP1B,mBAO1B2H,EAP0B,KAOPC,EAPO,KAQ3BC,EAAsB,CACxB,CACIC,MAAO,eACPC,UAAW,UACXC,IAAK,UACLzF,MAAO,KAEX,CACIuF,MAAO,OACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOzD,IAAOyD,EAAKmD,iBAAiB3E,OAAO,gBAGnD,CACIsE,MAAO,QACPG,MAAO,SACPF,UAAW,SACXC,IAAK,UAET,CACIF,MAAO,OACPG,MAAO,SACPC,OAAQ,SAAClD,GACL,MAAsB,OAAlBA,EAAKoD,SACE,qBAAKvG,MAAO,CAAEmB,MAAO,SAArB,iBACkB,OAAlBgC,EAAKoD,SACL,qBAAKvG,MAAO,CAAEmB,MAAO,OAArB,iBAEA,KAInB,CACI8E,MAAO,SACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKqD,eAAkB1G,OAAOqD,EAAKqD,eAAgBC,eAAe,WAGjF,CACIR,MAAO,UACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKuD,YAAe5G,OAAOqD,EAAKuD,YAAaD,eAAe,WAG3E,CACIR,MAAO,UACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKwD,eAAkB7G,OAAOqD,EAAKwD,eAAgBF,eAAe,WAGjF,CACIR,MAAO,cACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKyD,mBAAsB9G,OAAOqD,EAAKyD,mBAAoBH,eAAe,WAGzF,CACIR,MAAO,aACPI,OAAQ,SAAClD,GACL,MAAyB,MAArBA,EAAK0C,YACE,OACqB,MAArB1C,EAAK0C,YACL,eAEA,KAInB,CACII,MAAO,MACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAK0D,UAAa1D,EAAK0D,SAAUJ,eAAe,WAG/D,CACIR,MAAO,YACPI,OAAQ,SAAClD,GACL,OAAOA,EAAK2D,aAKlBC,EAAmB,CACrB,CACId,MAAO,OACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOzD,IAAOyD,EAAKmD,iBAAiB3E,OAAO,gBAGnD,CACIsE,MAAO,QACPG,MAAO,SACPF,UAAW,SACXC,IAAK,UAET,CACIF,MAAO,OACPG,MAAO,SACPC,OAAQ,SAAClD,GACL,MAAsB,OAAlBA,EAAKoD,SACE,qBAAKvG,MAAO,CAAEmB,MAAO,SAArB,iBACkB,OAAlBgC,EAAKoD,SACL,qBAAKvG,MAAO,CAAEmB,MAAO,OAArB,iBAEA,KAInB,CACI8E,MAAO,UACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKwD,eAAkB7G,OAAOqD,EAAKwD,eAAgBF,eAAe,WAGjF,CACIR,MAAO,cACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKyD,mBAAsB9G,OAAOqD,EAAKyD,mBAAoBH,eAAe,WAGzF,CACIR,MAAO,MACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAK6D,cAGpB,CACIf,MAAO,eACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAK8D,eAAkBnH,OAAOqD,EAAK8D,eAAgBR,eAAe,YApJpD,EAyJHtI,mBAAS4I,GAzJN,mBAyJ1BnG,EAzJ0B,KAyJjBsG,EAzJiB,KA2J3BC,EAAe,uCAAG,oCAAArE,EAAA,sEACF4C,EAAMhB,gBADJ,cACdxB,EADc,gBAEDwC,EAAMX,mBAAmB7B,EAAIC,KAAKqC,MAAOG,EAAUlG,UAAWkG,EAAUC,SAFvE,QAEdwB,EAFc,QAGXjE,OACCkE,EAAeC,iBAAOF,EAAKjE,KAAKoE,QAAO,SAACC,GAAD,OAAYA,EAAE3B,cAAgBF,EAAUE,eAAc,WAC/F4B,EAAmB,GACjBC,EAAaL,EAAaM,KAAI,SAACH,GACjC,GAAIC,EAAYF,QAAO,SAACK,GAAD,OAAYA,EAAEC,UAAYL,EAAEK,WAASC,OAAS,EAAG,OAAON,EAC/E,GAAmB,OAAfA,EAAEjB,SAAmB,CACrB,IAAMwB,EAAgB,CAACP,GACnBQ,GAAO,EACXX,EAAaY,SAAQ,SAACL,GACbI,IACGJ,EAAEM,SAAWV,EAAEU,QAAUN,EAAEtB,gBAAkBkB,EAAElB,iBAAkC,OAAfsB,EAAErB,WACpEkB,EAAcA,EAAYU,OAAOJ,GACjCC,GAAO,GAGPJ,EAAEM,SAAWV,EAAEU,SAAWN,EAAEtB,gBAAkBkB,EAAElB,iBAAmBsB,EAAEtB,kBAAoBkB,EAAElB,kBAAoBkB,EAAEK,UAAYD,EAAEC,SAA0B,OAAfD,EAAErB,UAC5IwB,EAASK,KAAKR,OAK1B,IAAMS,EAAe,GACjBC,EAAiB,EACfC,EAAkBC,cAAIT,EAASJ,KAAI,SAACH,GAAD,OAAY1H,OAAO0H,EAAEb,mBAE1D8B,GAAQ,EACZpB,EAAaY,SAAQ,SAACL,GACba,IACGH,IAAmBC,IAAiBE,GAAQ,GAE5Cb,EAAEM,SAAWV,EAAEU,QAAyB,OAAfN,EAAErB,UAAqBqB,EAAEtB,gBAAkBkB,EAAElB,kBACtEgC,GAAkBxI,OAAO8H,EAAEjB,eAC3B0B,EAAQD,KAAKR,QAKzB,IAAMc,EAAQF,cAAIH,EAAQV,KAAI,SAACH,GAAD,OAAY1H,OAAO0H,EAAEb,eAAiB7G,OAAO0H,EAAEZ,uBACvE+B,EAAMH,cAAIT,EAASJ,KAAI,SAACH,GAAD,OAAY1H,OAAO0H,EAAEb,eAAiB7G,OAAO0H,EAAEZ,uBAC5EY,EAAER,cAAgB2B,EAAMD,GAASA,EAAQ,KAAK3I,QAAQ,GACtDyH,EAAEP,cAAgByB,EAMtB,OAAOlB,KAEXzB,EAAqB2B,IAnDL,2CAAH,qDA2DrB,OAJAlI,qBAAU,WACN2H,MACD,IAGC,gCACI,sBAAKnH,MAAO,CAAEE,QAAS,OAAQI,eAAgB,iBAA/C,UACI,+CACiBqF,EAAUlG,aAE3B,6CACekG,EAAUC,WAEzB,gDAC4C,MAA1BD,EAAUE,YAAsB,OAAS,SAI/D,cAAC,IAAD,CAAQ+C,QAAS,kBAAM1B,EAAWlB,IAAlC,6BACA,cAAC,IAAD,CAAQ4C,QAAS,kBAAM1B,EAAWH,IAAlC,0BACA,cAAC,IAAD,CACI8B,WAAY/C,EACZlF,QAASA,EACTkI,YAAY,EACZC,OAAQ,CAAEtG,EAAG,c,SC5PhBuG,GAAc,aCoEZC,GAjEM,CACjBC,oBADiB,SACGhB,EAAgBzI,EAAoBmG,EAAkBuD,GAItE,GAAKjB,EASL,OARKtC,IACDA,EAAUlG,MAASiC,OAAO,eAGzBlC,IACDA,EAAYC,MAAS0J,KAAK,EAAG,SAASzH,OAAO,eAGhC,YAAbwH,EACOpG,IAAM,CACTE,IAAI,qCAAD,OAAuCiF,EAAOmB,cAA9C,sBACHrG,OAAQ,MACRM,QAAS,CACL,cAAiB,s5CAErBgG,OAAQ,CACJ7J,UAAU,GAAD,OAAKA,GACdmG,QAAQ,GAAD,OAAKA,GACZ2D,OAAQ,EACRC,MAAO,MAIZzG,IAAM,CACTE,IAAK,0EACLD,OAAQ,MACRsG,OAAQ,CACJpB,OAAQA,EAAOmB,cACf/E,SAAS,GAAD,OAAK7E,EAAL,iBACR8E,OAAO,GAAD,OAAKqB,EAAL,iBACN6D,WAAY,EACZC,SAAU,QAKtBC,eA1CiB,SA0CFzB,GAEX,GAAKA,EACL,OAAOnF,IAAM,CACTE,IAAI,qCAAD,OAAuCiF,EAAvC,gBACHlF,OAAQ,MACRM,QAAS,CACL,cAAiB,y5CAI7BsG,aArDiB,WAsDb,OAAO7G,IAAM,CACTC,OAAQ,MACRC,IAAK,0CACLK,QAAS,CACL,cAAiB,05CC5ClB,SAASuG,GAAWnE,GAAgB,IAAD,EACFvH,mBAAS,IADP,mBACvC2L,EADuC,KACvBC,EADuB,OAEhB5L,oBAAS,GAFO,mBAEvC6L,EAFuC,KAE9BC,EAF8B,KAIxCL,EAAY,uCAAG,4BAAA9G,EAAA,sEACCmG,GAAaW,eADd,QACX1G,EADW,SAENA,EAAIC,MACX4G,EAAkB7G,EAAIC,MAHT,2CAAH,qDAOZ+G,EAAyB,uCAAG,gDAAApH,EAAA,sDACd,GAEVqH,EAAQL,EAAevC,QAAO,SAACC,GAAD,MAAuB,QAAXA,EAAEtC,QAAgB,GAAGkF,QAG/DC,EAAcP,EAAevC,QAAO,SAACC,GAAD,MAAuB,cAAXA,EAAEtC,QAAsB,GAAGkF,QACjFE,EAAYH,EAAM5C,QAAO,SAACC,GAAD,OAAa6C,EAAYE,SAAS/C,MAErDgD,EAAyBC,gBAAMH,EAAW,IAChDL,GAAW,GACP/G,EAAW,GACNsE,EAAI,EAZiB,YAYdA,EAAIgD,EAAkB1C,QAZR,iBAc1B,IADM4C,EAAoB,GACjB9C,EAAI,EAAGA,EAAI4C,EAAkBhD,GAAGM,OAAQF,IAC7C8C,EAAatC,KAAKa,GAAaC,oBAAoBsB,EAAkBhD,GAAGI,GAAI,GAAI,GAAI,YAf9D,iBAiBD+C,QAAQC,IAAIF,GAjBX,QAiBpBG,EAjBoB,OAkB1B3H,EAAMA,EAAIiF,OAAO0C,GAlBS,QAYgBrD,IAZhB,uBAoB9ByC,GAAW,GAELa,EAAYC,kBAAQ7H,EAAIyE,KAAI,SAACH,GAM/B,MALoB,CAChBU,OAAQV,EAAErE,KAAK,GAAG+E,OAClB8C,cAAgBC,gBAAMzD,EAAErE,KAAM,cAAsB+H,WACpDC,eAAiBF,gBAAMzD,EAAErE,KAAM,eAAuBiI,gBAG3D7D,QAAO,SAACC,GAAD,OAAYA,EAAEwD,cAAgB,OAAa,iBAE/CK,EAAqBvB,EAAevC,QAAO,SAACC,GAAD,MAAuB,oBAAXA,EAAEtC,QAA4B,GAE3FoG,EAAOD,EAAoBP,EAAUnD,KAAI,SAACH,GAAD,OAAYA,EAAEU,WAjCzB,4CAAH,qDAoCzBoD,EAAM,uCAAG,WAAOnI,EAAWoI,GAAlB,eAAAzI,EAAA,sEACOC,IAAM,CACpBC,OAAQ,MACRC,IAAI,2CAAD,OAA6CE,EAAKqI,aACrDlI,QAAS,CACL,cAAiB,s5CAErBH,KAAM,CACF+B,KAAM/B,EAAK+B,KACXkF,QAASmB,EACTE,SAAU,2BACVD,YAAarI,EAAKqI,eAXf,QACLtI,EADK,SAcAA,EAAIC,OACXW,IAAa4H,QAAQ,CAAE1H,QAAS,YAChC4F,KAhBO,2CAAH,wDAwBZ,OAJApK,qBAAU,WACNoK,MACD,IAECI,EACO,8BAAK,cAAC,IAAD,MAGT,gCACH,cAAC,IAAD,yTASA,cAAC,IAAD,CAAQpB,QAASsB,EAAjB,oBAGA,uBAEIJ,EAAenC,KAAI,SAACH,EAAQhD,GACxB,OAAO,cAACmH,GAAD,CAAexI,KAAMqE,EAAeoE,QAAS9B,GAAhBtF,SAWpD,SAASmH,GAAcjG,GAA6B,IAAD,EACvBvH,mBAASuH,EAAMvC,MADQ,mBACxCA,EADwC,KAClC0I,EADkC,OAErB1N,mBAASuH,EAAMvC,KAAKiH,QAAQ0B,KAAK,MAFZ,mBAExCC,EAFwC,KAEjCC,EAFiC,OAGjB7N,oBAAS,GAHQ,mBAGxC6L,EAHwC,KAG/BC,EAH+B,KAiBzCqB,EAAM,uCAAG,WAAOC,GAAP,eAAAzI,EAAA,sEACOC,IAAM,CACpBC,OAAQ,MACRC,IAAI,2CAAD,OAA6CE,EAAKqI,aACrDlI,QAAS,CACL,cAAiB,s5CAErBH,KAAM,CACF+B,KAAM/B,EAAK+B,KACXkF,QAASmB,EACTE,SAAU,2BACVD,YAAarI,EAAKqI,eAXf,QACLtI,EADK,SAcAA,EAAIC,OACXW,IAAa4H,QAAQ,CAAE1H,QAAS,YAChC6H,EAAQ3I,EAAIC,MACZ6I,EAAS9I,EAAIC,KAAKiH,QAAQ0B,KAAK,OAjBxB,2CAAH,sDA0BNG,EAAuB,WACzB,IAAMvB,EAAoB,GAC1BvH,EAAKiH,QAAQzC,KAAI,SAACC,GACd8C,EAAatC,KAAK8D,EAAkBtE,OAExC+C,QAAQC,IAAIF,GAAc/G,MAAK,SAAAT,GAC3B,IAAMqI,EAAOrI,EAAIqE,QAAO,SAACC,GAAD,OAAYA,KACpC8D,EAAOC,GACPtB,GAAW,GACXnG,IAAa4H,QAAQ,CAAE1H,QAAS,gBAIlCkI,EAAiB,uCAAG,WAAOhE,GAAP,mBAAApF,EAAA,yDACjBoF,EADiB,wDAEhBzI,EAAYC,MAAS0J,KAAK,IAAM,QAAQzH,OAAOqH,IAC/CpD,EAAUlG,MAAS0J,IAAI,EAAG,QAAQzH,OAAOqH,IAHzB,SAMJjG,IAAM,CACpBC,OAAQ,MACRM,QAAS,CACL,cAAiB,s5CAErBL,IAAI,qCAAD,OAAuCiF,EAAvC,wCAA6EzI,EAA7E,oBAAkGmG,EAAlG,wBAXe,YAMhB1C,EANgB,QAadC,KAbc,sBAcLD,EAAIC,KAAKoE,QAAO,SAACC,GAC1B,OAAOA,EAAE4D,YF5LO,KE4L2B5D,EAAE0D,WF3L9BiB,OE6LVrE,OAAS,GAjBA,0CAkBP,MAlBO,iCAoBXI,GApBW,iCAsBf,MAtBe,4CAAH,sDAyBvB,OAAO,gCACF/E,EAAKqI,YADH,MACmBrI,EAAK+B,KADxB,MACiC/B,EAAKiH,QAAQtC,OACjD,cAAC,IAAD,CAAQsE,SAAUpC,EAAShK,MAAO,CAAEqM,WAAY,QAAUC,QAAM,EAAC1D,QAtEjD,WAChB0C,EAAO,KAqEP,mBACA,cAAC,IAAD,CAAQ1C,QA9CS,WACjBqB,GAAW,GACXgC,KA4C+BG,SAAUpC,EAAzC,8BAEkB,QAAd7G,EAAK+B,MAAkB,uEAG3B,qBAAKlF,MAAO,CAAEE,QAAS,QAAvB,SACI,cAAC,IAAD,CACI6L,MAAOA,EACPQ,SAvFc,SAACC,GACvBR,EAASQ,EAAEC,OAAOV,QAuFVW,aAAc,kBAAMpB,EAAOS,EAAMY,MAAM,WAG/C,0B,cCvNO,SAASC,KACpB,OAAO,0C,0ECCI,SAASC,GAAT,GAA+D,IAA3B1J,EAA0B,EAA1BA,KAAM2J,EAAoB,EAApBA,YAC/CC,EAAY,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAC1P,OAAO,8BACH,eAACC,GAAA,EAAD,CACItM,MAAO,IACPT,OAAQ,IACRkD,KAAMA,EACN8J,OAAQ,CACJxL,IAAK,EACLyL,MAAO,GACPxL,KAAM,GACNyL,OAAQ,GARhB,UAWI,cAACC,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,UACf,cAACC,GAAA,EAAD,CAAOC,OAAQ,CAAC,IAAK,OACrB,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IAEIb,EAAYnF,KAAI,SAACH,EAAQhD,GACrB,OAAO,cAACoJ,GAAA,EAAD,CAAM3M,KAAK,WAAWsM,QAAS/F,EAAGqG,OAAQd,EAAUvI,GAAQsJ,YAAa,YCjBrF,SAASC,GAAT,GAA0D,IAAlBC,EAAiB,EAAjBA,GAAI7K,EAAa,EAAbA,KAAa,EACxChF,mBAAS,OAD+B,mBAC7D+J,EAD6D,KACrD+F,EADqD,KAG9DrN,EAAU,CACZ,CACIqF,MAAO,OACPI,OAAQ,SAAClD,GACL,OAAOzD,IAAOyD,EAAK+K,aAAavM,OAAO,gBAG/C,CACIsE,MAAO,cACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKgL,cAoBpB,CACIlI,MAAO,oBACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAO,qBAAKnD,MAAO,CAEfmB,MAAOgC,EAAKiL,kBAAoB,GAAK,MAAQ,SAF1C,SAGHjL,EAAKiL,sBAKjB,CACInI,MAAO,WACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAO,qBAAKnD,MAAO,CAEfmB,MAAOgC,EAAKkL,UAAY,EAAI,MAAQ,SAFjC,SAGHlL,EAAKkL,aAGjB,CACIpI,MAAO,0BACPqI,OAAQ,SAACxL,EAAQyL,GACb,OAAOzL,EAAE0L,wBAA0BD,EAAEC,yBAEzCpI,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAO,gCAAMA,EAAKqL,wBAAX,MAAuC9O,IAAOyD,EAAKsL,uBAAuB9M,OAAO,SAAjF,SAGf,CACIsE,MAAO,yBACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAO,sBAAKnD,MAAO,CAEfmB,MAAOgC,EAAKuL,wBAA0B,EAAI,MAAQ,SAF/C,UAGHvL,EAAKuL,uBAHF,MAG6BhP,IAAOyD,EAAKwL,sBAAsBhN,OAAO,eAkBzF,OAJAnC,qBAAU,WACNwO,EAAG9F,KACJ,IAEI,qCACH,sBAAKlI,MAAO,CAAEE,QAAS,QAAvB,UACI,qBAAKF,MAAO,CAAEU,MAAO,OAArB,SACI,cAAC,IAAD,khBAeJ,qBAAKV,MAAO,CAAEU,MAAO,OAArB,SACI,cAAC,IAAD,6SAWR,gCACI,cAAC,IAAD,CAAO6L,SA5CW,SAACC,GACvByB,EAAUzB,EAAEC,OAAOV,QA2CqBW,aAxCnB,WACrBsB,OAsCA,UACkF7K,EAAK2E,UAEvF,8BACI,cAAC,IAAD,CACIe,WAAY1F,EACZvC,QAASA,EACTkI,YAAY,EACZC,OAAQ,CAAEtG,EAAG,Y,4CCpIhBmM,GAAgB,CACzB,CACI3I,MAAO,WACPI,OAAQ,SAAClD,GACL,OAAOA,EAAK+K,cAGpB,CACIjI,MAAO,YACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAK0L,WAGpB,CACI5I,MAAO,iBACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAK2L,eAAe/O,QAAQ,KAG3C,CACIkG,MAAO,WACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAK4L,WAGpB,CACI9I,MAAO,UACPG,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAK6L,WAKXC,GAAkB,CAC3B,CACIhJ,MAAO,SACPI,OAAQ,SAAClD,GACL,OAAOA,EAAK+E,SAGpB,CACIjC,MAAO,WACPI,OAAQ,SAAClD,GACL,OAAOA,EAAK+L,UAGpB,CACIjJ,MAAO,YACPI,OAAQ,SAAClD,GACL,OAAOA,EAAK0L,WAGpB,CACI5I,MAAO,iBACPI,OAAQ,SAAClD,GACL,OAAOA,EAAKgM,gBAGpB,CACIlJ,MAAO,YACPI,OAAQ,SAAClD,GACL,OAAOA,EAAK4L,YAKXK,GAAsB,CAC/B,CACInJ,MAAO,kBACPI,OAAQ,SAAClD,GACL,OAAOA,EAAKkM,kBAGpB,CACIpJ,MAAO,WACPI,OAAQ,SAAClD,GACL,OAAOA,EAAK4L,YAKXO,GAAe,SAACJ,EAAiBK,GAAoD,IAC1FC,EAEAC,EACAC,EAGAC,EAPqDC,EAAoC,uDAA7B,GAAIC,EAAyB,wDAAjB,EAAGC,EAAc,uDAAP,GAEhFC,EAAmBC,iBAAOT,EAAU,eAGtCU,GAAa,EACbC,GAAO,EAiCX,OA/BAH,EAAiB9H,SAAQ,SAACT,EAAQhD,GAC1B0L,GAAQ1L,IAAUyL,IAClBT,EAAShI,EACT0I,GAAO,GAEPA,IACI1I,EAAE0G,cAAgBgB,IAClBO,EAAUjI,EACVyI,EAAYzL,EAAQoL,EACpBD,EAAenL,GAGfA,EAAQmL,EAAe,IACnBF,GAAWA,EAAQU,WACnBT,GAAiBlI,EAAE2I,SAAWV,EAAQU,UAAYV,EAAQU,SAAW,KAGrET,EAAgBI,IAChBN,EAAShI,EACT0I,GAAO,GAGPR,EAAgBG,IAChBL,EAAShI,EACT0I,GAAO,QAOhBV,GAGEY,GAAc,SAACjN,EAAWkN,EAAe5Q,EAAmBmG,GAUrE,IATA,IAGIsJ,EACAoB,EAJEC,EAAaP,iBAAO7M,EAAM,eAC1BqN,EAAUC,gBAAMF,EAAY,eAC5Bf,EAAS,GAIXT,EAAW,IACXC,EAAU,IAEL0B,EAAIhR,IAAOD,GAAYiR,EAAEC,SAASjR,IAAOkG,IAAW8K,EAAEtH,IAAI,EAAG,QAAS,CAC3E,IAAMwH,EAAOlR,IAAOgR,GAAG/O,OAAO,cAC1B2O,GAAeM,EAAON,EAAYpC,cACtCgB,EAAUsB,EAAQI,IAASJ,EAAQI,GAAM1C,eAGrCoC,EAAchB,GAAaJ,EAASmB,MAEhCG,EAAQI,GAAM/B,SAAWyB,EAAYpC,YACrCsC,EAAQI,GAAM9B,gBAAkBwB,EAAYH,SAAWK,EAAQI,GAAMT,UAAYK,EAAQI,GAAMT,SAAW,IAC1GpB,EAAWA,GAAYyB,EAAQI,GAAM9B,eAAiB,IAAM,GAXvD,EAYLE,GAZK,EAaLwB,EAAQI,GAAM7B,SAAWjP,OAAOiP,EAAShP,QAAQ,IACjDyQ,EAAQI,GAAM5B,QAAUA,EACxBQ,EAAOpH,KAAKoI,EAAQI,KAIhC,OAAOpB,GAGEqB,GAAc,SAACD,EAAcrB,GACtC,IAAMC,EAAc,GAWpB,OAVAD,EAAS5H,KAAI,SAACH,GACV,IAAMH,EAAeG,EAAErE,MAAQqE,EAAErE,KAAKoE,QAAO,SAACK,GAAD,OAAYA,EAAEsG,cAAgB0C,KACvEvJ,GAAwC,IAAxBA,EAAaS,SACxB0H,EAAOoB,KACRpB,EAAOoB,GAAQ,IAEnBvJ,EAAa,GAAGa,OAASV,EAAEU,OAC3BsH,EAAOoB,GAAMxI,KAAKf,EAAa,QAGlCyJ,kBAAQtB,GAQN,MAPCA,EAAOoB,GAAM9I,OAAS,IACtB0H,EAAOoB,GAAQ7F,kBAAQyE,EAAOoB,GAAO,oBAAqB,SAIvDpB,EAAOoB,GAAM,KCzKpBG,GAAgBC,KAAhBD,YACAE,GAAWC,KAAXD,OAEO,SAASE,KAA8B,IAAD,EACnBhT,oBAAS,GADU,mBAC1C6L,EAD0C,KACjCC,EADiC,OAErB9L,mBAAS,OAFY,mBAE1C+J,EAF0C,KAElC+F,EAFkC,OAGb9P,mBAAS,CAAC,MAAO,MAAO,MAAO,QAHlB,mBAG1CiT,EAH0C,KAG9BC,EAH8B,OAIflT,mBAAS,cAJM,mBAI1CsB,EAJ0C,KAI/B6R,EAJ+B,OAKnBnT,mBAAS,cALU,mBAK1CyH,EAL0C,KAKjC2L,EALiC,OAMzBpT,mBAAS,IANgB,mBAM1CgF,EAN0C,KAMpC0I,EANoC,OAOjB1N,mBAAS,IAPQ,mBAO1CoR,EAP0C,KAOhCiC,EAPgC,OAQLrT,mBAAS,IARJ,mBAQ1C2L,EAR0C,KAQ1BC,EAR0B,OASC5L,mBAAS,MATV,mBAS1CsT,EAT0C,KASvBC,EATuB,OAUjBvT,mBAAS,MAVQ,mBAU1CwT,EAV0C,KAUhCC,EAVgC,QAWTzT,mBAAS,IAXA,qBAW1C0T,GAX0C,MAW5BC,GAX4B,SAYD3T,mBAAS,IAZR,qBAY1C4T,GAZ0C,MAYxBC,GAZwB,SAaC7T,mBAAS,IAbV,qBAa1CiQ,GAb0C,MAavB6D,GAbuB,MAe3CC,GAAO,uCAAG,WAAOhK,EAAgBiK,EAAoBC,GAA3C,yBAAAtP,EAAA,sEACOmG,GAAaC,oBAAoBhB,EAAQzI,EAAWmG,GAD3D,UACNwB,EADM,OAENlE,EAAMmP,cAAIjL,EAAM,qBAFV,yCAID,CAAE,aAAgBc,IAJjB,UAMRoK,EAAMpP,EACLyE,KAAI,SAACH,EAAQhD,GACV,GAAIA,EAAQtB,EAAI4E,OAAS,EAAG,CACxB,IAAMyK,EAAa/K,EAAE2I,SACfqC,EAAiBtP,EAAIsB,EAAQ,GAAG2L,SACtC3I,EAAE2G,YAAcrO,SAASyS,EAAaC,GAAkBA,EAAiB,KAAKzS,QAAQ,IAK1F,IADA,IAAIuC,EAAM,EACDsF,EAAI,EAAGA,EAAI,GAAIA,IAChB1E,EAAIsB,EAAQoD,IAAM1E,EAAIsB,EAAQoD,GAAGuI,SAAW7N,IAC5CA,EAAMY,EAAIsB,EAAQoD,GAAGuI,UAG7B3I,EAAEiL,YAAc3S,SAASwC,EAAMkF,EAAE2I,UAAY3I,EAAE2I,SAAW,KAAKpQ,QAAQ,IACvE,IAAM2S,EAAUxP,EAAIsB,EAAQ,GACxBkO,IACAlL,EAAEmL,aAAeD,EAAQvC,SACzB3I,EAAE6G,SAAWvO,SAAS4S,EAAQvC,SAAW3I,EAAE2I,UAAY3I,EAAE2I,SAAW,KAAKpQ,QAAQ,KAKrF,IADA,IAAI6S,EAAY,GACPhL,EAAI,EAAGA,EAAI,GAAIA,IAChB1E,EAAIsB,EAAQoD,IACZgL,EAAUxK,KAAKlF,EAAIsB,EAAQoD,GAAGiL,iBAGtCrL,EAAE4G,kBAAoBtO,SAAS0H,EAAEqL,gBAAkBC,eAAKF,IAAcE,eAAKF,GAAa,KAAK7S,QAAQ,IACrGyH,EAAEoL,UAAYA,EAId,IADA,IAAIG,EAAW,GACNnL,EAAI,EAAGA,EAAI,GAAIA,IAChB1E,EAAIsB,EAAQoD,IACZmL,EAAS3K,KAAKlF,EAAIsB,EAAQoD,IAalC,GATAJ,EAAEwL,kBAAoBC,gBAAMF,EAAU,YAAY5C,SAClD3I,EAAEiH,sBAAwBwE,gBAAMF,EAAU,YAAY7E,YACtD1G,EAAEgH,wBAA0B1O,SAAS0H,EAAEwL,kBAAoBxL,EAAE2I,UAAY3I,EAAE2I,SAAW,KAAKpQ,QAAQ,IAEnGyH,EAAEmH,qBAAuB1D,gBAAM8H,EAAU,YAAY7E,YACrD1G,EAAE0L,iBAAmBjI,gBAAM8H,EAAU,YAAY5C,SACjD3I,EAAEkH,uBAAyB5O,SAAS0H,EAAE0L,iBAAmB1L,EAAE2I,UAAY3I,EAAE2I,SAAW,KAAKpQ,QAAQ,IAG7FmD,EAAIsB,EAAQ,GAAI,CAChB,IAAM2O,EAAoBjQ,EAAIsB,EAAQ,GAAGkL,cACzClI,EAAE2L,kBAAoBrT,QAA4B,IAApBqT,GAAyBpT,QAAQ,IAInE,OAFAyH,EAAE0G,YAAcxO,IAAO8H,EAAE0G,aAAavM,OAAO,cAEtC6F,MAGX4K,EAhEQ,0CAiED,CACHlK,SACA/E,KAAMmP,IAnEF,QAsERA,EAAMA,EAAI/K,QAAO,SAACC,EAAQhD,GACtB,OAAOgD,EAAE2G,aACF3G,EAAE2G,YAAc,GAChB3G,EAAE4G,kBAAoBA,IACtB5G,EAAE2L,kBAAoB,GACtB3L,EAAE4L,OAAS5L,EAAE6L,MACb7L,EAAEiL,YAAc,MA5EnB,WAgFNa,EAAU,CACZ1C,KAAM,cACNpC,wBAAyB1O,OAAOyT,iBAAOjB,EAAK,2BAA2BvS,QAAQ,KAEnFuS,EAAIlK,KAAKkL,IACLnB,EArFQ,0CAsFD,CACHhP,KAAMmP,EACNpK,SACAmI,SAAUnN,IAzFN,eA4FNsQ,EAAepD,GAAYkC,EAAKpP,EAAKzD,EAAWmG,GAEhDmJ,GAAYkE,gBAAMO,EAAc,aAAe,IAAIzE,SACzDlD,EAAQ2H,GA/FI,kBAiGL,CAAErQ,KAAMqQ,EAActL,SAAQ6G,aAjGzB,4CAAH,0DAoGP0E,GAAQ,uCAAG,kDAAA3Q,EAAA,sDACb8O,EAAY,YACZ3H,GAAW,GAELO,EAAoBC,gBAAM2G,EAAY,IAC5CsC,QAAQC,IAAInJ,GACRtH,EAAW,GACNsE,EAAI,EAPA,YAOGA,EAAIgD,EAAkB1C,QAPzB,iBAST,IADM4C,EAAoB,GACjB9C,EAAI,EAAGA,EAAI4C,EAAkBhD,GAAGM,OAAQF,IAC7C8C,EAAatC,KAAK8J,GAAQ1H,EAAkBhD,GAAGI,KAV1C,iBAYgB+C,QAAQC,IAAIF,GAZ5B,QAYHG,EAZG,OAaT3H,EAAMA,EAAIiF,OAAO0C,GAbR,QAOiCrD,IAPjC,0BAebyC,GAAW,MACL2J,EAAmB1Q,EAAIqE,QAAO,SAACC,GAAD,OAAYA,EAAEqM,kBAE1BD,EAAiB9L,OAAS,GAlBrC,wBAmBThE,IAAaC,MAAM,CAAEC,QAAS4P,EAAiBjM,KAAI,SAACH,GAAD,OAAYA,EAAEqM,gBAAc/H,KAAK,QAnB3E,2BA2Bb,IAHAgI,GADIA,EAAY/I,kBAAQ7H,EAAK,WAAY,SACnB6Q,OAAO,EAAG,IAC1BC,EAAiBf,gBAAMa,EAAW,eACpCtE,EAAS,GA1BA,WA2BJhI,GACL,IAAIyM,EAAY,GAChBH,EAAUnM,KAAI,SAACC,GACXqM,EAAKC,MAAQ1M,EACbyM,EAAKrM,EAAEM,SAAWN,EAAEzE,KAAKqE,IAAM,IAAIuH,YAEvCS,EAAOpH,KAAK6L,IANPzM,EAAI,EAAGA,EAAIwM,EAAU7Q,KAAK2E,OAAQN,IAAM,EAAxCA,GAQT6J,EAAcyC,EAAUnM,KAAI,SAACH,GAAD,OAAYA,EAAEU,WAC1CsJ,EAAYhC,GACZkE,QAAQC,IAAInE,GACZlE,GAAOwI,EAAUnM,KAAI,SAACH,GAAD,OAAYA,EAAEU,WAtCtB,4CAAH,qDAyCRkK,GAAY,uCAAG,4CAAAtP,EAAA,sDACjBmH,GAAW,GACX2H,EAAY,gBAENpH,EAAoBC,gBAAM2G,EAAY,IAC5CsC,QAAQC,IAAInJ,GACRtH,EAAW,GACNsE,EAAI,EAPI,YAODA,EAAIgD,EAAkB1C,QAPrB,iBASb,IADM4C,EAAoB,GACjB9C,EAAI,EAAGA,EAAI4C,EAAkBhD,GAAGM,OAAQF,IAC7C8C,EAAatC,KAAK8J,GAAQ1H,EAAkBhD,GAAGI,IAAI,GAAM,IAVhD,iBAYY+C,QAAQC,IAAIF,GAZxB,QAYPG,EAZO,OAab3H,EAAMA,EAAIiF,OAAO0C,GAbJ,QAO6BrD,IAP7B,0BAejByC,GAAW,MACL2J,EAAmB1Q,EAAIqE,QAAO,SAACC,GAAD,OAAYA,EAAEqM,kBAE1BD,EAAiB9L,OAAS,GAlBjC,wBAmBbhE,IAAaC,MAAM,CAAEC,QAAS4P,EAAiBjM,KAAI,SAACH,GAAD,OAAYA,EAAEqM,gBAAc/H,KAAK,QAnBvE,2BAuBbqI,EAAkB,GAEtBC,gBAAM,GAAI,KAAKzM,KAAI,SAAC0M,GAChBC,EAAUC,oBAAUrR,GAAKyE,KAAI,SAACsM,GAW1B,OAVAA,EAAK5D,SAAW4D,EAAK9Q,KAErB8Q,EAAK9Q,KAAO8Q,EAAK9Q,KAAKoE,QAAO,SAACC,EAAQhD,GAClC,OAAOgD,EAAE2G,aACF3G,EAAE2G,YAAc,GAChB3G,EAAE4G,kBAAoBiG,GACtB7M,EAAE2L,kBAAoB,GACtB3L,EAAE4L,OAAS5L,EAAE6L,MACb7L,EAAEiL,YAAc,MAEpBwB,KAYX,IATA,IAEI/E,EACAL,EACA2F,EACAlE,EACAnB,EANEsF,EAAShE,gBAAM6D,EAAS,UACxB9E,EAAqC,GAMvCT,EAAW,IAEN2B,EAAIhR,IAAOD,GAAYiR,EAAEC,SAASjR,IAAOkG,IAAW8K,EAAEtH,IAAI,EAAG,QAAS,CAC3E,IAAMwH,EAAOlR,IAAOgR,GAAG/O,OAAO,cAEzBuN,IACDsF,EAAa3D,GAAYD,EAAM0D,KACbE,EAAWtG,eAAiBW,GAAY2F,EAAWtG,YAAcW,KAC/EK,EAAUsF,EAAWtG,aAIzBgB,IAEAL,GADAyB,EAAchB,GAAaJ,EAASuF,EAAOD,EAAWtM,QAAQmI,YACpCC,EAAYpC,eAElCiB,EAAgBrP,SAASwQ,EAAYH,SAAWqE,EAAWrE,UAAYqE,EAAWrE,SAAW,KAAKpQ,QAAQ,IAC1GgP,EAAWjP,QAAQiP,GAAY,GAAKuB,EAAYH,SAAWqE,EAAWrE,UAAYqE,EAAWrE,WAAWpQ,QAAQ,IAChHyP,EAAOpH,KAAK,CACR8G,UACAhH,OAAQsM,EAAWtM,OACnB2G,WACAM,gBACAJ,WACAX,kBAAmBoG,EAAWpG,oBAElCc,EAAU,MAItBiF,EAAW/L,KAAK,CACZiH,gBAAgB,GAAD,OAAKgF,GACpBtF,SAAUkE,gBAAMzD,EAAQ,YAAYT,SACpCS,cAIR2E,EAAapJ,kBAAQoJ,EAAY,WAAY,QAC7CT,QAAQC,IAAIQ,GACZnC,GAAoBmC,GAtFH,4CAAH,qDAyFZO,GAAgB,uCAAG,4DAAA5R,EAAA,sDACrB8O,EAAY,YACZ3H,GAAW,GAELO,EAAoBC,gBAAM2G,EAAY,IAC5CsC,QAAQC,IAAInJ,GACRtH,EAAW,GACNsE,EAAI,EAPQ,YAOLA,EAAIgD,EAAkB1C,QAPjB,iBASjB,IADM4C,EAAoB,GACjB9C,EAAI,EAAGA,EAAI4C,EAAkBhD,GAAGM,OAAQF,IAC7C8C,EAAatC,KAAK8J,GAAQ1H,EAAkBhD,GAAGI,IAAI,IAVtC,iBAYQ+C,QAAQC,IAAIF,GAZpB,QAYXG,EAZW,OAajB3H,EAAMA,EAAIiF,OAAO0C,GAbA,QAOyBrD,IAPzB,0BAerByC,GAAW,MACL2J,EAAmB1Q,EAAIqE,QAAO,SAACC,GAAD,OAAYA,EAAEqM,kBAE1BD,EAAiB9L,OAAS,GAlB7B,wBAmBjBhE,IAAaC,MAAM,CAAEC,QAAS4P,EAAiBjM,KAAI,SAACH,GAAD,OAAYA,EAAEqM,gBAAc/H,KAAK,QAnBnE,2BAgCrB,IATM2I,EAAShE,gBAAMvN,EAAK,UACpBsM,EAAqC,GAMvCT,EAAW,IAEN2B,EAAIhR,IAAOD,GAAYiR,EAAEC,SAASjR,IAAOkG,IAAW8K,EAAEtH,IAAI,EAAG,QAC5DwH,EAAOlR,IAAOgR,GAAG/O,OAAO,cAEzBuN,IACDsF,EAAa3D,GAAYD,EAAM1N,KACbsR,EAAWtG,eAAiBW,GAAY2F,EAAWtG,YAAcW,KAC/EK,EAAUsF,EAAWtG,aAIzBgB,IACAoB,EAAchB,GAAaJ,EAASuF,EAAOD,EAAWtM,QAAQmI,WAC9DxB,EAAWyB,GAAeA,EAAYpC,eAElCiB,EAAgBrP,SAASwQ,EAAYH,SAAWqE,EAAWrE,UAAYqE,EAAWrE,SAAW,KAAKpQ,QAAQ,IAC1GgP,EAAWjP,QAAQiP,GAAY,GAAKuB,EAAYH,SAAWqE,EAAWrE,UAAYqE,EAAWrE,WAAWpQ,QAAQ,IAChHyP,EAAOpH,KAAK,CACR8G,UACAhH,OAAQsM,EAAWtM,OACnB2G,WACAM,gBACAJ,aAEJG,EAAU,OAKtBM,GAAUsC,GAAgBtC,GA5DL,4CAAH,qDA+DhBlE,GAAM,uCAAG,WAAOC,GAAP,eAAAzI,EAAA,sEACOC,IAAM,CACpBC,OAAQ,MACRC,IAAI,kDACJK,QAAS,CACL,cAAiB,s5CAErBH,KAAM,CACF+B,KAAM,mBACNkF,QAASmB,EACTE,SAAU,2BACVD,YAAa,WAXV,QACLtI,EADK,SAcAA,EAAIC,MACXW,IAAa4H,QAAQ,CAAE1H,QAAS,YAfzB,2CAAH,sDAmBN4F,GAAY,uCAAG,4BAAA9G,EAAA,sEACMmG,GAAaW,eADnB,QACX1G,EADW,SAENA,EAAIC,MACX4G,EAAkB7G,EAAIC,MAHT,2CAAH,qDAOlB3D,qBAAU,WACNoK,OACD,IAKH,IAHA,IAAM+K,GAAa,aACbC,IAAgB9K,EAAevC,QAAO,SAACC,GAAD,MAAuB,oBAAXA,EAAEtC,QAA4B,IAAM,IAAIkF,SAAW,GACrGyK,GAAgB,GACbrN,GAAI,EAAGA,GAAIoN,GAAa9M,OAAQN,KACrCqN,GAASzM,KAAK,cAAC6I,GAAD,CAAQlF,MAAO6I,GAAapN,IAA5B,SAAyCoN,GAAapN,KAAjBA,KAGvD,IAAMsN,GAAgBrE,gBAAM3G,EAAgB,eAEtCiL,GACF,cAAC,KAAD,CAAMnM,QAAS,SAACqL,GACZvC,EAAqBoD,GAAcb,EAAK9N,MACxCkL,EAAcyD,GAAcb,EAAK9N,KAAKiE,UAF1C,SAKQN,EAAenC,KAAI,SAACH,GAChB,OAAO,cAAC,KAAKwN,KAAN,UACFxN,EAAEtC,MADgBsC,EAAEgE,kBA2HzC,OAAO,gCACH,sBAAKxL,MAAO,CAAEE,QAAS,OAAQD,OAAQ,SAAvC,UAnHO,sBAAKD,MAAO,CAAEU,MAAO,MAAOT,OAAQ,OAAQgV,SAAU,QAAtD,UACH,cAAClE,GAAD,CACIxE,SAAU,SAACC,GACP8E,EAAa5R,IAAO8M,EAAE,IAAI7K,OAAOgT,KACjCpD,EAAW7R,IAAO8M,EAAE,IAAI7K,OAAOgT,MAEnCO,aAAc,CAACxV,IAAOD,EAAWkV,IAAajV,IAAOkG,EAAS+O,KAC9DhT,OAAQgT,KAEZ,uBACA,cAAC,IAAD,CAAOjI,aAAc,kBAAMwF,GAAQhK,IAASlI,MAAO,CAAEU,MAAO,SAAWqL,MAAO7D,EAAQqE,SAAU,SAACC,GAAD,OAAOyB,EAAUzB,EAAEC,OAAOV,UAC1H,cAAC,IAAD,CAAQnD,QAAS,WACbgJ,EAAY,UACZM,GAAQhK,IAFZ,kBAIA,uBACA,cAAC,KAAD,CAAUiN,QAASJ,GAAM5Q,UAAU,aAAaiR,OAAK,EAArD,SACI,8BAAO3D,GAAqBA,EAAkBvM,MAAS,uBAE3D,cAAC,KAAD,CACImQ,KAAK,WACLC,YAAU,EACVtV,MAAO,CAAEU,MAAO,QAChB6U,YAAY,gBACZxJ,MAAOqF,EACP7E,SAAU,SAACC,GAAD,OAAO6E,EAAc7E,IANnC,SAQKqI,KAEL,cAAC,IAAD,CAAQzI,SAAUpC,EAASpB,QAAS6K,GAApC,uBACA,uBACA,cAAC,IAAD,CAAQrH,SAAUpC,EAASpB,QAAS8L,GAApC,2CACA,uBACA,cAAC,IAAD,CAAOhI,aAAc0F,GAAcpS,MAAO,CAAEU,MAAO,SAAWqL,MAAOqC,GAAmB7B,SAAU,SAACC,GAAD,OAAOyF,GAAqBnS,OAAO0M,EAAEC,OAAOV,WAC9I,cAAC,IAAD,CAAQK,SAAUpC,EAASpB,QAASwJ,GAApC,2BACA,gCACI,4DACA,8DACA,iEACA,wGAMD,qBAAKpS,MAAO,CAAEU,MAAO,MAAOT,OAAQ,OAAQgV,SAAU,QAAtD,SACH,cAAC,IAAD,iYAeG,iCACDtD,GAAY,aACA,WAAbA,GAAyB,8BACtB,cAAC,IAAD,CACI9I,WAAY1F,EACZvC,QAASgO,GACT9F,YAAY,EACZC,OAAQ,CAAEtG,EAAG,SAGP,aAAbkP,IACG3H,EACM,cAAC,IAAD,IACA,8BACE,cAAC6C,GAAD,CAA0B1J,KAAMoM,EAAUzC,YAAasE,OAIrD,aAAbO,IACG3H,EACM,cAAC,IAAD,IACA,8BACE,cAAC,IAAD,CACInB,WAAYgJ,GACZjR,QAASqO,GACTnG,YAAY,EACZC,OAAQ,CAAEtG,EAAG,UAIf,iBAAbkP,IAEG3H,EACM,cAAC,IAAD,IACA,gCACE,sBAAKhK,MAAO,CAAEE,QAAS,QAAvB,UACI,8CAAe6R,GAAiBxK,QAAO,SAACC,GAAD,OAAYA,EAAEuH,SAAW,OAAKjH,UACrE,8CAAeiK,GAAiBxK,QAAO,SAACC,GAAD,OAAYA,EAAEuH,SAAW,KAAOvH,EAAEuH,SAAW,OAAKjH,UACzF,8CAAeiK,GAAiBxK,QAAO,SAACC,GAAD,OAAYA,EAAEuH,SAAW,KAAOvH,EAAEuH,SAAW,OAAKjH,UACzF,8CAAeiK,GAAiBxK,QAAO,SAACC,GAAD,OAAYA,EAAEuH,SAAW,KAAOvH,EAAEuH,SAAW,OAAKjH,UACzF,8CAAeiK,GAAiBxK,QAAO,SAACC,GAAD,OAAYA,EAAEuH,SAAW,OAAKjH,aAEzE,cAAC,IAAD,CACIe,WAAYkJ,GACZnR,QAASwO,GACTtG,YAAY,EACZC,OAAQ,CAAEtG,EAAG,iB,IC1djC+S,GAAYC,KAAZD,QAEO,SAASE,KAAkB,IAAD,EACfvX,mBAAS,YADM,mBAC9BwX,EAD8B,KACzBC,EADyB,KAGrC,OAAO,gCACH,8BACI,eAAC,KAAD,CAAMC,iBAAiB,WAAWtJ,SAAU,SAACpG,GAAD,OAASyP,EAAOzP,IAA5D,UACI,cAACqP,GAAD,CAASG,IAAI,YAAe,YAC5B,cAACH,GAAD,CAASG,IAAI,cAAiB,cAC9B,cAACH,GAAD,CAASG,IAAI,UAAa,UAC1B,cAACH,GAAD,CAASG,IAAI,QAAW,aAGvB,aAARA,GAAsB,cAACxE,GAAD,IACd,eAARwE,GAAwB,cAAC5H,GAAD,IAChB,WAAR4H,GAAoB,cAAC9I,GAAD,IACZ,SAAR8I,GAAkB,cAAC/I,GAAD,O,uBCtBZ,SAASkJ,KAsCpB,OAAO,8BACH,cAAC,KAAD,CAAUT,KAAM,OAAhB,SAtCe,CACf,CACIU,KAAM,aACN7Q,KAAM,4BACN8Q,KAAK,6IAKT,CACID,KAAM,aACN7Q,KAAM,mBACN8Q,KAAK,6OAKT,CACID,KAAM,aACN7Q,KAAM,mBACN8Q,KAAK,sOAKT,CACID,KAAM,aACN7Q,KAAM,mBACN8Q,KAAK,iLAYUrO,KAAI,SAACH,GACZ,OAAO,cAAC,KAASwN,KAAV,UACH,cAACiB,GAAD,CAAgB9S,KAAMqE,aAa9C,SAASyO,GAAT,GAAwD,IAA9B9S,EAA6B,EAA7BA,KAA6B,EACzBhF,oBAAS,GADgB,mBAC5C+X,EAD4C,KACrCC,EADqC,KAEnD,OAAO,qCACH,sBAAKvN,QAAS,kBAAMuN,GAAS,IAA7B,UACKhT,EAAK4S,KADV,MACmB5S,EAAK+B,QAEvBgR,GAAS,cAAC,IAAD,CAAOE,SAAS,EAAMC,SAAU,kBAAMF,GAAS,IAAQG,OAAQ,KAA/D,SACN,cAAC,IAAD,UACKnT,EAAK6S,Y,OC1DP,SAASO,KAAuB,IAAD,EACEpY,mBAAS,IADX,mBACnC2L,EADmC,KACnBC,EADmB,OAEhB5L,mBAAS,IAFO,mBAEnCqY,EAFmC,KAE5BC,EAF4B,OAGhBtY,mBAAS,IAHO,mBAGnCuY,EAHmC,KAG5BC,EAH4B,OAIhBxY,mBAAS,IAJO,mBAInCyY,EAJmC,KAI5BC,EAJ4B,OAKhB1Y,mBAAS,IALO,mBAKnC2Y,EALmC,KAK5BC,EAL4B,OAMV5Y,oBAAS,GANC,mBAMnC6Y,EANmC,KAMzBC,EANyB,OAOV9Y,oBAAS,GAPC,mBAOnC+Y,EAPmC,KAOzBC,EAPyB,OAQFhZ,oBAAS,GARP,mBAQnCiZ,EARmC,KAQrBC,EARqB,OASMlZ,mBAAS,MATf,mBASnCmZ,EATmC,KASjBC,EATiB,OAUMpZ,mBAAS,MAVf,mBAUnCqZ,EAVmC,KAUjBC,EAViB,OAWgBtZ,mBAAS,MAXzB,mBAWnCuZ,EAXmC,KAWZC,EAXY,KAapCC,GAAK,uCAAG,WAAO9N,EAAqB+N,GAA5B,mBAAA/U,EAAA,6DACJwP,EAAM7B,gBAAM3G,EAAgB,QAC5BgO,EAAOxF,EAAIuF,GACXnN,EAAoB,KACxBoN,GAAQ,IAAI1N,SAAW,IAAInC,SAAQ,SAACT,GAClCkD,EAAatC,KAAKa,GAAaC,oBAAoB1B,EAAG,KAAM,KAAM,eAL5D,kBAOHmD,QAAQC,IAAIF,GAAc/G,MAAK,SAAAT,GAqBlC,OApBiBA,EACZyE,KAAI,SAACH,GACF,IAAMuQ,EAAWvQ,EAAErE,KACbuM,GAAiBqI,EAAS,GAAGC,WAAaD,EAAS,GAAGC,YAAcD,EAAS,GAAGC,WAAa,IAC7FC,EAAYF,EAAS,GAErBG,EAAsB3E,iBAAOwE,EAAU,cAEvCL,EAAyBO,EAAUE,WAAaD,EAAuB,IAC7E,MAAO,CACHhQ,OAAQ+P,EAAU/P,OAClBwH,cAAe5P,OAAO4P,EAAc3P,QAAQ,IAC5C2X,sBAAuB5X,OAAO4X,EAAsB3X,QAAQ,IAC5DqY,aAAcH,EAAUE,WAAa,KAASpY,QAAQ,GACtDmY,qBAAsBA,EAAsB,KAASnY,QAAQ,OAGpEsY,MAAK,SAACvV,EAAQyL,GACX,OAAOA,EAAEmB,cAAgB5M,EAAE4M,qBA1B7B,2CAAH,wDAgCL4I,GAAS,uCAAG,4BAAAxV,EAAA,sEACImG,GAAaW,eADjB,QACR1G,EADQ,SAEHA,EAAIC,OACX4G,EAAkB7G,EAAIC,MACtByU,GAAM1U,EAAIC,KAAM,sBAAsBQ,MAAK,SAAAT,GAAG,OAAIuT,EAASvT,MAC3D0U,GAAM1U,EAAIC,KAAM,oBAAoBQ,MAAK,SAAAT,GAAG,OAAIyT,EAASzT,MACzD0U,GAAM1U,EAAIC,KAAM,YAAYQ,MAAK,SAAAT,GAAG,OAAI2T,EAAS3T,MACjD0U,GAAM1U,EAAIC,KAAM,cAAcQ,MAAK,SAAAT,GAAG,OAAI6T,EAAS7T,OAPzC,2CAAH,qDAWTqV,GAAW,uCAAG,8BAAAzV,EAAA,6DACV0V,EAAoB/H,gBAAM3G,EAAgB,eAAe,QAD/C,SAEE/G,IAAM,CACpBC,OAAQ,MACRC,IAAI,kDACJK,QAAS,CACL,cAAiB,s5CAErBH,KAAM,CACF+B,KAAM,aACNkF,QAASoO,EAAkBpO,QAC3BqB,SAAU,2BACVD,YAAa,WAZL,QAEVtI,EAFU,SAeLA,EAAIC,OACXmV,KACAxU,IAAa4H,QAAQ,CAAE1H,QAAS,aAjBpB,2CAAH,qDAqBXyU,GAAY,uCAAG,WAAOvQ,GAAP,iBAAApF,EAAA,6DACX4V,EAAc5B,EAAMvP,QAAO,SAACC,GAAD,OAAYA,EAAEU,SAAWA,KAC1D6O,EAAS2B,GAFQ,SAGC3V,IAAM,CACpBC,OAAQ,MACRC,IAAI,kDACJK,QAAS,CACL,cAAiB,s5CAErBH,KAAM,CACF+B,KAAM,aACNkF,QAASsO,EAAY/Q,KAAI,SAACH,GAAD,OAAYA,EAAEU,UACvCuD,SAAU,2BACVD,YAAa,WAbJ,QAGXtI,EAHW,SAgBNA,EAAIC,OACXmV,KACAxU,IAAa4H,QAAQ,CAAE1H,QAAS,aAlBnB,2CAAH,sDAqClBxE,qBAAU,WACN8Y,OAID,IAEH,IAAM1X,GAAU,CACZ,CACIqF,MAAO,SACPqI,OAAQ,SAACxL,EAAQyL,GACb,OAAQzL,EAAEoF,OAAQyQ,cAAcpK,EAAErG,SAEtC7B,OAAQ,SAACmB,GAEL,OAAO,sBAAKxH,MAAO,CAAEU,MAAO,QAArB,UAAgC8G,EAAEU,OAAlC,IAA2CgP,GAAY,cAAC0B,GAAA,EAAD,CAAe5Y,MAAO,CAAEqM,WAAY,OAASzD,QAAS,kBAAM6P,GAAajR,EAAEU,WAAlI,SAGf,CACIjC,MAAO,UACPqI,OAAQ,SAACxL,EAAQyL,GACb,OAAOzL,EAAE4M,cAAgBnB,EAAEmB,eAE/BtJ,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKuM,gBAGpB,CACIzJ,MAAO,UACPqI,OAAQ,SAACxL,EAAQyL,GACb,OAAOzL,EAAE4U,sBAAwBnJ,EAAEmJ,uBAEvCtR,MAAO,QACPC,OAAQ,SAAClD,GACL,OAAOA,EAAKuU,yBAKlB7O,GAAamO,EACbF,EAAMvP,QAAO,SAACC,GAAD,OACV8P,GAAoB9P,EAAEkI,cAAgB4H,GACnCE,GAAoBhQ,EAAEkI,cAAgB8H,GACtCE,GAAyBlQ,EAAEkQ,sBAAwBA,KACzDZ,EAEN,OAAO,sBAAK9W,MAAO,CAAEI,WAAY,QAASF,QAAS,QAAU2Y,UAAU,sBAAhE,UACH,sBAAK7Y,MAAO,CAAEE,QAAS,QAAvB,UACI,gCACI,sCAEIsW,EAAM7O,KAAI,SAACH,GACP,IAAIrG,EAAQ,mBAiBZ,OAhBIqG,EAAEkI,cAAgB,IAEdvO,EADAqG,EAAEkI,cAAgB,IACV,mBAEA,SAIZlI,EAAEkI,cAAgB,IAEdvO,EADAqG,EAAEkI,eAAiB,IACX,mBAEA,OAIT,sBAAK1P,MAAO,CAAEE,QAAS,OAAQI,eAAgB,gBAAiBI,MAAO,QAASS,SAAhF,UACH,gCAAMqG,EAAEU,OAAR,OACA,8BAAMV,EAAEkI,yBAKxB,sBAAK1P,MAAO,CAAEiN,OAAQ,UAAtB,UACI,qCAEIyJ,EAAM/O,KAAI,SAACH,GACP,IAAIrG,EAAQ,mBAiBZ,OAhBIqG,EAAEkI,cAAgB,IAEdvO,EADAqG,EAAEkI,cAAgB,IACV,mBAEA,SAIZlI,EAAEkI,cAAgB,IAEdvO,EADAqG,EAAEkI,eAAiB,IACX,mBAEA,OAIT,sBAAK1P,MAAO,CAAEE,QAAS,OAAQI,eAAgB,gBAAiBI,MAAO,QAASS,SAAhF,UACH,gCAAMqG,EAAEU,OAAR,OACA,8BAAMV,EAAEkI,yBAKxB,gCACI,2CAEIkH,EAAMjP,KAAI,SAACH,GACP,IAAIrG,EAAQ,mBAiBZ,OAhBIqG,EAAEkI,cAAgB,IAEdvO,EADAqG,EAAEkI,cAAgB,IACV,mBAEA,SAIZlI,EAAEkI,cAAgB,IAEdvO,EADAqG,EAAEkI,eAAiB,IACX,mBAEA,OAIT,sBAAK1P,MAAO,CAAEE,QAAS,OAAQI,eAAgB,gBAAiBI,MAAO,QAASS,SAAhF,UACH,gCAAMqG,EAAEU,OAAR,OACA,8BAAMV,EAAEkI,yBAKxB,sBAAK1P,MAAO,CAAEiN,OAAQ,SAAU/M,QAAS,QAAzC,UAEI,qBAAKF,MAAO,CAAEU,MAAO,SAArB,SACI,cAAC,IAAD,CACIoY,KAAK,QACLjQ,WAAYA,GACZjI,QAASA,GACTkI,YAAY,EACZC,OAAQ,CAAEtG,EAAG,SAErB,sBAAKzC,MAAO,CAAEqM,WAAY,QAA1B,UACI,gCAEQ+K,EACM,sBAAKpX,MAAO,CAAEE,QAAS,QAAvB,UACE,cAAC,IAAD,CAAQ0I,QAAS2P,GAAjB,kBACA,cAAC,IAAD,CAAQ3P,QAAS,kBAAMyO,GAAgB,IAAvC,uBAEF,cAAC,IAAD,CAAQzO,QAAS,kBAAMyO,GAAgB,IAAvC,oBAEV,cAAC,IAAD,CAAQzO,QAAS,kBAAMuO,GAAaD,IAApC,qBAGJ,gCACI,eAAC,IAAD,CAAQtO,QA3KP,WACboO,GACAC,GAAY,GACZQ,EAAoB,MACpBF,EAAoB,MACpBI,EAAyB,QAEzBV,GAAY,GACZQ,EAAoB,GACpBF,EAAoB,GACpBI,EAAyB,MAiKb,kBAAqCX,EAAW,MAAQ,KAAxD,eACA,uDACyBM,KAEzB,uDACyBE,KAEzB,kDACoBE,iBAOpC,8BACI,cAAC5B,GAAD,S,IC9RJiD,GAAaC,IAAbD,SAEO,SAASE,KAAS,IAAD,EACF9a,mBAAS,MADP,mBACrB+X,EADqB,KACdC,EADc,OAEJhY,mBAAS,sCAFL,mBAErB6X,EAFqB,KAEfkD,EAFe,OAGI/a,oBAAS,GAHb,mBAGrBgb,EAHqB,KAGXC,EAHW,KAKtBC,EAAY,uCAAG,4BAAAvW,EAAA,sEACMC,IAAM,CACzBE,IAAK,kDACLE,KAAM,CACF8C,MAAO,QACP7C,QAAS4S,GAEb1S,QAAS,CACL,eAAgB,mCAEpBN,OAAQ,QAVK,QACXE,EADW,SAYNA,EAAIC,MAAQD,EAAIC,KAAKC,SAC5B8V,EAAQhW,EAAIC,KAAKC,SAbJ,2CAAH,qDAiBlB5D,qBAAU,WACN6Z,MACD,IAEH,IAIMC,EAA4Bza,sBAAY0a,oBAAS,SAACxN,GAChDA,GACAhJ,IAAM,CACFE,IAAK,kDACLE,KAAM,CACF8C,MAAO,QACP7C,QAAS2I,GAEbzI,QAAS,CACL,eAAgB,mCAEpBN,OAAQ,QACTW,MAAK,SAAAT,OAELU,OAAM,SAAAG,GACLD,IAAaC,MAAM,CAAEC,QAAS,yBAGtCkV,EAAQnN,KAET,KAAO,IAEV,OAAO,sBAAK/L,MAAO,CAAEI,WAAY,YAAaH,OAAQ,OAAQgV,SAAU,QAAUuE,YAAa,SAAAhN,GAAC,OAAIA,EAAEiN,mBAA/F,UACH,8BACI,cAAC,GAAD,MAEJ,sBAAKzZ,MAAO,CAAE0Z,UAAW,SAAzB,UACI,cAAC,IAAD,CAAQ9Q,QAAS,kBAAMwQ,GAAaD,IAApC,SACKA,EAAW,OAAS,aAExBA,EACK,cAACJ,GAAD,CAEE7D,aAAcc,EAAMzJ,SArCX,SAACC,GACtB8M,EAA0B9M,EAAEC,OAAOV,UAqCzB,cAAC,IAAD,CAAe8I,SAAUmB,OAInC,sBAAK6C,UAAU,OAAf,UACI,sBAAK7Y,MAAO,CAAEQ,KAAM,GAApB,UACI,cAAC,IAAD,CAAQoI,QAAS,kBAAMuN,EAAS,iBAAhC,2BACA,uBACA,cAAC,IAAD,CAAQvN,QAAS,kBAAMuN,EAAS,eAAhC,yBACA,0BAEJ,qBAAKnW,MAAO,CAAEQ,KAAM,GAApB,SACI,cAAC,IAAD,CAAQoI,QAAS,kBAAMuN,EAAS,mBAAhC,wCAIJD,GAAS,eAAC,IAAD,CAAO2C,UAAU,eAAezC,SAAS,EAAMC,SAAU,kBAAMF,EAAS,OAAOG,OAAQ,KAAvF,UACM,iBAAVJ,GAA4B,cAAC,EAAD,IAClB,eAAVA,GAA0B,cAACrM,GAAD,IAChB,mBAAVqM,GAA8B,cAACR,GAAD,U,ICzFvCqD,GAAaC,IAAbD,SAEO,SAASY,KAAS,IAAD,EACIxb,oBAAS,GADb,mBACrBgb,EADqB,KACXC,EADW,OAEJjb,mBAAS,sCAFL,mBAErB6X,EAFqB,KAEfkD,EAFe,KAItBG,EAAY,uCAAG,4BAAAvW,EAAA,sEACMC,IAAM,CACzBE,IAAK,kDACLE,KAAM,CACF8C,MAAO,QACP7C,QAAS4S,GAEb1S,QAAS,CACL,eAAgB,mCAEpBN,OAAQ,QAVK,QACXE,EADW,SAYNA,EAAIC,MAAQD,EAAIC,KAAKC,SAC5B8V,EAAQhW,EAAIC,KAAKC,SAbJ,2CAAH,qDAsBZkW,EAA4Bza,sBAAY0a,oBAAS,SAACxN,GAChDA,GACAhJ,IAAM,CACFE,IAAK,kDACLE,KAAM,CACF8C,MAAO,QACP7C,QAAS2I,GAEbzI,QAAS,CACL,eAAgB,mCAEpBN,OAAQ,QACTW,MAAK,SAAAT,OAELU,OAAM,SAAAG,GACLD,IAAaC,MAAM,CAAEC,QAAS,yBAGtCkV,EAAQnN,KAET,KAAO,IAEVvM,qBAAU,WACN6Z,MACD,IAiBH,OAAO,wCACH,sBAAKrZ,MAAO,CAAE0Z,UAAW,SAAzB,UACI,cAAC,IAAD,CAAQ9Q,QAAS,kBAAMwQ,GAAaD,IAApC,SACKA,EAAW,OAAS,aAExBA,EACK,cAAC,GAAD,CAEEjE,aAAcc,EAAMzJ,SArDX,SAACC,GACtB8M,EAA0B9M,EAAEC,OAAOV,UAqDzB,cAAC,IAAD,CAAe8I,SAAUmB,OAGnC,cAAC,IAAD,CAAQ/U,KAAK,UAAU4X,UAAU,YAAjC,sB,gCCrFO,SAASe,KACpB,OAAO,gCAEH,mBAAGC,KAAK,+BAA+BpN,OAAO,SAASqN,IAAI,eAC3D,cAAC,KAAD,O,2CCAO,SAASC,KACpB,IAAMC,EAAI,uCAAG,sBAAAlX,EAAA,0FAAH,qDAcJ4C,EAAQ,CACVR,KAAM,OACN+U,OAAQ,mDACR3W,QAAS,CACL4W,cAAe,sBAEnB3N,SANU,SAMD4N,GACLzG,QAAQC,IAAIwG,GACa,cAArBA,EAAKC,KAAKC,QACV3G,QAAQC,IAAIwG,EAAKC,KAAMD,EAAKG,UAEP,SAArBH,EAAKC,KAAKC,OACVrW,KAAQ0H,QAAR,UAAmByO,EAAKC,KAAKlV,KAA7B,gCAC4B,UAArBiV,EAAKC,KAAKC,QACjBrW,KAAQD,MAAR,UAAiBoW,EAAKC,KAAKlV,KAA3B,2BASZ,OAHA1F,qBAAU,WACNwa,MACD,IACI,gCACH,cAAC,IAAD,msBAaA,cAAC,KAAD,6BAAYtU,GAAZ,aACI,cAAC,IAAD,CAAQ6U,KAAM,cAACC,GAAA,EAAD,IAAd,mCC1DG,SAASC,KACpB,OAAO,8BACH,cAAC,IAAD,iFCJO,SAASC,KACpB,OAAO,kDCDI,SAASC,KACpB,OAAO,iDCCI,SAASC,KACpB,OAAO,8BACH,cAAC,IAAD,qGCMO,SAASC,KAAW,IAAD,EACJ1c,mBAAS,MADL,mBACvB+X,EADuB,KAChBC,EADgB,KAE9B,OAAO,sBAAKqD,YAAa,SAAAhN,GAAC,OAAIA,EAAEiN,mBAAzB,UACH,0CACA,cAAC,IAAD,CAAQ7Q,QAAS,kBAAMuN,EAAS,SAAhC,kBACA,uBACA,cAAC,IAAD,CAAQvN,QAAS,kBAAMuN,EAAS,UAAhC,mBACA,uBACA,cAAC,IAAD,CAAQvN,QAAS,kBAAMuN,EAAS,UAAhC,mBACA,uBACA,cAAC,IAAD,CAAQvN,QAAS,kBAAMuN,EAAS,oBAAhC,+BACA,uBACA,cAAC,IAAD,CAAQvN,QAAS,kBAAMuN,EAAS,mBAAhC,6BACA,uBACA,cAAC,IAAD,CAAQvN,QAAS,kBAAMuN,EAAS,UAAhC,mBAGID,GAAS,eAAC,IAAD,CAAO2C,UAAU,eAAezC,SAAS,EAAMC,SAAU,kBAAMF,EAAS,OAAOG,OAAQ,KAAvF,UACM,SAAVJ,GAAoB,cAAC0D,GAAD,IACV,UAAV1D,GAAqB,cAAC6D,GAAD,IACX,UAAV7D,GAAqB,cAACuE,GAAD,IACX,oBAAVvE,GAA+B,cAACwE,GAAD,IACrB,mBAAVxE,GAA8B,cAACyE,GAAD,IACpB,UAAVzE,GAAqB,cAAC0E,GAAD,UCpBtC,IAAME,GAA4BC,IAAgBC,cAAcD,IAAgBE,YAEjE,SAASC,KAEpB,IAuBMrS,EAAa,CACf,CACI1C,IAAK,IACLgV,KAAM,QAEV,CACIhV,IAAK,IACLgV,KAAM,iBAEV,CACIhV,IAAK,IACLgV,KAAM,qBAEV,CACIhV,IAAK,IACLgV,KAAM,gBAEV,CACIhV,IAAK,IACLgV,KAAM,mBAEV,CACIhV,IAAK,IACLgV,KAAM,qBAIRva,EAAU,CACZ,CACIqF,MAAO,UACPI,OAAQ,SAAClD,GACL,OAAO,8BAAK,cAAC,IAAD,CAAe0R,SAAU1R,EAAKgY,KAAMC,cAAe,CAACC,WAGxE,CACIpV,MAAO,SACPI,OAAQ,SAAClD,GACL,OAAO,8BAAMA,EAAKgY,UAyB9B,OAJA3b,qBAAU,cAEP,IAEI,8BACH,cAACsb,GAAD,CACIQ,QAAS,CAAEC,GA5EJ,CACX,CAAE/T,EAAG,IAAKpF,EAAG,EAAGK,EAAG,EAAG+Y,EAAG,EAAGC,EAAG,GAC/B,CAAEjU,EAAG,IAAKpF,EAAG,EAAGK,EAAG,EAAG+Y,EAAG,EAAGC,EAAG,KA2E3BC,oBAAoB,EACpB7C,UAAU,SASV5L,OAAQ,CAAC,EAAG,GAZhB,SAtFmB,CACnB,CAAE0O,GAAI,EAAGzW,KAAM,WAAY0W,UAAW,SACtC,CAAED,GAAI,EAAGzW,KAAM,WAAY0W,UAAW,UAkGvBjU,KAAI,SAACsM,EAAWzM,GACvB,OACI,qBAAmBqR,UAAU,YAA7B,UArCM1V,EAqCiD8Q,EApC5C,SAAnB9Q,EAAKyY,UACE,cAAClZ,EAAD,IACmB,UAAnBS,EAAKyY,UACL,cAAC3C,GAAD,IACmB,UAAnB9V,EAAKyY,UACL,cAACjC,GAAD,IACmB,YAAnBxW,EAAKyY,UACL,cAACf,GAAD,IAEA,8BACH,cAAC,IAAD,CAAOhS,WAAYA,EAAYjI,QAASA,EAASkI,YAAY,QA0B/CmL,EAAK0H,IArCV,IAACxY,SC9CX0Y,OA1Bf,WACE,OACE,qBAAKhD,UAAU,MAAf,SACE,qBAAK7Y,MAAO,CAAEC,OAAQ,QAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6b,KAAK,OAAZ,SACE,cAAC5d,EAAD,MAEF,cAAC,IAAD,CAAO4d,KAAK,IAAZ,SACE,cAACZ,GAAD,MAEF,cAAC,IAAD,CAAOY,KAAK,IAAZ,SACE,8BACE,6BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kC,mBCnBHC,GAJKC,aAAgB,ICS9BC,IAAWC,EADPC,MACwBC,aAAgBC,OASnCC,GARDC,aAAYR,GAAaE,ICFvCO,IAASpW,OACP,cAAC,IAAMqW,WAAP,UACE,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINI,SAASC,eAAe,W","file":"static/js/main.6500ad5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/IMG_2426.6b1d8930.PNG\";","export default __webpack_public_path__ + \"static/media/IMG_2432.f494be7c.JPG\";","\nimport { JigsawPuzzle } from 'react-jigsaw-puzzle/lib'\nimport 'react-jigsaw-puzzle/lib/jigsaw-puzzle.css'\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport ReactCanvasConfetti from \"react-canvas-confetti\";\nimport { Progress } from 'antd'\nimport { GiftOutlined, HeartOutlined } from '@ant-design/icons';\nimport moment from 'moment'\n\nconst img1 = require('./IMG_2426.PNG')\nconst img2 = require('./IMG_2432.JPG')\n\nexport default function Nhi() {\n\n    const [solved1, setSolved1] = useState(false)\n    const [solved2, setSolved2] = useState(false)\n    const refAnimationInstance = useRef(null);\n    const [intervalId, setIntervalId] = useState(null);\n\n    const getInstance = useCallback((instance) => {\n        refAnimationInstance.current = instance;\n    }, []);\n\n    const nextTickAnimation = useCallback(() => {\n        if (refAnimationInstance.current) {\n            refAnimationInstance.current(getAnimationSettings(0.1, 0.3));\n            refAnimationInstance.current(getAnimationSettings(0.7, 0.9));\n        }\n    }, []);\n\n    const startAnimation = useCallback(() => {\n        if (!intervalId) {\n            setIntervalId(setInterval(nextTickAnimation, 400));\n        }\n        setTimeout(() => {\n            stopAnimation()\n        }, 5 * 1000)\n    }, [intervalId, nextTickAnimation]);\n\n    const pauseAnimation = useCallback(() => {\n        clearInterval(intervalId);\n        setIntervalId(null);\n    }, [intervalId]);\n\n    const stopAnimation = useCallback(() => {\n        clearInterval(intervalId);\n        setIntervalId(null);\n        refAnimationInstance.current && refAnimationInstance.current.reset();\n    }, [intervalId]);\n\n    useEffect(() => {\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [intervalId]);\n\n    let percent = 0;\n    if (solved1 || solved2) {\n        percent = 50\n    }\n    if (solved1 && solved2) {\n        percent = 100\n    }\n\n    const startDate = moment(\"2021-08-11\", \"YYYY-MM-DD\")\n    const now = moment();\n    const diffCountDay = now.diff(startDate, 'days')\n    const percentCountDay = Number((diffCountDay * 100 / (50 * 365)).toFixed(0))\n\n    return <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n        <div style={{ height: \"100px\", background: 'lightpink', display: \"flex\", alignItems: 'center', justifyContent: \"center\", fontSize: \"30px\" }}>\n            {`Chuc Nhi sinh nhat vui ve`}\n        </div>\n        <div style={{ flex: 1, display: \"flex\", background: 'lightpink', justifyContent: \"space-between\", padding: \"0 200px\", alignItems: \"center\" }}>\n            <div style={{\n                width: \"300px\",\n                background: \"lightpink\",\n            }}>\n                <JigsawPuzzle\n                    rows={3}\n                    columns={3}\n                    onSolved={() => {\n                        setSolved1(true)\n                        if (solved2) startAnimation()\n                    }}\n                    imageSrc={img1.default} />\n                <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n                    {solved1 ?\n\n                        <Progress type=\"circle\" percent={100} width={50} />\n\n                        : <div style={{ fontSize: \"24px\" }}>Solve to unlock</div>\n                    }\n                </div>\n            </div>\n            <div>\n                {solved1 && solved2\n                    ? <div style={{ fontSize: \"30px\", color: \"red\", display: \"flex\", flexDirection: \"column\" }}><div>{`You are perfect couple`}</div> <HeartOutlined style={{ fontSize: '100px', color: 'red' }} /> </div>\n                    : <div style={{ fontSize: \"24px\" }}><GiftOutlined style={{ fontSize: '150px', color: 'red' }} /></div>}\n            </div>\n            <div style={{\n                width: \"300px\",\n                background: \"lightpink\",\n            }}>\n                <JigsawPuzzle\n                    rows={3}\n                    columns={3}\n                    onSolved={() => {\n                        setSolved2(true)\n                        if (solved1) startAnimation()\n                    }}\n                    imageSrc={img2.default} />\n                <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n                    {solved2\n                        ? <Progress type=\"circle\" percent={100} width={50} />\n                        : <div style={{ fontSize: \"24px\" }}>Solve to unlock</div>\n                    }\n                </div>\n            </div>\n            {/* <div>\n                <button onClick={startAnimation}>Start</button>\n                <button onClick={pauseAnimation}>Pause</button>\n                <button onClick={stopAnimation}>Stop</button>\n            </div> */}\n            <ReactCanvasConfetti refConfetti={getInstance} style={{\n                position: \"fixed\",\n                pointerEvents: \"none\",\n                width: \"100%\",\n                height: \"100%\",\n                top: 0,\n                left: 0\n            }} />\n\n        </div>\n\n        <div style={{ height: \"200px\", background: \"rgb(51 195 51)\", display: \"flex\", justifyContent: \"center\", padding: \"0 40px\" }}>\n            {solved1 && solved2 &&\n                <div style={{ display: 'flex', alignItems: \"center\", justifyContent: \"center\" }}>\n                    <Progress type=\"circle\" percent={percentCountDay} format={percent => `${diffCountDay} Days`} />\n                    <div style={{ marginTop: \"10px\" }}>{`Total: 50 Years`}</div>\n                </div>\n            }\n        </div>\n    </div>\n}\n\nfunction randomInRange(min: any, max: any) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction getAnimationSettings(originXA: any, originXB: any) {\n    return {\n        startVelocity: 30,\n        spread: 360,\n        ticks: 60,\n        zIndex: 0,\n        particleCount: 150,\n        origin: {\n            x: randomInRange(originXA, originXB),\n            y: Math.random() - 0.2\n        }\n    };\n}\n","import axios from 'axios'\nimport { useEffect, useState } from 'react';\n\nexport default function News() {\n    const [quote, setQuote] = useState(null)\n    const getCovid = async () => {\n\n        const res = await axios({\n            method: 'GET',\n            url: 'https://api.quotable.io/random',\n\n\n\n        })\n        if (res && res.data) {\n            setQuote(res.data)\n        }\n    }\n\n    useEffect(() => {\n        getCovid();\n    }, [])\n\n    return <div>\n        News\n        <div>\n            Today Quote\n        </div>\n        {quote &&\n            <div>{quote.content} - {quote.author} </div>\n        }\n        <div>Saved quote: {`Một người chưa từng trải qua hôn nhân và con cái thì chưa trải qua hạnh phúc.`}</div>\n    </div>\n}","\nimport axios from 'axios';\nimport { notification } from 'antd';\n\nlet headers = {\n    'Content-Type': 'application/json',\n};\n\n\nconst request = (options: any) => {\n    const onSuccess = (res: any) => res;\n    const onError = (err: any) => {\n        notification.error({\n            message: 'Error',\n            description: String(err),\n            placement: 'bottomLeft',\n            duration: 5,\n        });\n    }\n\n    if (options.headers) {\n        headers = options.headers\n    }\n\n    const client = axios.create({\n        headers\n    });\n\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n}\n\n\nexport default request\n","export const AccountUrls = {\n    postAuthToken: 'https://auth-api.vndirect.com.vn/v3/auth',\n    fetchAccount: 'https://trade-api.vndirect.com.vn/accounts/0001069456',\n    fetchAccountPortfolio: 'https://trade-api.vndirect.com.vn/accounts/v3/0001069456/portfolio',\n    fetchAccountAssets: 'https://trade-api.vndirect.com.vn/accounts/v2/0001069456/assets',\n    fetchAccountStocks: 'https://trade-api.vndirect.com.vn/accounts/v3/0001069456/stocks',\n    fetchOrdersHistory: (fromDate: string, toDate: string) => `https://trade-report-api.vndirect.com.vn/accounts/0001069456/orders_history/?fromDate=${fromDate}&toDate=${toDate}&pageSize=1000`,\n    fetchCashStatement: (index: number) => `https://trade-report-api.vndirect.com.vn/accounts/0001069456/cashStatement?fromDate=2017-01-01&index=${index}&offset=50&types=`\n}","import request from '../helpers/request';\nimport { AccountUrls } from '../helpers/urls';\n\nconst AccountService = {\n    postAuthToken(data: any) {\n        return request({\n            method: 'POST',\n            url: AccountUrls.postAuthToken,\n            data\n        });\n    },\n    fetchAccount(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccount,\n        });\n    },\n    fetchAccountPortfolio(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccountPortfolio,\n        });\n    },\n    fetchAccountAssets(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccountAssets,\n        });\n    },\n    fetchAccountStocks(headers: any) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchAccountStocks,\n        });\n    },\n    fetchOrdersHistory(headers: any, fromDate: string, toDate: string) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchOrdersHistory(fromDate, toDate),\n        });\n    },\n    fetchCashStatement(headers: any, index: number) {\n        return request({\n            headers,\n            method: 'GET',\n            url: AccountUrls.fetchCashStatement(index),\n        });\n    },\n\n};\n\nexport default AccountService;","\n\nimport { createSlice } from '@reduxjs/toolkit';\n\nimport { ThunkActionType } from '../store/store';\nimport AccountService from '../services/account';\n\nconst accountSlice = createSlice({\n    name: 'account',\n    initialState: {},\n    reducers: {},\n});\n\n// export const {} = accountSlice.actions;\n\nexport default accountSlice.reducer;\n\nexport const postAuthToken = (): ThunkActionType => async () => {\n    const data = {\n        password: \"Miamikki521\",\n        username: \"aminhp93\"\n    }\n    const res = await AccountService.postAuthToken(data)\n    return res\n}\n\nexport const fetchAccount = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccount(headers)\n    return res\n}\n\nexport const fetchAccountPortfolio = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccountPortfolio(headers)\n    return res\n}\n\nexport const fetchAccountAssets = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccountAssets(headers)\n    return res\n}\n\nexport const fetchAccountStocks = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchAccountStocks(headers)\n    return res\n}\n\nexport const fetchOrdersHistory = (token: string, fromDate: string, toDate: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    const res = await AccountService.fetchOrdersHistory(headers, fromDate, toDate)\n    return res\n}\n\nexport const fetchCashStatement = (token: string): ThunkActionType => async () => {\n    const headers = {\n        'X-Auth-Token': token\n    }\n    let res: any;\n    let next = true\n\n    let index = 0;\n    let result: any = []\n    while (next) {\n        res = await AccountService.fetchCashStatement(headers, index)\n        if (res && res.data) {\n            index += 1\n            if (res.data.transactions && res.data.transactions.length < 50) {\n                next = false\n            }\n            result = [...result, ...res.data.transactions]\n        }\n    }\n\n    return result\n}","import { Table, Button } from \"antd\";\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport moment from \"moment\";\nimport { sum, uniqBy } from \"lodash\";\n\nimport {\n    postAuthToken,\n    fetchOrdersHistory\n} from \"../../../reducers/account\"\nimport './HistoryTrade.css';\n\ninterface TProps {\n    onClose?: any;\n    postAuthToken?: any;\n    fetchOrdersHistory?: any;\n}\n\nfunction HistoryTrade(props: TProps) {\n    const filterObj = {\n        startDate: \"2020-07-01\",\n        endDate: moment().format(\"YYYY-MM-DD\"),\n        orderStatus: \"4\",\n    }\n\n    const [listOrdersHistory, setListOrdersHistory] = useState([])\n    const defaultColumns: any = [\n        {\n            title: 'So hieu lenh',\n            dataIndex: 'orderID',\n            key: 'orderID',\n            width: 200\n        },\n        {\n            title: 'Ngay',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return moment(data.transactionDate).format(\"YYYY-MM-DD\")\n            }\n        },\n        {\n            title: 'Ma CK',\n            align: 'center' as 'center',\n            dataIndex: 'symbol',\n            key: 'symbol',\n        },\n        {\n            title: 'Lenh',\n            align: 'center' as 'center',\n            render: (data: any) => {\n                if (data.execType === \"NB\") {\n                    return <div style={{ color: \"green\" }}>Mua</div>\n                } else if (data.execType === \"NS\") {\n                    return <div style={{ color: \"red\" }}>Ban</div>\n                } else {\n                    return \"\"\n                }\n            }\n        },\n        {\n            title: 'KL dat',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.orderQuantity && (Number(data.orderQuantity)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Gia dat',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.orderPrice && (Number(data.orderPrice)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'KL khop',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchQuantity && (Number(data.matchQuantity)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Gia khop TB',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchAveragePrice && (Number(data.matchAveragePrice)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Trang thai',\n            render: (data: any) => {\n                if (data.orderStatus === \"4\") {\n                    return \"Khop\"\n                } else if (data.orderStatus === \"5\") {\n                    return \"Lenh het han\"\n                } else {\n                    return \"\"\n                }\n            }\n        },\n        {\n            title: 'Phi',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.feeOrder && (data.feeOrder).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Thoi gian',\n            render: (data: any) => {\n                return data.orderTime\n            }\n        },\n    ];\n\n    const mainColumns: any = [\n        {\n            title: 'Ngay',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return moment(data.transactionDate).format(\"YYYY-MM-DD\")\n            }\n        },\n        {\n            title: 'Ma CK',\n            align: 'center' as 'center',\n            dataIndex: 'symbol',\n            key: 'symbol',\n        },\n        {\n            title: 'Lenh',\n            align: 'center' as 'center',\n            render: (data: any) => {\n                if (data.execType === \"NB\") {\n                    return <div style={{ color: \"green\" }}>Mua</div>\n                } else if (data.execType === \"NS\") {\n                    return <div style={{ color: \"red\" }}>Ban</div>\n                } else {\n                    return \"\"\n                }\n            }\n        },\n        {\n            title: 'KL khop',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchQuantity && (Number(data.matchQuantity)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: 'Gia khop TB',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.matchAveragePrice && (Number(data.matchAveragePrice)).toLocaleString(\"en-US\")\n            }\n        },\n        {\n            title: '+/-',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.finalChange\n            }\n        },\n        {\n            title: 'Total Amount',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.initialAmount && (Number(data.initialAmount)).toLocaleString(\"en-US\")\n            }\n        }\n    ]\n\n    const [columns, setColumns] = useState(mainColumns)\n\n    const getHistoryTrade = async () => {\n        const res = await props.postAuthToken()\n        const res2 = await props.fetchOrdersHistory(res.data.token, filterObj.startDate, filterObj.endDate);\n        if (res2.data) {\n            const filteredList = uniqBy(res2.data.filter((i: any) => i.orderStatus === filterObj.orderStatus), 'orderID')\n            let ignoreSells: any = [];\n            const mappedList = filteredList.map((i: any) => {\n                if (ignoreSells.filter((j: any) => j.orderID === i.orderID).length > 0) return i\n                if (i.execType === \"NS\") {\n                    const listSell: any = [i];\n                    let stop = false;\n                    filteredList.forEach((j: any) => {\n                        if (!stop) {\n                            if (j.symbol === i.symbol && j.transactionDate < i.transactionDate && j.execType === \"NB\") {\n                                ignoreSells = ignoreSells.concat(listSell)\n                                stop = true\n                            }\n\n                            if (j.symbol === i.symbol && (j.transactionDate < i.transactionDate || j.transactionDate === i.transactionDate) && i.orderID !== j.orderID && j.execType === \"NS\") {\n                                listSell.push(j)\n                            }\n                        }\n                    })\n\n                    const listBuy: any = [];\n                    let totalVolumeBuy = 0;\n                    const totalVolumeSell = sum(listSell.map((i: any) => Number(i.matchQuantity)))\n\n                    let stop2 = false;\n                    filteredList.forEach((j: any) => {\n                        if (!stop2) {\n                            if (totalVolumeBuy === totalVolumeSell) stop2 = true\n\n                            if (j.symbol === i.symbol && j.execType === \"NB\" && j.transactionDate < i.transactionDate) {\n                                totalVolumeBuy += Number(j.matchQuantity)\n                                listBuy.push(j)\n                            }\n                        }\n                    })\n\n                    const start = sum(listBuy.map((i: any) => Number(i.matchQuantity) * Number(i.matchAveragePrice)))\n                    const end = sum(listSell.map((i: any) => Number(i.matchQuantity) * Number(i.matchAveragePrice)))\n                    i.finalChange = ((end - start) / start * 100).toFixed(2)\n                    i.initialAmount = start\n                    // if (i.symbol === \"BSR\") {\n                    //     console.log(i.transactionDate, i, listBuy, listSell, i.finalChange, start, end, stop)\n                    // }\n\n                }\n                return i\n            })\n            setListOrdersHistory(mappedList)\n        }\n    }\n\n    useEffect(() => {\n        getHistoryTrade();\n    }, [])\n\n    return (\n        <div>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div>\n                    Start Date: {filterObj.startDate}\n                </div>\n                <div>\n                    End Date: {filterObj.endDate}\n                </div>\n                <div>\n                    OrderStatus: {filterObj.orderStatus === \"4\" ? \"Khop\" : \"\"}\n                </div>\n            </div>\n\n            <Button onClick={() => setColumns(defaultColumns)}>Default Columns</Button>\n            <Button onClick={() => setColumns(mainColumns)}>Main Columns</Button>\n            <Table\n                dataSource={listOrdersHistory}\n                columns={columns}\n                pagination={false}\n                scroll={{ y: 1200 }} />\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    postAuthToken,\n    fetchOrdersHistory,\n}\n\nexport default connect(null, mapDispatchToProps)(HistoryTrade)\n","export const DATE_FORMAT = \"YYYY-MM-DD\"\nexport const BILLION = 1000000000\nexport const MIN_TOTAL_VOLUME = 100000\nexport const MIN_TOTAL_VALUE = BILLION * 5\n","import axios from 'axios';\nimport moment from \"moment\";\n\nconst StockService = {\n    getHistoricalQuotes(symbol: string, startDate?: string, endDate?: string, platform?: string) {\n        // symbol = \"FPT\"\n        // startDate = \"2021-01-01\"\n        // endDate = \"2021-12-31\"\n        if (!symbol) return\n        if (!endDate) {\n            endDate = moment().format(\"YYYY-MM-DD\")\n        }\n\n        if (!startDate) {\n            startDate = moment().add(-3, \"years\").format(\"YYYY-MM-DD\")\n        }\n\n        if (platform === \"fireant\") {\n            return axios({\n                url: `https://restv2.fireant.vn/symbols/${symbol.toUpperCase()}/historical-quotes`,\n                method: \"GET\",\n                headers: {\n                    \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n                },\n                params: {\n                    startDate: `${startDate}`,\n                    endDate: `${endDate}`,\n                    offset: 0,\n                    limit: 15\n                }\n            })\n        }\n        return axios({\n            url: \"https://fwtapi1.fialda.com/api/services/app/StockInfo/GetHistoricalData\",\n            method: \"GET\",\n            params: {\n                symbol: symbol.toUpperCase(),\n                fromDate: `${startDate}T00:00:00.094`,\n                toDate: `${endDate}T15:09:14.095`,\n                pageNumber: 1,\n                pageSize: 1000\n            }\n        })\n\n    },\n    getFundamental(symbol: string) {\n        // symbol = \"FPT\"\n        if (!symbol) return\n        return axios({\n            url: `https://restv2.fireant.vn/symbols/${symbol}/fundamental`,\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            }\n        })\n    },\n    getWatchlist() {\n        return axios({\n            method: \"GET\",\n            url: \"https://restv2.fireant.vn/me/watchlists\",\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            }\n        })\n    }\n\n}\n\nexport default StockService;\n","import { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { Button, Input, notification, Spin } from \"antd\";\nimport { chunk, minBy, orderBy } from \"lodash\";\nimport moment from \"moment\";\nimport {\n    DATE_FORMAT,\n    MIN_TOTAL_VOLUME,\n    MIN_TOTAL_VALUE\n} from \"../../../helpers/utils\";\nimport StockService from '../../../services/stock'\nimport ReactMarkdown from 'react-markdown';\n\ninterface IProps {\n\n}\n\nexport default function StockTools(props: IProps) {\n    const [listWatchlists, setListWatchlists] = useState([])\n    const [loading, setLoading] = useState(false);\n\n    const getWatchlist = async () => {\n        const res = await StockService.getWatchlist()\n        if (res && res.data) {\n            setListWatchlists(res.data)\n        }\n    }\n\n    const handleUpdateThanhKhoanVua = async () => {\n        let finalList = [];\n        // Get list symbol from all\n        const wlAll = listWatchlists.filter((i: any) => i.name === \"all\")[0].symbols\n\n        // Remove list symbol in blacklist and temp_blacklist\n        const wlBlacklist = listWatchlists.filter((i: any) => i.name === \"blacklist\")[0].symbols\n        finalList = wlAll.filter((i: any) => !wlBlacklist.includes(i))\n\n        const chunkedListSymbol: any = chunk(finalList, 30)\n        setLoading(true)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(StockService.getHistoricalQuotes(chunkedListSymbol[i][j], \"\", \"\", \"fireant\"))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n\n        const mappedRes = orderBy(res.map((i: any) => {\n            const result: any = {\n                symbol: i.data[0].symbol,\n                minTotalValue: (minBy(i.data, \"totalValue\") as any).totalValue,\n                minTotalVolume: (minBy(i.data, \"totalVolume\") as any).totalVolume\n            }\n            return result\n        }).filter((i: any) => i.minTotalValue > 5000000000), \"minTotalValue\")\n\n        const thanh_khoan_vua_wl = listWatchlists.filter((i: any) => i.name === \"thanh_khoan_vua\")[0]\n\n        update(thanh_khoan_vua_wl, mappedRes.map((i: any) => i.symbol))\n    }\n\n    const update = async (data: any, list: any) => {\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/${data.watchlistID}`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: data.name,\n                symbols: list,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: data.watchlistID,\n            }\n        })\n        if (res && res.data) {\n            notification.success({ message: \"Success\" })\n            getWatchlist()\n        }\n    }\n\n    useEffect(() => {\n        getWatchlist()\n    }, [])\n\n    if (loading) {\n        return <div><Spin /></div>\n    }\n\n    return <div >\n        <ReactMarkdown>\n            {`\n                    \\n - Update thanh_khoan_vua: \n                    \\n   - Filter list with last 15 mins Total value > 5000000000\n                    \\n   - Filter blacklist\n                    \\n - Update aim_to_buy === thanh_khoan_vua\n                    \\n - Update all\n                `}\n        </ReactMarkdown>\n        <Button onClick={handleUpdateThanhKhoanVua}>\n            Update\n        </Button>\n        <hr />\n        {\n            listWatchlists.map((i: any, index: number) => {\n                return <StockToolItem data={i} key={index} dataAll={listWatchlists} />\n            })\n        }\n    </div>\n}\n\ninterface IStockToolItemProps {\n    data: any;\n    dataAll: any;\n}\n\nfunction StockToolItem(props: IStockToolItemProps) {\n    const [data, setData] = useState(props.data);\n    const [value, setValue] = useState(props.data.symbols.join(\",\"));\n    const [loading, setLoading] = useState(false);\n\n    const handleChangeInput = (e: any) => {\n        setValue(e.target.value);\n    }\n\n    const handleUpdate = () => {\n        value && update(value.split(\",\"))\n    }\n\n    const handleReset = () => {\n        update([])\n    }\n\n    const update = async (list: any) => {\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/${data.watchlistID}`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: data.name,\n                symbols: list,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: data.watchlistID,\n            }\n        })\n        if (res && res.data) {\n            notification.success({ message: \"Success\" })\n            setData(res.data)\n            setValue(res.data.symbols.join(\",\"))\n        }\n    }\n\n    const handleFilter = () => {\n        setLoading(true)\n        getHistorialQuoteAll();\n    }\n\n    const getHistorialQuoteAll = () => {\n        const listPromises: any = [];\n        data.symbols.map((j: any) => {\n            listPromises.push(getHistorialQuote(j))\n        })\n        Promise.all(listPromises).then(res => {\n            const list = res.filter((i: any) => i)\n            update(list)\n            setLoading(false)\n            notification.success({ message: \"success\" })\n        })\n    }\n\n    const getHistorialQuote = async (symbol: string) => {\n        if (!symbol) return;\n        const startDate = moment().add(-1000, 'days').format(DATE_FORMAT)\n        const endDate = moment().add(0, 'days').format(DATE_FORMAT)\n\n\n        const res = await axios({\n            method: \"GET\",\n            headers: {\n                \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNjIzMDMyLCJuYmYiOjE2MTM2MjMwMzIsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM2MjMwMzIsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiZmIyZWJkNzAzNTBiMDBjMGJhMWE5ZDA5NGUwNDMxMjYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.OhgGCRCsL8HVXSueC31wVLUhwWWPkOu-yKTZkt3jhdrK3MMA1yJroj0Y73odY9XSLZ3dA4hUTierF0LxcHgQ-pf3UXR5KYU8E7ieThAXnIPibWR8ESFtB0X3l8XYyWSYZNoqoUiV9NGgvG2yg0tQ7lvjM8UYbiI-3vUfWFsMX7XU3TQnhxW8jYS_bEXEz7Fvd_wQbjmnUhQZuIVJmyO0tFd7TGaVipqDbRdry3iJRDKETIAMNIQx9miHLHGvEqVD5BsadOP4l8M8zgVX_SEZJuYq6zWOtVhlq3uink7VvnbZ7tFahZ4Ty4z8ev5QbUU846OZPQyMlEnu_TpQNpI1hg\"\n            },\n            url: `https://restv2.fireant.vn/symbols/${symbol}/historical-quotes?startDate=${startDate}&endDate=${endDate}&offset=0&limit=20`,\n        })\n        if (res.data) {\n            const list = res.data.filter((i: any) => {\n                return i.totalVolume < MIN_TOTAL_VOLUME || i.totalValue < MIN_TOTAL_VALUE\n            })\n            if (list.length > 0) {\n                return null\n            }\n            return symbol\n        }\n        return null\n    }\n\n    return <div>\n        {data.watchlistID} - {data.name} - {data.symbols.length}\n        <Button disabled={loading} style={{ marginLeft: \"20px\" }} danger onClick={handleReset}>Reset</Button>\n        <Button onClick={handleFilter} disabled={loading}>Loc Tong Gia Tri</Button>\n        {\n            data.name === \"all\" && <span>{`Von: >500, Gia: >5, Tong KL: >50000`}</span>\n        }\n\n        <div style={{ display: \"flex\" }}>\n            <Input\n                value={value}\n                onChange={handleChangeInput}\n                onPressEnter={() => update(value.split(\",\"))}\n            />\n        </div>\n        <hr />\n    </div>\n}\n","export default function StockTestBreak_TestTab() {\n    return <div>\n        TestTab\n    </div>\n}\n","import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nexport default function StockTestBreak_GraphsTab({ data, listDataKey }: any) {\n    const listColor = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000']\n    return <div>\n        <LineChart\n            width={1000}\n            height={800}\n            data={data}\n            margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n            }}\n        >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"count\" />\n            <YAxis domain={[100, 130]} />\n            <Tooltip />\n            <Legend />\n            {\n                listDataKey.map((i: any, index: number) => {\n                    return <Line type=\"monotone\" dataKey={i} stroke={listColor[index]} strokeWidth={2} />\n                })\n            }\n        </LineChart>\n    </div >\n}\n","import ReactMarkdown from \"react-markdown\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { Input, Table } from \"antd\";\n\n\nexport default function StockTestBreak_ScoreboardTab({ cb, data }: any) {\n    const [symbol, setSymbol] = useState('NKG');\n\n    const columns = [\n        {\n            title: 'Date',\n            render: (data: any) => {\n                return moment(data.tradingTime).format('YYYY-MM-DD')\n            }\n        },\n        {\n            title: 'priceChange',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.priceChange\n            }\n        },\n        // {\n        //     title: 'previousDayChange',\n        //     align: 'right' as 'right',\n        //     render: (data: any) => {\n        //         return data.previousDayChange\n        //     }\n        // },\n        // {\n        //     title: 'diffInMonth',\n        //     align: 'right' as 'right',\n        //     render: (data: any) => {\n        //         return <div style={{\n        //             background: data.diffInMonth > 10 ? \"red\" : \"white\",\n        //             color: data.diffInMonth > 10 ? \"white\" : \"black\"\n        //         }}>{data.diffInMonth}</div>\n        //     }\n        // },\n        {\n            title: 'volume15dayChange',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div style={{\n                    // background: data.volume15dayChange < 50 ? \"red\" : \"white\",\n                    color: data.volume15dayChange < 50 ? \"red\" : \"black\"\n                }}>{data.volume15dayChange}\n                    {/* | {data.arrVolume.join(\", \")} */}\n                </div>\n            }\n        },\n        {\n            title: 't3Change',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div style={{\n                    // background: data.t3Change < -3 ? \"red\" : \"white\",\n                    color: data.t3Change < -3 ? \"red\" : \"black\"\n                }}>{data.t3Change}</div>\n            }\n        },\n        {\n            title: 'highestChangePrice20day',\n            sorter: (a: any, b: any) => {\n                return a.highestChangePrice20day - b.highestChangePrice20day\n            },\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div>{data.highestChangePrice20day} | {moment(data.highestPriceCloseDate).format(\"MM-DD\")} </div>\n            }\n        },\n        {\n            title: 'lowestChangePrice20day',\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return <div style={{\n                    // background: data.lowestChangePrice20day < -5 ? \"red\" : \"white\",\n                    color: data.lowestChangePrice20day < -5 ? \"red\" : \"black\"\n                }}>{data.lowestChangePrice20day} | {moment(data.lowestPriceCloseDate).format(\"MM-DD\")}</div>\n            }\n        }\n    ]\n\n    const handleChangeInput = (e: any) => {\n        setSymbol(e.target.value)\n    }\n\n    const handlePressEnter = () => {\n        cb()\n    }\n\n\n    useEffect(() => {\n        cb(symbol)\n    }, [])\n\n    return <>\n        <div style={{ display: \"flex\" }}>\n            <div style={{ width: \"50%\" }}>\n                <ReactMarkdown>\n                    {`\n                        \\n - Test break\n                        \\n - Symbol: NKG\n                        \\n - Time: 1/1/2020 - 31/12/2020\n                        \\n - Condition test: \n                        \\n   - priceChange > 4%\n                        \\n   - diffInMonth > 10%\n                        \\n   - t3Change > -3%\n                        \\n   - volume15dayChange > 50%\n                        \\n   - previousDayChange < 4%\n                        \\n   - open !== high\n                    `}\n                </ReactMarkdown>\n            </div>\n            <div style={{ width: \"50%\" }}>\n                <ReactMarkdown>\n                    {`\n                        \\n - Note:\n                        \\n   - HDG: 06-01\n                        \\n   - NKG: 01-25\n                        \\n   - SCR: 02-18, 03-04, 04-27\n                        \\n   - DBC: 12-18, 12-29, 11-20, 09-11, 07-16, 03-30, \n                    `}\n                </ReactMarkdown>\n            </div>\n        </div>\n        <div>\n            <Input onChange={handleChangeInput} onPressEnter={handlePressEnter} />Count: {data.length}\n        </div>\n        <div>\n            <Table\n                dataSource={data}\n                columns={columns}\n                pagination={false}\n                scroll={{ y: 800 }} />\n\n        </div>\n    </>\n}\n\n","import moment from \"moment\";\nimport { keyBy, sortBy, isEmpty, orderBy } from \"lodash\";\n\nexport const singleColumns = [\n    {\n        title: 'Buy Date',\n        render: (data: any) => {\n            return data.tradingTime\n        }\n    },\n    {\n        title: 'Sell Date',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.sellDate\n        }\n    },\n    {\n        title: 'changeSellDate',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.changeSellDate.toFixed(2)\n        }\n    },\n    {\n        title: 'totalNAV',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.totalNAV\n        }\n    },\n    {\n        title: 'baseNAV',\n        align: 'right' as 'right',\n        render: (data: any) => {\n            return data.baseNAV\n        }\n    },\n]\n\nexport const combinedColumns = [\n    {\n        title: \"Symbol\",\n        render: (data: any) => {\n            return data.symbol\n        }\n    },\n    {\n        title: 'Buy Date',\n        render: (data: any) => {\n            return data.buyDate\n        }\n    },\n    {\n        title: 'Sell Date',\n        render: (data: any) => {\n            return data.sellDate\n        }\n    },\n    {\n        title: 'Percent Change',\n        render: (data: any) => {\n            return data.percentChange\n        }\n    },\n    {\n        title: 'total NAV',\n        render: (data: any) => {\n            return data.totalNAV\n        }\n    },\n]\n\nexport const testVariableColumns = [\n    {\n        title: \"variableCombine\",\n        render: (data: any) => {\n            return data.variableCombine\n        }\n    },\n    {\n        title: \"totalNAV\",\n        render: (data: any) => {\n            return data.totalNAV\n        }\n    },\n]\n\nexport const findSellDate = (buyDate: string, listData: any, var1 = 10, var2 = -3, var3 = 10) => {\n    let result: any;\n    const filteredListData = sortBy(listData, \"tradingTime\")\n    let buyItem: any;\n    let changePercent: number;\n    let sellIndex = -1;\n    let next = true;\n    let buyItemIndex: number;\n    filteredListData.forEach((i: any, index: number) => {\n        if (next && index === sellIndex) {\n            result = i\n            next = false\n        }\n        if (next) {\n            if (i.tradingTime === buyDate) {\n                buyItem = i\n                sellIndex = index + var1\n                buyItemIndex = index\n            }\n\n            if (index > buyItemIndex + 2) {\n                if (buyItem && buyItem.adjClose) {\n                    changePercent = (i.adjClose - buyItem.adjClose) / buyItem.adjClose * 100\n                }\n\n                if (changePercent > var3) {\n                    result = i\n                    next = false\n                }\n\n                if (changePercent < var2) {\n                    result = i\n                    next = false\n                }\n\n            }\n        }\n    })\n    // console.log(result)\n    return result\n}\n\nexport const analyseData = (data: any, fullData: any, startDate: string, endDate: string) => {\n    const sortedData = sortBy(data, \"tradingTime\")\n    const dataObj = keyBy(sortedData, \"tradingTime\")\n    const result = [];\n    let buyDate: any;\n    let sellDateObj: any;\n\n    let totalNAV = 100;\n    let baseNAV = 100;\n    let monthlyAdd = 0;\n    for (let d = moment(startDate); d.isBefore(moment(endDate)); d.add(1, \"days\")) {\n        const date = moment(d).format('YYYY-MM-DD')\n        if (sellDateObj && date < sellDateObj.tradingTime) continue\n        buyDate = dataObj[date] && dataObj[date].tradingTime\n\n        if (buyDate) {\n            sellDateObj = findSellDate(buyDate, fullData)\n            if (sellDateObj) {\n                dataObj[date].sellDate = sellDateObj.tradingTime\n                dataObj[date].changeSellDate = (sellDateObj.adjClose - dataObj[date].adjClose) / dataObj[date].adjClose * 100\n                totalNAV = totalNAV * (dataObj[date].changeSellDate / 100 + 1) + monthlyAdd\n                baseNAV = baseNAV + monthlyAdd\n                dataObj[date].totalNAV = Number(totalNAV.toFixed(0))\n                dataObj[date].baseNAV = baseNAV\n                result.push(dataObj[date])\n            }\n        }\n    }\n    return result\n}\n\nexport const findBuyDate = (date: string, listData: any) => {\n    const result: any = {};\n    listData.map((i: any) => {\n        const filteredList = i.data && i.data.filter((j: any) => j.tradingTime === date)\n        if (filteredList && filteredList.length === 1) {\n            if (!result[date]) {\n                result[date] = []\n            }\n            filteredList[0].symbol = i.symbol\n            result[date].push(filteredList[0])\n        }\n    })\n    if (!isEmpty(result)) {\n        if (result[date].length > 1) {\n            result[date] = orderBy(result[date], \"volume15dayChange\", \"desc\")\n            // console.log(result[date])\n        }\n        // console.log(result[date])\n        return result[date][0]\n    }\n    return null\n}\n","import ReactMarkdown from \"react-markdown\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Input, Table, Button, DatePicker, Select, Dropdown, Menu, notification, Spin } from \"antd\";\nimport { mean, maxBy, minBy, meanBy, keyBy, orderBy, range, chunk, cloneDeep, get } from \"lodash\";\nimport StockTestBreak_GraphsTab from \"./StockTestBreak_GraphsTab\"\nimport { analyseData, findSellDate, singleColumns, combinedColumns, findBuyDate, testVariableColumns } from \"./StockTestBreak.helpers\"\nimport StockService from '../../../services/stock'\n\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nexport default function StockTestBreak_OverviewTab() {\n    const [loading, setLoading] = useState(false);\n    const [symbol, setSymbol] = useState(\"NKG\");\n    const [listSymbol, setListSymbol] = useState(['HPG', 'NKG', 'TLH', \"HSG\"]);\n    const [startDate, setStartDate] = useState(\"2020-01-01\");\n    const [endDate, setEndDate] = useState(\"2020-12-31\")\n    const [data, setData] = useState([]);\n    const [listData, setListData] = useState([]);\n    const [listWatchlists, setListWatchlists] = useState([]);\n    const [selectedWatchlist, setSelectedWatchlist] = useState(null)\n    const [testType, setTestType] = useState(null);\n    const [combinedData, setCombinedData] = useState([]);\n    const [testVariableData, setTestVariableData] = useState([]);\n    const [volume15dayChange, setVolume15dayChange] = useState(50);\n\n    const getData = async (symbol: string, combined?: boolean, testVariable?: boolean) => {\n        const res2 = await StockService.getHistoricalQuotes(symbol, startDate, endDate)\n        const res = get(res2, 'data.result.items')\n        if (!res) {\n            return { \"failedSymbol\": symbol }\n        }\n        let xxx = res\n            .map((i: any, index: number) => {\n                if (index < res.length - 1) {\n                    const todayClose = i.adjClose\n                    const yesterdayClose = res[index + 1].adjClose\n                    i.priceChange = Number(((todayClose - yesterdayClose) / yesterdayClose * 100).toFixed(2))\n                }\n\n                // Condition 1\n                let max = 0\n                for (let j = 0; j < 20; j++) {\n                    if (res[index + j] && res[index + j].adjClose > max) {\n                        max = res[index + j].adjClose\n                    }\n                }\n                i.diffInMonth = Number(((max - i.adjClose) / i.adjClose * 100).toFixed(2))\n                const t3Price = res[index - 3]\n                if (t3Price) {\n                    i.t3PriceClose = t3Price.adjClose\n                    i.t3Change = Number(((t3Price.adjClose - i.adjClose) / i.adjClose * 100).toFixed(2))\n                }\n\n                // Condition 2\n                let arrVolume = []\n                for (let j = 0; j < 15; j++) {\n                    if (res[index + j]) {\n                        arrVolume.push(res[index + j].totalDealVolume)\n                    }\n                }\n                i.volume15dayChange = Number(((i.totalDealVolume - mean(arrVolume)) / mean(arrVolume) * 100).toFixed(2))\n                i.arrVolume = arrVolume\n\n                // Condition 3\n                let arr20day = []\n                for (let j = 0; j < 20; j++) {\n                    if (res[index - j]) {\n                        arr20day.push(res[index - j])\n                    }\n                }\n\n                i.highestPriceClose = maxBy(arr20day, \"adjClose\").adjClose\n                i.highestPriceCloseDate = maxBy(arr20day, \"adjClose\").tradingTime\n                i.highestChangePrice20day = Number(((i.highestPriceClose - i.adjClose) / i.adjClose * 100).toFixed(2))\n\n                i.lowestPriceCloseDate = minBy(arr20day, \"adjClose\").tradingTime\n                i.lowestPriceClose = minBy(arr20day, \"adjClose\").adjClose\n                i.lowestChangePrice20day = Number(((i.lowestPriceClose - i.adjClose) / i.adjClose * 100).toFixed(2))\n\n                // Condition 4\n                if (res[index + 1]) {\n                    const previousDayChange = res[index + 1].changePercent\n                    i.previousDayChange = Number((previousDayChange * 100).toFixed(2))\n                }\n                i.tradingTime = moment(i.tradingTime).format(\"YYYY-MM-DD\")\n\n                return i\n            })\n\n        if (testVariable) {\n            return {\n                symbol,\n                data: xxx\n            }\n        } else {\n            xxx = xxx.filter((i: any, index: number) => {\n                return i.priceChange\n                    && i.priceChange > 4\n                    && i.volume15dayChange > volume15dayChange\n                    && i.previousDayChange < 4\n                    && i.open !== i.high\n                    && i.diffInMonth < 10\n            })\n        }\n\n        const average = {\n            date: \"averageDate\",\n            highestChangePrice20day: Number(meanBy(xxx, 'highestChangePrice20day').toFixed(2))\n        }\n        xxx.push(average)\n        if (combined) {\n            return {\n                data: xxx,\n                symbol,\n                fullData: res\n            }\n        }\n        const analysedData = analyseData(xxx, res, startDate, endDate)\n\n        const totalNAV = (maxBy(analysedData, 'totalNAV') || {}).totalNAV\n        setData(analysedData)\n\n        return { data: analysedData, symbol, totalNAV }\n    }\n\n    const testList = async () => {\n        setTestType(\"multiple\")\n        setLoading(true)\n\n        const chunkedListSymbol = chunk(listSymbol, 30)\n        console.log(chunkedListSymbol)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(getData(chunkedListSymbol[i][j]))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n        const failedSymbolList = res.filter((i: any) => i.failedSymbol)\n\n        if (failedSymbolList && failedSymbolList.length > 0) {\n            notification.error({ message: failedSymbolList.map((i: any) => i.failedSymbol).join(\", \") })\n            return\n        }\n\n        let sortedRes = orderBy(res, 'totalNAV', \"desc\")\n        sortedRes = sortedRes.splice(0, 20)\n        const maxLength: any = maxBy(sortedRes, \"data.length\")\n        let result = [];\n        for (let i = 0; i < maxLength.data.length; i++) {\n            let item: any = {};\n            sortedRes.map((j: any) => {\n                item.count = i\n                item[j.symbol] = (j.data[i] || {}).totalNAV\n            })\n            result.push(item)\n        }\n        setListSymbol(sortedRes.map((i: any) => i.symbol))\n        setListData(result)\n        console.log(result)\n        update(sortedRes.map((i: any) => i.symbol))\n    }\n\n    const testVariable = async () => {\n        setLoading(true)\n        setTestType(\"testVariable\")\n\n        const chunkedListSymbol = chunk(listSymbol, 30)\n        console.log(chunkedListSymbol)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(getData(chunkedListSymbol[i][j], true, true))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n        const failedSymbolList = res.filter((i: any) => i.failedSymbol)\n\n        if (failedSymbolList && failedSymbolList.length > 0) {\n            notification.error({ message: failedSymbolList.map((i: any) => i.failedSymbol).join(\", \") })\n            return\n        }\n\n        let rootResult: any = [];\n        let tempRes: any;\n        range(50, 100).map((var4: any) => {\n            tempRes = cloneDeep(res).map((item: any) => {\n                item.fullData = item.data\n\n                item.data = item.data.filter((i: any, index: number) => {\n                    return i.priceChange\n                        && i.priceChange > 4\n                        && i.volume15dayChange > var4\n                        && i.previousDayChange < 4\n                        && i.open !== i.high\n                        && i.diffInMonth < 10\n                })\n                return item\n            })\n\n            const objRes = keyBy(tempRes, \"symbol\")\n            const result: any[] | PromiseLike<any[]> = [];\n            let buyDate: any;\n            let sellDate: any;\n            let buyDateObj: any;\n            let sellDateObj: any;\n            let percentChange: any;\n            let totalNAV = 100;\n\n            for (let d = moment(startDate); d.isBefore(moment(endDate)); d.add(1, \"days\")) {\n                const date = moment(d).format('YYYY-MM-DD')\n\n                if (!buyDate) {\n                    buyDateObj = findBuyDate(date, tempRes)\n                    if (buyDateObj && buyDateObj.tradingTime && (!sellDate || buyDateObj.tradingTime > sellDate)) {\n                        buyDate = buyDateObj.tradingTime\n                    }\n                }\n\n                if (buyDate) {\n                    sellDateObj = findSellDate(buyDate, objRes[buyDateObj.symbol].fullData)\n                    sellDate = sellDateObj && sellDateObj.tradingTime\n                    if (sellDate) {\n                        percentChange = Number(((sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose * 100).toFixed(2))\n                        totalNAV = Number((totalNAV * (1 + (sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose)).toFixed(0))\n                        result.push({\n                            buyDate,\n                            symbol: buyDateObj.symbol,\n                            sellDate,\n                            percentChange,\n                            totalNAV,\n                            volume15dayChange: buyDateObj.volume15dayChange\n                        })\n                        buyDate = null\n                    }\n                }\n            }\n            rootResult.push({\n                variableCombine: `${var4}`,\n                totalNAV: maxBy(result, \"totalNAV\").totalNAV,\n                result\n            })\n        })\n\n        rootResult = orderBy(rootResult, \"totalNAV\", \"desc\")\n        console.log(rootResult)\n        setTestVariableData(rootResult)\n    }\n\n    const clickTestCombine = async () => {\n        setTestType(\"combined\")\n        setLoading(true)\n\n        const chunkedListSymbol = chunk(listSymbol, 30)\n        console.log(chunkedListSymbol)\n        let res: any = [];\n        for (let i = 0; i < chunkedListSymbol.length; i++) {\n            const listPromises: any = []\n            for (let j = 0; j < chunkedListSymbol[i].length; j++) {\n                listPromises.push(getData(chunkedListSymbol[i][j], true))\n            }\n            const partialRes = await Promise.all(listPromises)\n            res = res.concat(partialRes)\n        }\n        setLoading(false)\n        const failedSymbolList = res.filter((i: any) => i.failedSymbol)\n\n        if (failedSymbolList && failedSymbolList.length > 0) {\n            notification.error({ message: failedSymbolList.map((i: any) => i.failedSymbol).join(\", \") })\n            return\n        }\n\n        const objRes = keyBy(res, \"symbol\")\n        const result: any[] | PromiseLike<any[]> = [];\n        let buyDate: any;\n        let sellDate: any;\n        let buyDateObj: any;\n        let sellDateObj: any;\n        let percentChange: any;\n        let totalNAV = 100;\n\n        for (let d = moment(startDate); d.isBefore(moment(endDate)); d.add(1, \"days\")) {\n            const date = moment(d).format('YYYY-MM-DD')\n\n            if (!buyDate) {\n                buyDateObj = findBuyDate(date, res)\n                if (buyDateObj && buyDateObj.tradingTime && (!sellDate || buyDateObj.tradingTime > sellDate)) {\n                    buyDate = buyDateObj.tradingTime\n                }\n            }\n\n            if (buyDate) {\n                sellDateObj = findSellDate(buyDate, objRes[buyDateObj.symbol].fullData)\n                sellDate = sellDateObj && sellDateObj.tradingTime\n                if (sellDate) {\n                    percentChange = Number(((sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose * 100).toFixed(2))\n                    totalNAV = Number((totalNAV * (1 + (sellDateObj.adjClose - buyDateObj.adjClose) / buyDateObj.adjClose)).toFixed(0))\n                    result.push({\n                        buyDate,\n                        symbol: buyDateObj.symbol,\n                        sellDate,\n                        percentChange,\n                        totalNAV\n                    })\n                    buyDate = null\n                }\n            }\n        }\n        // console.log(result)\n        result && setCombinedData(result)\n    }\n\n    const update = async (list: any) => {\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/1006042`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: \"highest_ROI_test\",\n                symbols: list,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: 1006042,\n            }\n        })\n        if (res && res.data) {\n            notification.success({ message: \"Success\" })\n        }\n    }\n\n    const getWatchlist = async () => {\n        const res: any = await StockService.getWatchlist()\n        if (res && res.data) {\n            setListWatchlists(res.data)\n        }\n    }\n\n    useEffect(() => {\n        getWatchlist();\n    }, [])\n\n    const dateFormat = 'YYYY-MM-DD';\n    const listDropdown = (listWatchlists.filter((i: any) => i.name === \"thanh_khoan_vua\")[0] || {}).symbols || []\n    const children: any = [];\n    for (let i = 0; i < listDropdown.length; i++) {\n        children.push(<Option value={listDropdown[i]} key={i}>{listDropdown[i]}</Option>);\n    }\n\n    const objWatchlists = keyBy(listWatchlists, \"watchlistID\")\n\n    const menu = (\n        <Menu onClick={(item: any) => {\n            setSelectedWatchlist(objWatchlists[item.key])\n            setListSymbol(objWatchlists[item.key].symbols)\n        }}>\n            {\n                listWatchlists.map((i: any) => {\n                    return <Menu.Item key={i.watchlistID}>\n                        {i.name}\n                    </Menu.Item>\n                })\n            }\n        </Menu>\n    );\n\n    const leftHeader = () => {\n        return <div style={{ width: \"50%\", height: \"100%\", overflow: \"auto\" }}>\n            <RangePicker\n                onChange={(e: any) => {\n                    setStartDate(moment(e[0]).format(dateFormat))\n                    setEndDate(moment(e[1]).format(dateFormat))\n                }}\n                defaultValue={[moment(startDate, dateFormat), moment(endDate, dateFormat)]}\n                format={dateFormat}\n            />\n            <hr />\n            <Input onPressEnter={() => getData(symbol)} style={{ width: \"200px\" }} value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n            <Button onClick={() => {\n                setTestType(\"single\")\n                getData(symbol)\n            }}>Test</Button>\n            <hr />\n            <Dropdown overlay={menu} placement=\"bottomLeft\" arrow>\n                <div>{(selectedWatchlist && selectedWatchlist.name) || \"Select watchlist\"}</div>\n            </Dropdown>\n            <Select\n                mode=\"multiple\"\n                allowClear\n                style={{ width: '100%' }}\n                placeholder=\"Please select\"\n                value={listSymbol}\n                onChange={(e) => setListSymbol(e)}\n            >\n                {children}\n            </Select>\n            <Button disabled={loading} onClick={testList}>Test List</Button>\n            <hr />\n            <Button disabled={loading} onClick={clickTestCombine}>Test Combine Auto Find Symbol</Button>\n            <hr />\n            <Input onPressEnter={testVariable} style={{ width: \"200px\" }} value={volume15dayChange} onChange={(e) => setVolume15dayChange(Number(e.target.value))} />\n            <Button disabled={loading} onClick={testVariable}>Test variable</Button>\n            <div>\n                <div>Number days till sell: 19</div>\n                <div>Profit percent to sell: 10%</div>\n                <div>Stop loss percent to sell: -3%</div>\n                <div>{`Find buy date: if > 1 results found, order by volume15dayChange`}</div>\n            </div>\n        </div>\n    }\n\n    const rightHeader = () => {\n        return <div style={{ width: \"50%\", height: \"100%\", overflow: \"auto\" }}>\n            <ReactMarkdown>\n                {`\n                    \\n - dau tu 1 ma theo chien thuat nay       \n                    \\n - So tien ban dau: 100\n                    \\n - So tien them hang thang: 30\n                    \\n - findSellDate\n                    \\n   - within 19 trading days\n                    \\n   - sell all if < -3\n                    \\n   - sell all if > 10\n                `}\n            </ReactMarkdown>\n        </div>\n    }\n\n    const content = () => {\n        return <div>\n            {!testType && \"No content\"}\n            {testType === \"single\" && <div>\n                <Table\n                    dataSource={data}\n                    columns={singleColumns}\n                    pagination={false}\n                    scroll={{ y: 800 }} />\n            </div>}\n\n            {testType === \"multiple\" && (\n                loading\n                    ? <Spin />\n                    : <div>\n                        <StockTestBreak_GraphsTab data={listData} listDataKey={listSymbol} />\n                    </div>\n            )}\n\n            {testType === \"combined\" && (\n                loading\n                    ? <Spin />\n                    : <div>\n                        <Table\n                            dataSource={combinedData}\n                            columns={combinedColumns}\n                            pagination={false}\n                            scroll={{ y: 800 }} />\n                    </div>\n            )}\n\n            {testType === \"testVariable\" && (\n\n                loading\n                    ? <Spin />\n                    : <div>\n                        <div style={{ display: \"flex\" }}>\n                            <div>{`<100: ${testVariableData.filter((i: any) => i.totalNAV < 100).length}`}</div>\n                            <div>{`>100: ${testVariableData.filter((i: any) => i.totalNAV > 100 && i.totalNAV < 200).length}`}</div>\n                            <div>{`>200: ${testVariableData.filter((i: any) => i.totalNAV > 200 && i.totalNAV < 300).length}`}</div>\n                            <div>{`>300: ${testVariableData.filter((i: any) => i.totalNAV > 300 && i.totalNAV < 400).length}`}</div>\n                            <div>{`>400: ${testVariableData.filter((i: any) => i.totalNAV > 400).length}`}</div>\n                        </div>\n                        <Table\n                            dataSource={testVariableData}\n                            columns={testVariableColumns}\n                            pagination={false}\n                            scroll={{ y: 800 }} />\n                    </div>\n\n            )}\n        </div>\n    }\n\n    return <div>\n        <div style={{ display: \"flex\", height: \"400px\" }}>\n            {leftHeader()}\n            {rightHeader()}\n        </div>\n        {content()}\n    </div>\n}\n\n","\nimport { useState } from \"react\";\nimport { Tabs } from \"antd\";\n\nimport StockTestBreak_TestTab from \"./StockTestBreak_TestTab\"\nimport StockTestBreak_GraphsTab from \"./StockTestBreak_GraphsTab\"\nimport StockTestBreak_ScoreboardTab from \"./StockTestBreak_ScoreboardTab\"\nimport StockTestBreak_OverviewTab from \"./StockTestBreak_OverviewTab\"\n\nconst { TabPane } = Tabs;\n\nexport default function StockTestBreak() {\n    const [tab, setTab] = useState(\"overview\");\n\n    return <div>\n        <div>\n            <Tabs defaultActiveKey=\"overview\" onChange={(key) => setTab(key)}>\n                <TabPane tab=\"Overview\" key=\"overview\" />\n                <TabPane tab=\"Scoreboard\" key=\"scoreboard\" />\n                <TabPane tab=\"Graphs\" key=\"graphs\" />\n                <TabPane tab=\"Test\" key=\"test\" />\n            </Tabs>\n        </div>\n        {tab === \"overview\" && <StockTestBreak_OverviewTab />}\n        {tab === \"scoreboard\" && <StockTestBreak_ScoreboardTab />}\n        {tab === \"graphs\" && <StockTestBreak_GraphsTab />}\n        {tab === \"test\" && <StockTestBreak_TestTab />}\n    </div >\n}\n\n\n\n","import ReactMarkdown from \"react-markdown\";\nimport { useState } from \"react\";\nimport { Timeline, Modal } from 'antd';\n\nexport default function StockEvent() {\n    const listEvents = [\n        {\n            time: \"21-09-2021\",\n            name: \"Evergrande Khung hoang no\",\n            note: `\n             \\n - [Link docs](https://www.youtube.com/watch?v=Fw33gICwH1M)\n             \\n - Thi truong giam diem mo gap\n            `\n        },\n        {\n            time: \"07-09-2021\",\n            name: \"Thong tu 14/2021\",\n            note: `\n             \\n - [https://www.youtube.com/watch?v=-4syULW86eM](https://www.youtube.com/watch?v=-4syULW86eM)\n             \\n - Lui thoi han tra no cho khach hang. Trich lap du phong ngan hang khong duoc lui thoi han.\n            `\n        },\n        {\n            time: \"02-04-2021\",\n            name: \"Thong tu 03/2021\",\n            note: `\n             \\n - [Link docs](https://luatvietnam.vn/tai-chinh/thong-tu-03-2021-tt-nhnn-quy-dinh-co-cau-lai-thoi-han-tra-no-ho-tro-khach-hang-chiu-anh-huong-boi-dich-covid-19-200630-d1.html)\n             \\n - \n            `\n        },\n        {\n            time: \"19-01-2021\",\n            name: \"Thong tu 01/2021\",\n            note: `\n             \\n - [Link docs](http://www.chinhphu.vn/portal/page/portal/chinhphu/hethongvanban?class_id=1&mode=detail&document_id=99777)\n             \\n - \n            `\n        },\n\n\n    ]\n\n    return <div>\n        <Timeline mode={'left'}>\n            {\n                listEvents.map((i: any) => {\n                    return <Timeline.Item>\n                        <StockEventItem data={i} />\n                    </Timeline.Item>\n                })\n            }\n\n        </Timeline>\n    </div>\n}\n\ninterface StockEventItemProps {\n    data: any;\n}\n\nfunction StockEventItem({ data }: StockEventItemProps) {\n    const [modal, setModal] = useState(false)\n    return <>\n        <div onClick={() => setModal(true)} >\n            {data.time} - {data.name}\n        </div>\n        {modal && <Modal visible={true} onCancel={() => setModal(false)} footer={null} >\n            <ReactMarkdown>\n                {data.note}\n            </ReactMarkdown>\n        </Modal>}\n    </>\n}","import { useState, useEffect, useCallback } from \"react\";\nimport { keyBy, meanBy } from \"lodash\";\nimport { notification, Table, Button } from \"antd\";\nimport axios from \"axios\";\nimport { CloseOutlined } from '@ant-design/icons'\nimport StockEvent from \"../StockEvent/StockEvent\";\n\nimport StockService from '../../../services/stock'\nimport \"./StockMarketOverview.css\";\n\nexport default function StockMarketOverview() {\n    const [listWatchlists, setListWatchlists] = useState([])\n    const [data1, setData1] = useState([]);\n    const [data2, setData2] = useState([]);\n    const [data3, setData3] = useState([]);\n    const [data4, setData4] = useState([]);\n    const [filtered, setFiltered] = useState(false);\n    const [editable, setEditable] = useState(false);\n    const [confirmReset, setConfirmReset] = useState(false)\n    const [changePercentMin, setChangePercentMin] = useState(null)\n    const [changePercentMax, setChangePercentMax] = useState(null)\n    const [estimatedVolumeChange, setEstimatedVolumeChange] = useState(null)\n\n    const fetch = async (listWatchlists: any, watchlistName: string) => {\n        const xxx = keyBy(listWatchlists, \"name\")\n        const xxx2 = xxx[watchlistName];\n        const listPromises: any = [];\n        ((xxx2 || {}).symbols || []).forEach((i: any) => {\n            listPromises.push(StockService.getHistoricalQuotes(i, null, null, 'fireant'))\n        })\n        return Promise.all(listPromises).then(res => {\n            let mappedData = res\n                .map((i: any) => {\n                    const listItem = i.data\n                    const changePercent = (listItem[0].priceClose - listItem[1].priceClose) / listItem[1].priceClose * 100\n                    const todayItem = listItem[0]\n                    // listItem.splice(0, 1)\n                    const averageVolume15Days = meanBy(listItem, 'dealVolume')\n\n                    const estimatedVolumeChange = (todayItem.dealVolume / averageVolume15Days) * 100\n                    return {\n                        symbol: todayItem.symbol,\n                        changePercent: Number(changePercent.toFixed(1)),\n                        estimatedVolumeChange: Number(estimatedVolumeChange.toFixed(0)),\n                        todayVolume: (todayItem.dealVolume / 1000000).toFixed(2),\n                        averageVolume15Days: (averageVolume15Days / 1000000).toFixed(2)\n                    }\n                })\n                .sort((a: any, b: any) => {\n                    return b.changePercent - a.changePercent\n                })\n            return mappedData\n        })\n    }\n\n    const fetchList = async () => {\n        const res = await StockService.getWatchlist()\n        if (res && res.data) {\n            setListWatchlists(res.data)\n            fetch(res.data, \"8633_dau_co_va_BDS\").then(res => setData1(res))\n            fetch(res.data, \"8781_chung_khoan\").then(res => setData2(res))\n            fetch(res.data, \"watching\").then(res => setData3(res))\n            fetch(res.data, \"aim_to_buy\").then(res => setData4(res))\n        }\n    }\n\n    const handleReset = async () => {\n        const listThanhKhoanVua = keyBy(listWatchlists, \"watchlistID\")['737544']\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/1140364`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: 'aim_to_buy',\n                symbols: listThanhKhoanVua.symbols,\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: 1140364,\n            }\n        })\n        if (res && res.data) {\n            fetchList()\n            notification.success({ message: \"Success\" })\n        }\n    }\n\n    const handleRemove = async (symbol: string) => {\n        const removedData = data4.filter((i: any) => i.symbol !== symbol)\n        setData4(removedData)\n        const res = await axios({\n            method: \"PUT\",\n            url: `https://restv2.fireant.vn/me/watchlists/1140364`,\n            headers: {\n                \"authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSIsImtpZCI6IkdYdExONzViZlZQakdvNERWdjV4QkRITHpnSSJ9.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4iLCJhdWQiOiJodHRwczovL2FjY291bnRzLmZpcmVhbnQudm4vcmVzb3VyY2VzIiwiZXhwIjoxOTEzNzE1ODY4LCJuYmYiOjE2MTM3MTU4NjgsImNsaWVudF9pZCI6ImZpcmVhbnQudHJhZGVzdGF0aW9uIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIsInJvbGVzIiwiZW1haWwiLCJhY2NvdW50cy1yZWFkIiwiYWNjb3VudHMtd3JpdGUiLCJvcmRlcnMtcmVhZCIsIm9yZGVycy13cml0ZSIsImNvbXBhbmllcy1yZWFkIiwiaW5kaXZpZHVhbHMtcmVhZCIsImZpbmFuY2UtcmVhZCIsInBvc3RzLXdyaXRlIiwicG9zdHMtcmVhZCIsInN5bWJvbHMtcmVhZCIsInVzZXItZGF0YS1yZWFkIiwidXNlci1kYXRhLXdyaXRlIiwidXNlcnMtcmVhZCIsInNlYXJjaCIsImFjYWRlbXktcmVhZCIsImFjYWRlbXktd3JpdGUiLCJibG9nLXJlYWQiLCJpbnZlc3RvcGVkaWEtcmVhZCJdLCJzdWIiOiIxZmI5NjI3Yy1lZDZjLTQwNGUtYjE2NS0xZjgzZTkwM2M1MmQiLCJhdXRoX3RpbWUiOjE2MTM3MTU4NjcsImlkcCI6IkZhY2Vib29rIiwibmFtZSI6Im1pbmhwbi5vcmcuZWMxQGdtYWlsLmNvbSIsInNlY3VyaXR5X3N0YW1wIjoiODIzMzcwOGUtYjFjOS00ZmQ3LTkwYmYtMzI2NTYzYmU4N2JkIiwianRpIjoiYzZmNmNkZWE2MTcxY2Q5NGRiNWZmOWZkNDIzOWM0OTYiLCJhbXIiOlsiZXh0ZXJuYWwiXX0.oZ8S_sTP6qVRJqY4h7g0JvXVPB0k8tm4go9pUFD0sS_sDZbC6zjelAVVNGHWJja82ewJbUEmTJrnDWAKR-rg5Pprp4DW7MzaN0lw3Bw0wEacphtyglx-H14-0Wnv_-2KMyQLP5EYH8wgyiw9I3ig_i7kHJy-XgCd__tdoMKvarkIXPzJJJY32gq-LScWb3HyZsfEdi-DEZUUzjAHR1nguY8oNmCiA6FaQCzOBU_qfgmOLWhN9ZNN1G3ODAeoOnphLJuWjHIrwPuVXy6B39eU2PtHmujtw_YOXdIWEi0lRhqV1pZOrJEarQqjdV3K5XNwpGvONT8lvUwUYGoOwwBFJg\"\n            },\n            data: {\n                name: 'aim_to_buy',\n                symbols: removedData.map((i: any) => i.symbol),\n                userName: \"minhpn.org.ec1@gmail.com\",\n                watchlistID: 1140364,\n            }\n        })\n        if (res && res.data) {\n            fetchList()\n            notification.success({ message: \"Success\" })\n        }\n\n    }\n\n    const handleFilter = () => {\n        if (filtered) {\n            setFiltered(false)\n            setChangePercentMax(null);\n            setChangePercentMin(null);\n            setEstimatedVolumeChange(null);\n        } else {\n            setFiltered(true)\n            setChangePercentMax(5);\n            setChangePercentMin(1);\n            setEstimatedVolumeChange(50);\n        }\n    }\n\n    useEffect(() => {\n        fetchList()\n        // setInterval(() => {\n        //     fetchList()\n        // }, 60000)\n    }, [])\n\n    const columns = [\n        {\n            title: 'Symbol',\n            sorter: (a: any, b: any) => {\n                return (a.symbol).localeCompare(b.symbol)\n            },\n            render: (i: any) => {\n\n                return <div style={{ width: \"60px\" }}>{i.symbol} {editable && <CloseOutlined style={{ marginLeft: \"2px\" }} onClick={() => handleRemove(i.symbol)} />} </div>\n            }\n        },\n        {\n            title: '%change',\n            sorter: (a: any, b: any) => {\n                return a.changePercent - b.changePercent\n            },\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.changePercent\n            }\n        },\n        {\n            title: '%volume',\n            sorter: (a: any, b: any) => {\n                return a.estimatedVolumeChange - b.estimatedVolumeChange\n            },\n            align: 'right' as 'right',\n            render: (data: any) => {\n                return data.estimatedVolumeChange\n            }\n        },\n    ]\n\n    const dataSource = filtered\n        ? data4.filter((i: any) =>\n            (changePercentMin && i.changePercent > changePercentMin)\n            && (changePercentMax && i.changePercent < changePercentMax)\n            && (estimatedVolumeChange && i.estimatedVolumeChange > estimatedVolumeChange))\n        : data4\n\n    return <div style={{ background: \"white\", display: 'flex' }} className=\"StockMarketOverview\">\n        <div style={{ display: \"flex\" }}>\n            <div>\n                <div>bds</div>\n                {\n                    data1.map((i: any) => {\n                        let color = \"rgb(204, 170, 0)\"\n                        if (i.changePercent > 0) {\n                            if (i.changePercent > 6.5) {\n                                color = \"rgb(255, 0, 255)\"\n                            } else {\n                                color = \"green\"\n                            }\n\n                        }\n                        if (i.changePercent < 0) {\n                            if (i.changePercent < -6.5) {\n                                color = \"rgb(0, 204, 204)\"\n                            } else {\n                                color = \"red\"\n                            }\n\n                        }\n                        return <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\", color }}>\n                            <div>{i.symbol} </div>\n                            <div>{i.changePercent}</div>\n                        </div>\n                    })\n                }\n            </div>\n            <div style={{ margin: \"0 20px\" }}>\n                <div>Ck</div>\n                {\n                    data2.map((i: any) => {\n                        let color = \"rgb(204, 170, 0)\"\n                        if (i.changePercent > 0) {\n                            if (i.changePercent > 6.5) {\n                                color = \"rgb(255, 0, 255)\"\n                            } else {\n                                color = \"green\"\n                            }\n\n                        }\n                        if (i.changePercent < 0) {\n                            if (i.changePercent < -6.5) {\n                                color = \"rgb(0, 204, 204)\"\n                            } else {\n                                color = \"red\"\n                            }\n\n                        }\n                        return <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\", color }}>\n                            <div>{i.symbol} </div>\n                            <div>{i.changePercent}</div>\n                        </div>\n                    })\n                }\n            </div>\n            <div>\n                <div>watching</div>\n                {\n                    data3.map((i: any) => {\n                        let color = \"rgb(204, 170, 0)\"\n                        if (i.changePercent > 0) {\n                            if (i.changePercent > 6.5) {\n                                color = \"rgb(255, 0, 255)\"\n                            } else {\n                                color = \"green\"\n                            }\n\n                        }\n                        if (i.changePercent < 0) {\n                            if (i.changePercent < -6.5) {\n                                color = \"rgb(0, 204, 204)\"\n                            } else {\n                                color = \"red\"\n                            }\n\n                        }\n                        return <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100px\", color }}>\n                            <div>{i.symbol} </div>\n                            <div>{i.changePercent}</div>\n                        </div>\n                    })\n                }\n            </div>\n            <div style={{ margin: \"0 20px\", display: \"flex\" }}>\n\n                <div style={{ width: \"300px\" }}>\n                    <Table\n                        size=\"small\"\n                        dataSource={dataSource}\n                        columns={columns}\n                        pagination={false}\n                        scroll={{ y: 500 }} />\n                </div>\n                <div style={{ marginLeft: \"20px\" }}>\n                    <div>\n                        {\n                            confirmReset\n                                ? <div style={{ display: \"flex\" }}>\n                                    <Button onClick={handleReset}>Sure</Button>\n                                    <Button onClick={() => setConfirmReset(false)}>Cancel</Button>\n                                </div>\n                                : <Button onClick={() => setConfirmReset(true)}> Reset</Button>\n                        }\n                        <Button onClick={() => setEditable(!editable)}>Edit</Button>\n\n                    </div>\n                    <div>\n                        <Button onClick={handleFilter}>Turn {filtered ? \"Off\" : \"On\"} Filtered</Button>\n                        <div>\n                            Change Percent Min: {changePercentMin}\n                        </div>\n                        <div>\n                            Change Percent Max: {changePercentMax}\n                        </div>\n                        <div>\n                            Volume Change: {estimatedVolumeChange}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <StockEvent />\n        </div>\n    </div>\n}\n","import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { debounce } from \"lodash\";\nimport { Button, Modal, Input, notification } from \"antd\";\n\nimport HistoryTrade from \"./HistoryTrade/HistoryTrade\";\nimport StockTools from \"./StockTools/StockTools\";\nimport StockTestBreak from \"./StockTestBreak/StockTestBreak\";\nimport StockMarketOverview from \"./StockMarketOverview/StockMarketOverview\";\n\nconst { TextArea } = Input\n\nexport default function Stock() {\n    const [modal, setModal] = useState(null);\n    const [note, setNote] = useState(`\\n # Write something here for note`);\n    const [editNote, setEditNote] = useState(false);\n\n    const getStockNote = async () => {\n        const res: any = await axios({\n            url: \"https://testapi.io/api/aminhp93/resource/note/1\",\n            data: {\n                title: \"stock\",\n                content: note\n            },\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n            method: \"GET\"\n        })\n        if (res && res.data && res.data.content) {\n            setNote(res.data.content)\n        }\n    }\n\n    useEffect(() => {\n        getStockNote();\n    }, [])\n\n    const handleChangeNote = (e: any) => {\n        debounnceHandleChangeNote(e.target.value)\n    }\n\n    const debounnceHandleChangeNote = useCallback(debounce((value) => {\n        if (value) {\n            axios({\n                url: \"https://testapi.io/api/aminhp93/resource/note/1\",\n                data: {\n                    title: \"stock\",\n                    content: value\n                },\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n                method: \"PUT\"\n            }).then(res => {\n                // console.log(res)\n            }).catch(error => {\n                notification.error({ message: \"Error Update Note\" })\n            })\n        }\n        setNote(value)\n\n    }, 1000), [])\n\n    return <div style={{ background: \"lightblue\", height: \"100%\", overflow: \"auto\" }} onMouseDown={e => e.stopPropagation()}>\n        <div>\n            <StockMarketOverview />\n        </div>\n        <div style={{ textAlign: \"start\" }}>\n            <Button onClick={() => setEditNote(!editNote)}>\n                {editNote ? 'Edit' : 'Not edit'}\n            </Button>\n            {editNote\n                ? <TextArea\n                    // onPressEnter={() => setEditNote(false)}\n                    defaultValue={note} onChange={handleChangeNote} />\n                : <ReactMarkdown children={note} />\n            }\n        </div>\n\n        <div className=\"flex\" >\n            <div style={{ flex: 1 }}>\n                <Button onClick={() => setModal(\"HistoryTrade\")}>History Trade</Button>\n                <br />\n                <Button onClick={() => setModal(\"StockTools\")}>Stock Tools</Button>\n                <br />\n            </div>\n            <div style={{ flex: 1 }}>\n                <Button onClick={() => setModal(\"StockTestBreak\")}>Test Break (Dev mode)</Button>\n            </div>\n        </div>\n        {\n            modal && <Modal className=\"custom-modal\" visible={true} onCancel={() => setModal(null)} footer={null}>\n                {modal === \"HistoryTrade\" && <HistoryTrade />}\n                {modal === \"StockTools\" && <StockTools />}\n                {modal === \"StockTestBreak\" && <StockTestBreak />}\n            </Modal>\n        }\n    </div>\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport { Button, Input, notification } from 'antd';\nimport axios from 'axios';\nimport { debounce, } from \"lodash\";\nimport ReactMarkdown from \"react-markdown\";\nimport YouTube from 'react-youtube';\n\nconst { TextArea } = Input;\n\nexport default function Todos() {\n    const [editNote, setEditNote] = useState(false)\n    const [note, setNote] = useState(`\\n # Write something here for note`);\n\n    const getStockNote = async () => {\n        const res: any = await axios({\n            url: \"https://testapi.io/api/aminhp93/resource/note/3\",\n            data: {\n                title: \"stock\",\n                content: note\n            },\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8',\n            },\n            method: \"GET\"\n        })\n        if (res && res.data && res.data.content) {\n            setNote(res.data.content)\n        }\n    }\n\n\n    const handleChangeNote = (e: any) => {\n        debounnceHandleChangeNote(e.target.value)\n    }\n\n    const debounnceHandleChangeNote = useCallback(debounce((value) => {\n        if (value) {\n            axios({\n                url: \"https://testapi.io/api/aminhp93/resource/note/3\",\n                data: {\n                    title: \"stock\",\n                    content: value\n                },\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n                method: \"PUT\"\n            }).then(res => {\n                // console.log(res)\n            }).catch(error => {\n                notification.error({ message: \"Error Update Note\" })\n            })\n        }\n        setNote(value)\n\n    }, 1000), [])\n\n    useEffect(() => {\n        getStockNote();\n    }, [])\n\n    const opts = {\n        // height: '390',\n        // width: '640',\n        // playerVars: {\n        //     // https://developers.google.com/youtube/player_parameters\n        //     autoplay: 1,\n        // },\n    };\n\n    const _onReady = (event: any) => {\n        // access to player in all event handlers via event.target\n        event.target.pauseVideo();\n    }\n\n\n    return <div>Todos\n        <div style={{ textAlign: \"start\" }}>\n            <Button onClick={() => setEditNote(!editNote)}>\n                {editNote ? 'Edit' : 'Not edit'}\n            </Button>\n            {editNote\n                ? <TextArea\n                    // onPressEnter={() => setEditNote(false)}\n                    defaultValue={note} onChange={handleChangeNote} />\n                : <ReactMarkdown children={note} />\n            }\n        </div>\n        <Button type=\"primary\" className=\"test flex\">Hello</Button>\n        {/* <YouTube videoId=\"2g811Eo7K8U\" opts={opts} onReady={_onReady} /> */}\n    </div>\n}\n","import Chessground from 'react-chessground';\nimport 'react-chessground/dist/styles/chessground.css';\n\nexport default function Game() {\n    return <div >\n\n        <a href=\"https://lichess.org/training\" target=\"_blank\" rel=\"noreferrer\" />\n        <Chessground />\n    </div>\n}\n","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport fs from \"fs\";\nimport { Upload, message, Button } from \"antd\";\nimport { UploadOutlined } from '@ant-design/icons';\n\nexport default function Music() {\n    const test = async () => {\n        // const res = await axios({\n        //     url: \"https://api.imgur.com/3/image/{{imageHash}}\",\n        //     headers: {\n        //         Authorization: 'Client-ID '\n        //     },\n        //     data: {\n        //         image: fs.readFileSync(img_path, \"base64\"),\n        //         type: \"base64\",\n        //         description: \"123\"\n        //       }\n        // })\n    }\n\n    const props = {\n        name: 'file',\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n        headers: {\n            authorization: 'authorization-text',\n        },\n        onChange(info: any) {\n            console.log(info)\n            if (info.file.status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (info.file.status === 'done') {\n                message.success(`${info.file.name} file uploaded successfully`);\n            } else if (info.file.status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n    };\n\n\n    useEffect(() => {\n        test()\n    }, [])\n    return <div>\n        <ReactMarkdown>\n            {`\n                \\n - Đang yêu:\n                \\n   - [Đúng người đúng thời điểm](https://www.youtube.com/watch?v=2MZ_oQOGC24)\n                \\n   - [Tây Vương Nữ Quốc](https://www.youtube.com/watch?v=J9uBBbPPhdE) \n                \\n   - [Mộng uyên ương hồ điệp](https://www.youtube.com/watch?v=RFUfg_tswIs)\n                \\n   - [Ánh trăng tình ái](https://www.youtube.com/watch?v=DsDEGuFwzq0)\n\n                \\n - Gọi thức dậy:\n                \\n   - [Europe's Skies - Alexander Rybak](https://www.youtube.com/watch?v=daqfr6DJsGc)\n            `}\n        </ReactMarkdown>\n\n        <Upload {...props}>\n            <Button icon={<UploadOutlined />}>Click to Upload</Button>\n        </Upload>\n    </div>\n}","import ReactMarkdown from \"react-markdown\";\n\nexport default function Sport() {\n    return <div>\n        <ReactMarkdown>\n            {`\n                \\n# Lich thi dau cac giai tennis\n            `}\n        </ReactMarkdown>\n    </div>\n}\n","export default function HistorialEvents() {\n    return <div>HistorialEvents</div>\n}","export default function MemorialSpeech() {\n    return <div>MemorialSpeech</div>\n}","import ReactMarkdown from \"react-markdown\";\n\nexport default function Funny() {\n    return <div>\n        <ReactMarkdown>\n            {`\n                \\n - [3 con ha ma](https://vt.tiktok.com/ZSJKUuV2D/)\n            `}\n        </ReactMarkdown>\n    </div>\n}","import { useState } from 'react';\nimport { Button, Modal } from 'antd';\n\nimport Game from './Game/Game';\nimport Music from './Music/Music';\nimport Sport from './Sport/Sport';\nimport HistorialEvents from './HistorialEvents/HistorialEvents';\nimport MemorialSpeech from './MemorialSpeech/MemorialSpeech';\nimport Funny from './Funny/Funny';\n\nexport default function Utility() {\n    const [modal, setModal] = useState(null)\n    return <div onMouseDown={e => e.stopPropagation()}>\n        <div>Utility</div>\n        <Button onClick={() => setModal(\"Game\")}>Game</Button>\n        <br />\n        <Button onClick={() => setModal(\"Music\")}>Music</Button>\n        <br />\n        <Button onClick={() => setModal(\"Sport\")}>Sport</Button>\n        <br />\n        <Button onClick={() => setModal(\"HistorialEvents\")}>Historical Events</Button>\n        <br />\n        <Button onClick={() => setModal(\"MemorialSpeech\")}>Memorial Speech</Button>\n        <br />\n        <Button onClick={() => setModal(\"Funny\")}>Funny</Button>\n\n        {\n            modal && <Modal className=\"custom-modal\" visible={true} onCancel={() => setModal(null)} footer={null}>\n                {modal === \"Game\" && <Game />}\n                {modal === \"Music\" && <Music />}\n                {modal === \"Sport\" && <Sport />}\n                {modal === \"HistorialEvents\" && <HistorialEvents />}\n                {modal === \"MemorialSpeech\" && <MemorialSpeech />}\n                {modal === \"Funny\" && <Funny />}\n            </Modal>\n        }\n    </div>\n}\n","import { useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport ReactGridLayout from 'react-grid-layout';\nimport remarkGfm from 'remark-gfm'\nimport { Table } from 'antd';\n\nimport '../../../node_modules/react-grid-layout/css/styles.css'\nimport '../../../node_modules/react-resizable/css/styles.css'\nimport News from '../News/News'\nimport Stock from '../Stock/Stock'\nimport Todos from '../Todos/Todos'\nimport Utility from '../Utility/Utility'\n\nconst ResponsiveReactGridLayout = ReactGridLayout.WidthProvider(ReactGridLayout.Responsive);\n\nexport default function ReactGridRoot() {\n    // layout is an array of objects, see the demo for more complete usage\n    const gridItems: any = [\n        { id: 1, name: \"Item One\", component: \"Stock\" },\n        { id: 2, name: \"Item Two\", component: \"Todos\" },\n        // { id: 3, name: \"Item Three\" },\n        // { id: 4, name: \"Item Four\", component: \"Utility\" },\n        // { id: 5, name: \"Item Five\", component: \"News\" },\n        // { id: 6, name: \"Item Six\" },\n        // { id: 7, name: \"Item Seven\" },\n        // { id: 8, name: \"Item Eight\" },\n        // { id: 9, name: \"Item Nine\" }\n    ];\n    const layout = [\n        { i: '1', x: 0, y: 0, w: 8, h: 6 },\n        { i: '2', x: 8, y: 0, w: 4, h: 6 },\n        // { i: '3', x: 8, y: 0, w: 3, h: 2 },\n        // { i: '4', x: 0, y: 6, w: 6, h: 6 },\n        // { i: '5', x: 6, y: 6, w: 6, h: 6 },\n        // { i: '6', x: 8, y: 3, w: 3, h: 2 },\n        // { i: '7', x: 0, y: 6, w: 5, h: 2 },\n        // { i: '8', x: 5, y: 6, w: 3, h: 2 },\n        // { i: '9', x: 8, y: 6, w: 3, h: 2 }\n    ];\n\n    const dataSource = [\n        {\n            key: '1',\n            text: '# H1',\n        },\n        {\n            key: '2',\n            text: '**bold text**',\n        },\n        {\n            key: '3',\n            text: '*italicized text*',\n        },\n        {\n            key: '4',\n            text: '> blockquote',\n        },\n        {\n            key: '5',\n            text: '1. Ordered item',\n        },\n        {\n            key: '6',\n            text: '- Unordered item'\n        },\n    ];\n\n    const columns = [\n        {\n            title: 'Element',\n            render: (data: any) => {\n                return <div><ReactMarkdown children={data.text} remarkPlugins={[remarkGfm]} /></div>\n            }\n        },\n        {\n            title: 'Syntax',\n            render: (data: any) => {\n                return <div>{data.text}</div>\n            }\n        },\n    ];\n\n    const getComponent = (data: any) => {\n        if (data.component === \"News\") {\n            return <News />\n        } else if (data.component === \"Stock\") {\n            return <Stock />\n        } else if (data.component === \"Todos\") {\n            return <Todos />\n        } else if (data.component === \"Utility\") {\n            return <Utility />\n        } else {\n            return <div>\n                <Table dataSource={dataSource} columns={columns} pagination={false} />\n            </div>\n        }\n    }\n\n    useEffect(() => {\n\n    }, [])\n\n    return <div>\n        <ResponsiveReactGridLayout\n            layouts={{ lg: layout }}\n            measureBeforeMount={true}\n            className=\"layout\"\n            // rowHeight={this.props.rowHeight}\n            // isDragable={true}\n            // isResizable={false}\n            // isDroppable={false}\n            // preventCollision={false}\n            // onDrag={this.onDragging}\n            // onDragStop={this.onMoveCard}\n            // onResizeStop={this.onResizeCard}\n            margin={[0, 0]}\n        >\n            {gridItems.map((item: any, i: any) => {\n                return (\n                    <div key={item.id} className=\"grid-item\">{getComponent(item)}</div>\n                );\n            })}\n        </ResponsiveReactGridLayout>\n    </div>\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Nhi from './pages/Nhi/Nhi'\n\nimport ReactGridRoot from './pages/ReactGridRoot/ReactGridRoot'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{ height: \"100%\" }}>\n        <Switch>\n          <Route path=\"/nhi\">\n            <Nhi />\n          </Route>\n          <Route path=\"/\">\n            <ReactGridRoot />\n          </Route>\n          <Route path=\"/\">\n            <nav>\n              <ul>\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n              </ul>\n            </nav>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk, { ThunkAction } from \"redux-thunk\"\nimport rootReducer from \"../reducers\"\nimport { Action } from '@reduxjs/toolkit';\n\nconst composeEnhancers =\n    typeof window === \"object\" &&\n        process.env.NODE_ENV === \"development\" &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n        ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n        : compose\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\nconst store = createStore(rootReducer, enhancer)\n\nexport type DispatchType = typeof store.dispatch\n\nexport type RootStateType = ReturnType<typeof rootReducer>\n\nexport type ThunkActionType = ThunkAction<void, RootStateType, unknown, Action<string>>\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom'\n\nimport './styles/index.less';\n\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}